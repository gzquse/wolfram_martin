(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    535760,      12793]
NotebookOptionsPosition[    436400,      10965]
NotebookOutlinePosition[    492666,      12089]
CellTagsIndexPosition[    492407,      12078]
WindowTitle->Assignments, Rules and Patterns
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Assignments, Rules and Patterns", "Subtitle",ExpressionUUID->"beafe8fb-250e-4ed5-af7b-a7667178a427"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",ExpressionUUID->"c88abc12-172e-4f40-b4ac-722ef0f5b92a"],

Cell["\<\
Understand how Wolfram Language handles one of the most common tasks of \
programming\[LongDash]defining variables and functions\
\>", "Item",ExpressionUUID->"265e4368-8c79-486b-a14b-a07095c33d3b"],

Cell["Create and use replacement rules to transform expressions", "Item",ExpressionUUID->"c1ae1d4a-18d2-4a6e-b496-67ef1788b420"],

Cell["\<\
Also learn about the extensive pattern-matching capabilities of Wolfram \
Language\
\>", "Item",ExpressionUUID->"bb7bdcca-ff01-4a5b-9f52-b47c0b685e96"],

Cell[CellGroupData[{

Cell["Assignments", "Subsection",ExpressionUUID->"e53e344c-3a6c-40fe-9f49-35bef152641a"],

Cell["Assign values to symbols used as variables and functions ", "Item",ExpressionUUID->"f223a17a-b8a0-40d8-a17f-c612be6cfc6f"],

Cell["Immediate versus delayed assignments", "Item",ExpressionUUID->"4867178f-c9da-4493-84d4-00633eadfcb6"],

Cell["Multiple definitions for a function", "Item",ExpressionUUID->"bcac4b35-fe92-4bfe-bf75-a5d36b1771bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rules", "Subsection",ExpressionUUID->"aeea3c0a-5991-47a5-b870-76e97bc81bb5"],

Cell["Transformation rules for replacing expressions", "Item",ExpressionUUID->"835de748-1c4f-4ef9-a0e6-d9c93a1c3a00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Patterns", "Subsection",ExpressionUUID->"18c66b57-a328-4b5f-9c31-6377df5096bd"],

Cell["Pattern objects", "Item",ExpressionUUID->"b6191536-1720-431d-974a-05ebaf4657cd"],

Cell["Named patterns", "Item",ExpressionUUID->"b5ed7fea-215d-45c2-a260-881400fa2e96"],

Cell["Matching expressions", "Item",ExpressionUUID->"3bbdde1a-0fd3-4d80-97be-503674565ada"],

Cell["Restricting patterns", "Item",ExpressionUUID->"2fff5cf5-1d4e-4209-9209-e568ac4a09f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variable Assignments", "Section",ExpressionUUID->"b19de9d8-daa4-4bc1-afe2-b0770e3aa256"],

Cell["\<\
This section presents the structure and syntax of assignments in Wolfram \
Language. \
\>", "Text",ExpressionUUID->"aff71f32-74ee-4a64-98e3-91336695fddf"],

Cell[CellGroupData[{

Cell["Assign a Constant to a Symbol ", "Subsection",ExpressionUUID->"e564f91f-ea27-44da-852c-20a10caf3b1a"],

Cell["\<\
Assigning a constant value to a symbol (or defining a variable, as it is \
often called in other programming languages) is one of the most common tasks \
of programming:\
\>", "Text",ExpressionUUID->"595460d3-642f-4a38-9005-4c4798931138"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "=", "2"}]], "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"52d8f228-0d1f-40ed-9906-cb7431df2039"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[172]=",ExpressionUUID->"d70127e1-983b-4e31-9b39-e49e4afa920e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["var"], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"bc5da8a7-c96e-4070-837a-5d4fd21ae416"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[173]=",ExpressionUUID->"baaf521e-f4df-492b-8dcf-93596c7d018d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "var"}], "+", "2"}]], "Input",
 CellLabel->
  "In[174]:=",ExpressionUUID->"3a162ee5-f85c-4ac2-8ba6-7fc0a1152633"],

Cell[BoxData["10"], "Output",
 CellLabel->
  "Out[174]=",ExpressionUUID->"a363df60-bfb8-4439-bbf2-b113c55cbae6"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["?", "Input"],
 " or the ",
 ButtonBox["Information",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Information.html"], None},
  
  ButtonNote->"https://reference.wolfram.com/language/ref/Information.html"],
 " operator can be used to ask Wolfram Language to display any information it \
knows about a symbol:"
}], "Text",ExpressionUUID->"d153c28d-c2b5-46de-b689-632461ba7de1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "var"}]], "Input",
 CellLabel->
  "In[175]:=",ExpressionUUID->"094e687d-24b9-4019-811b-37d9f9acdc15"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`var\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"var", "=", "2"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`var\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`var\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`var", "Documentation" -> None,
     "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`var, {$CellContext`var -> 2}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`var"|>, False]]], "Output",
 CellLabel->
  "Out[175]=",ExpressionUUID->"802cbf52-f836-4069-9d42-c87f70bc3e94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "=", "5"}]], "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"78308fac-eb6d-4fbf-a304-f707be67582c"],

Cell[BoxData["5"], "Output",
 CellLabel->
  "Out[181]=",ExpressionUUID->"a3c6a8be-7991-4cd9-9c6a-b44e4777e3cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "var"}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"17663035-cb86-4971-a401-45234f3de57a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`var\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"var", "=", "5"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`var\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`var\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`var", "Documentation" -> None,
     "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`var, {$CellContext`var -> 5}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`var"|>, False]]], "Output",
 CellLabel->
  "Out[182]=",ExpressionUUID->"0a957fb0-f6d9-4d65-8a38-4e5acc1e9ed8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assign an Expression to a Symbol", "Subsection",ExpressionUUID->"2482bda2-dda9-4c8c-ab7d-06bcd601563d"],

Cell["A symbol can be also be set up to represent an expression:", "Text",ExpressionUUID->"c3f9640b-ea2a-476f-99d9-74b17368c35e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "=", 
  RowBox[{
   RowBox[{"a", "  ", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", " ", "x"}], "+", "c"}]}]], "Input",
 CellLabel->
  "In[183]:=",ExpressionUUID->"707203b7-d1e5-4009-96c2-189e64e119d0"],

Cell[BoxData[
 RowBox[{"81", "+", 
  RowBox[{"3", " ", "b"}], "+", "c"}]], "Output",
 CellLabel->
  "Out[183]=",ExpressionUUID->"7b47b68b-9629-4973-af9e-c63b5d1fdd80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "y"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"bd609708-ab96-4fca-a2c5-da28eb3907bf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`y\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"y", "=", 
                    RowBox[{"81", "+", 
                    RowBox[{"3", " ", "b"}], "+", "c"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`y\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`y\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`y", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`y, {$CellContext`y -> 
       81 + 3 $CellContext`b + $CellContext`c}], "UpValues" -> None, 
    "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`y"|>, False]]], "Output",
 CellLabel->
  "Out[184]=",ExpressionUUID->"010190c7-0e6f-41c3-9a1f-e822003745e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simultaneous Assignments", "Subsection",ExpressionUUID->"2ea54558-2a85-46c0-8ee2-5d550dbe4b52"],

Cell["Multiple symbols can be assigned values at the same time:", "Text",ExpressionUUID->"8c50394c-2b64-4821-821f-9fe37d2fa60b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}]}]], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"0923827d-3486-4a39-a5f6-587dd68edaa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellLabel->
  "Out[185]=",ExpressionUUID->"022ec679-4d32-4a36-b357-263a62f32e1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arr", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<D\>\"", ",", "\"\<E\>\"", ",", "\"\<F\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<G\>\"", ",", "\"\<H\>\"", ",", "\"\<I\>\""}], "}"}]}], 
   "}"}]}]], "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"dc7411dc-fa91-496a-9abb-e2eefaa95ed6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"C\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"E\"\>", ",", "\<\"F\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"G\"\>", ",", "\<\"H\"\>", ",", "\<\"I\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[186]=",ExpressionUUID->"bed6efb1-0c8c-4e9f-a1c7-73cb16d32119"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "arr", "]"}]], "Input",
 CellLabel->
  "In[187]:=",ExpressionUUID->"e5ae1526-8c2c-4ea9-99a5-98d6842667c8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"A\"\>", "\<\"B\"\>", "\<\"C\"\>"},
     {"\<\"D\"\>", "\<\"E\"\>", "\<\"F\"\>"},
     {"\<\"G\"\>", "\<\"H\"\>", "\<\"I\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[187]//MatrixForm=",ExpressionUUID->"4b27633c-06dc-42b2-a464-\
966d11d28bad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arr", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "All"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[188]:=",ExpressionUUID->"777b4fed-440a-42c6-a8e6-61c0b97d9ba3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D\"\>", ",", "\<\"E\"\>", ",", "\<\"F\"\>"}], "}"}]], "Output",\

 CellLabel->
  "Out[188]=",ExpressionUUID->"7808bd6c-4b8c-4682-95da-c9b0b4c40297"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arr", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "All"}], "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "arr", "]"}]}], "Input",
 CellLabel->
  "In[189]:=",ExpressionUUID->"2e24e400-0449-4a98-9dfd-699d47435500"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"A\"\>", "\<\"B\"\>", "\<\"C\"\>"},
     {"1", "2", "3"},
     {"\<\"G\"\>", "\<\"H\"\>", "\<\"I\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[190]//MatrixForm=",ExpressionUUID->"6b782e33-f60d-49e7-b28a-\
9ad19cc9ceb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"arr", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "arr", "]"}]}], "Input",
 CellLabel->
  "In[195]:=",ExpressionUUID->"9ec57af2-3ec2-4565-90f9-84d32d6fc32e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"A\"\>", "0", "\<\"C\"\>"},
     {"1", "0", "3"},
     {"\<\"G\"\>", "0", "\<\"I\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[196]//MatrixForm=",ExpressionUUID->"67e4fc86-37be-4574-8988-\
a61dcd6373c8"]
}, Open  ]],

Cell["\<\
The elements on the left side of the assignment must align with the values on \
the right side.\
\>", "Text",ExpressionUUID->"e0d87556-5547-4d77-82e0-4fe8da6d2d97"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clear Values and Definitions", "Subsection",ExpressionUUID->"97758dbe-53e2-4e13-86ca-41ff7e69cb6c"],

Cell["Clear the definitions that are no longer needed:", "Text",ExpressionUUID->"52190be8-0ebb-4a31-b806-75b0722bad27"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"var", ",", "a", ",", "b", ",", "c", ",", "y", ",", "arr"}], 
  "]"}]], "Input",
 CellLabel->
  "In[197]:=",ExpressionUUID->"8678d18a-8d23-4194-8c68-7282cef3bd3a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Immediate and Delayed Assignments", "Section",ExpressionUUID->"b974041b-077c-4f24-b973-49d22843e3c1"],

Cell["\<\
When defining a variable, the idea is to assign a particular value to the \
variable and then use the variable name instead of the value further along in \
the code.\
\>", "Text",ExpressionUUID->"bf1d32ad-19b9-4a07-88eb-50bb7bcb5391"],

Cell[TextData[{
 "In certain cases, this assignment will be absolute and unchanging through \
the rest of the code, while in other cases, the value of the variable may \
change based on certain other conditions in your current session. For the \
former, an \[OpenCurlyDoubleQuote]immediate \
assignment\[CloseCurlyDoubleQuote] or ",
 ButtonBox["Set(=)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Set.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Set.html"],
 " is useful, whereas for the latter, a \[OpenCurlyDoubleQuote]delayed \
assignment\[CloseCurlyDoubleQuote] or ",
 ButtonBox["SetDelayed(:=)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/SetDelayed.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/SetDelayed.html"],
 " is useful."
}], "Text",ExpressionUUID->"84a976ac-092a-4a31-9c10-901f6dcc3ab8"],

Cell[CellGroupData[{

Cell["Immediate Assignment", "Subsection",ExpressionUUID->"4db4bea7-6f4c-4190-baed-57c785532e85"],

Cell["These are rules of the form:", "Text",ExpressionUUID->"70268ff2-636b-4ac1-98da-bc5931bbe448"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"LHS", "=", "RHS"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"7cb3f3d7-3478-4648-bf12-28ad49b9e231"]], \
"Program",ExpressionUUID->"e5ae98bd-1a1b-4e04-b05a-f7bf8af0cdfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "3"}]], "Input",
 CellLabel->
  "In[207]:=",ExpressionUUID->"a8d7fe41-2e16-41d8-ae94-41fe73243360"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[207]=",ExpressionUUID->"57d6f969-f488-4095-b6a0-6606d0d655af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"4b696d16-c638-4e2f-a0a2-e8fd837d13dc"],

Cell[BoxData["9"], "Output",
 CellLabel->
  "Out[208]=",ExpressionUUID->"5d135ca2-b2fb-45d1-842b-b0c28fa0e673"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Delayed Assignment", "Subsection",ExpressionUUID->"25f889c6-1d83-4752-bcac-3b0ce90e4314"],

Cell["These are rules of the form:", "Text",ExpressionUUID->"f2b12ab3-056b-42de-b2a1-f0132071b71d"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"LHS", " ", ":=", "RHS"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b9f653db-0515-4329-b35c-d667075882e1"]], \
"Program",ExpressionUUID->"172894ad-b4a5-4605-a9bd-9496c2aa7c12"],

Cell[BoxData[
 RowBox[{"b", ":=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"9f00197a-e0d1-4648-b5e2-0bfc1644d8d5"],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellLabel->
  "In[218]:=",ExpressionUUID->"9c7d27a3-e246-48a5-96ec-3e1d1960676b"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellLabel->
  "Out[218]=",ExpressionUUID->"035bdc18-703a-4760-9c1f-9bd0c8f20e14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", "2"}], ";"}]], "Input",
 CellLabel->
  "In[219]:=",ExpressionUUID->"fd64d9c6-e035-4cbb-9441-283741502b56"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellLabel->
  "In[220]:=",ExpressionUUID->"fe1153d7-8c8c-44f6-92dc-90d61f590aaa"],

Cell[BoxData["a"], "Output",
 CellLabel->
  "Out[220]=",ExpressionUUID->"272905b4-13a4-4f20-a06b-af6bde4548e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.942850589064539*^9},
 CellLabel->
  "In[221]:=",ExpressionUUID->"6cdc5c14-fd06-4c8a-9e25-055c6b066d76"],

Cell[BoxData["a"], "Output",
 CellLabel->
  "Out[221]=",ExpressionUUID->"6b222655-44b4-4e13-b3c1-0fcab4d98e41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellLabel->
  "In[222]:=",ExpressionUUID->"5f7e4bad-121d-45ea-a6b1-28be537a97d8"],

Cell[BoxData["4"], "Output",
 CellLabel->
  "Out[222]=",ExpressionUUID->"482c5531-a5da-482c-94d1-9e03472f2f6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "a"}]], "Input",
 CellLabel->
  "In[223]:=",ExpressionUUID->"c64d7750-f845-404e-bcfd-9f278ac144e5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`a\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`a\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`a\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`a", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`a"|>, False]]], "Output",
 CellLabel->
  "Out[223]=",ExpressionUUID->"d23c811a-77d7-408f-a3d0-26b525d3c386"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"689ca1d1-4441-433f-928f-5a9b09487674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b "}]], "Input",ExpressionUUID->"f357f946-a50e-48a0-9181-03204bd8e83d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`b\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`b\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`b\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`b", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`b"|>, False]]], "Output",
 CellLabel->
  "Out[216]=",ExpressionUUID->"7e592deb-3864-45d8-a288-91488ac235a5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "x", ",", "y"}], "]"}]], "Input",
 CellLabel->
  "In[224]:=",ExpressionUUID->"df745bee-c124-46a3-93de-184118a15903"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Immediate and Delayed Assignments", "Section",ExpressionUUID->"e8c1b715-b577-4433-9c86-11af2478baf1"],

Cell["When should you use Set and when should you use SetDelayed? ", "Text",ExpressionUUID->"dd4bd3ef-394f-4475-bdaa-626522fcc0ac"],

Cell["\<\
When assigning a constant value to a symbol, it is almost always appropriate \
to use Set:\
\>", "Text",ExpressionUUID->"a0e4243a-5f65-43a3-acca-f965d204d5cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"num1", "=", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input",
 CellLabel->
  "In[225]:=",ExpressionUUID->"230e6fb7-8005-4d33-a0ed-7f29d7e8a539"],

Cell[BoxData["0.48552090538537884`"], "Output",
 CellLabel->
  "Out[225]=",ExpressionUUID->"a3170780-381e-46dc-bfb4-fa07d64613f2"]
}, Open  ]],

Cell[TextData[{
 "The assignment returns the value obtained by evaluating the right-hand \
side. The RHS is ",
 StyleBox["evaluated immediately",
  FontWeight->"Bold"],
 " when the assignment is made:"
}], "Text",ExpressionUUID->"5a3284e6-95ab-45b0-8f07-363a12dd82e5"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"num1", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[226]:=",ExpressionUUID->"3327dcb3-fed1-4d71-92f4-62d31b83526e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.48552090538537884`", ",", "0.48552090538537884`", ",", 
   "0.48552090538537884`"}], "}"}]], "Input",
 CellLabel->
  "In[227]:=",ExpressionUUID->"eaab81fa-05c7-47c8-91e4-4fcdf64460f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.48552090538537884`", ",", "0.48552090538537884`", ",", 
   "0.48552090538537884`"}], "}"}]], "Output",
 CellLabel->
  "Out[227]=",ExpressionUUID->"9ef9dea6-d0bf-4fa5-8885-a92fdc490fe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "num1"}]], "Input",
 CellLabel->
  "In[228]:=",ExpressionUUID->"a8c1d0ee-0b19-4cd4-9a3a-e794f05552a8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`num1\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"num1", "=", "0.48552090538537884`"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`num1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`num1\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`num1", "Documentation" -> 
    None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`num1, {$CellContext`num1 -> 
       0.48552090538537884`}], "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`num1"|>, False]]], "Output",
 CellLabel->
  "Out[228]=",ExpressionUUID->"c1ceb1c3-b0a9-4222-bc82-2d814ec389c1"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"298a4fae-00ea-48c2-9ee0-3ffbf03a19b0"],

Cell["\<\
Sometimes though, you may want to delay the assignment of a value but at the \
same time set up a rule to ensure how the value to be assigned is computed. \
For example:\
\>", "Text",ExpressionUUID->"36fa4596-015e-4c80-8afd-38b556255e13"],

Cell[BoxData[
 RowBox[{"num2", ":=", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"ec16c55e-914e-4055-ba6e-2bcae45f3b82"],

Cell[TextData[{
 "The assignment does not return a value because the RHS is ",
 StyleBox["not evaluated right away",
  FontWeight->"Bold"],
 ". It is only recorded and will be evaluated when ",
 StyleBox["num2", "Input"],
 " is invoked:"
}], "Text",ExpressionUUID->"f239a27d-b535-41ae-8071-76daf1c70cf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"num2", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"e1ebf88f-c90d-44ea-916b-d4cae43b5837"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.17013816474153964`", ",", "0.6584217974572211`", ",", 
   "0.5604188526855689`"}], "}"}]], "Output",
 CellLabel->
  "Out[230]=",ExpressionUUID->"6c603201-2764-4440-a352-e5bf4046a5b3"]
}, Open  ]],

Cell["\<\
The RHS in SetDelayed is reevaluated every time it is used. While there is no \
need for this if the value to be assigned is a constant, the same property \
makes for a good case to use SetDelayed for function definitions, while \
sticking to Set for assigning constant values.\
\>", "Text",ExpressionUUID->"6d4e3c4b-37b8-43d4-99b4-ffad1ebd34a3"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "You are designing a game of rolling the dice, where you win if \
the sum of two consecutive rolls is at least 7. Your code for checking the \
sum of two rolls is If[dieRoll + dieRoll \[GreaterEqual] 7, \"Win\", \
\"Lose\"]. Which of the following code examples would correctly simulate the \
roll of the die when the symbol dieRoll is invoked?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "dieRoll = RandomInteger[6];", "info" -> 
                    "Set will not work because the value of dieRoll will be \
set once and that value will be used repeatedly.", "index" -> 1, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "dieRoll = RandomInteger[6];", "info" -> 
                    "Set will not work because the value of dieRoll will be \
set once and that value will be used repeatedly.", "index" -> 1, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> "dieRoll = RandomInteger[6];", "info" -> 
                    "Set will not work because the value of dieRoll will be \
set once and that value will be used repeatedly.", "index" -> 1, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "dieRoll = RandomInteger[6];", "info" -> 
                    "Set will not work because the value of dieRoll will be \
set once and that value will be used repeatedly.", "index" -> 1, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "dieRoll = RandomInteger[6];", "info" -> 
                    "Set will not work because the value of dieRoll will be \
set once and that value will be used repeatedly.", "index" -> 1, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "dieRoll = RandomInteger[6];", "info" -> 
                    "Set will not work because the value of dieRoll will be \
set once and that value will be used repeatedly.", "index" -> 1, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "dieRoll := RandomInteger[6];", "info" -> 
                    "Correct. This will provide a new value every time \
dieRoll is invoked.", "index" -> 2, "correct" -> True|>["statement"], "Text", 
                    
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "dieRoll := RandomInteger[6];", "info" -> 
                    "Correct. This will provide a new value every time \
dieRoll is invoked.", "index" -> 2, "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "dieRoll := RandomInteger[6];", "info" -> 
                    "Correct. This will provide a new value every time \
dieRoll is invoked.", "index" -> 2, "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {
                    FontColor -> Darker[Red, 5/9], FontWeight -> Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "dieRoll := RandomInteger[6];", "info" -> 
                    "Correct. This will provide a new value every time \
dieRoll is invoked.", "index" -> 2, "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "dieRoll := RandomInteger[6];", "info" -> 
                    "Correct. This will provide a new value every time \
dieRoll is invoked.", "index" -> 2, "correct" -> True|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> "dieRoll := RandomInteger[6];", "info" -> 
                    "Correct. This will provide a new value every time \
dieRoll is invoked.", "index" -> 2, "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1150.5, {161.1724090576172, 172.0210418701172}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"28d80ec7-f18c-4b54-9b2f-\
40a75e9bead8"]], "Text",
 CellTags->"CYU",ExpressionUUID->"15103e3c-0980-4f18-a5c1-9bde27105aee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definition", "Section",ExpressionUUID->"1bc3d71c-fd28-4228-9a45-c24de01aaeed"],

Cell["\<\
Defining your own functions allows you to extend the scope and capabilities \
of Wolfram Language. Once defined, these functions can be used just like any \
other built-in definitions.\
\>", "Text",ExpressionUUID->"18426b0b-9ce7-46cb-99cc-d10ba3fa4681"],

Cell["Functions are defined as:", "Text",ExpressionUUID->"415fbe74-7b33-4ea3-b021-d98c8800d823"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"LHS", " ", ":=", "RHS"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"9887b9fd-1c00-4135-8776-57a50a62b344"]], \
"Program",ExpressionUUID->"d7a70799-96e1-45fc-9997-fca6b4be1f0c"],

Cell["\<\
The LHS is typically the name of the function, showing the syntax for using \
it, while the RHS defines the rule describing how to use the input arguments \
to the function from the LHS in computing the result to be returned by the \
function.\
\>", "Text",ExpressionUUID->"f6f34197-228f-4684-9b0a-d9cec1b8c65b"],

Cell["\<\
When defining your own function, you do not want either the LHS or RHS to be \
evaluated. You want the definition to be recorded and available when the \
function is invoked. This makes SetDelayed the usual choice when defining \
functions:\
\>", "Text",ExpressionUUID->"549f055d-6aea-40ae-b721-53735445a9df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"x", "^", "2"}]}]}]], "Input",
 CellLabel->
  "In[231]:=",ExpressionUUID->"a999e707-815e-4835-aaf2-2d2322e082bf"],

Cell[TextData[{
 "The function definition on the LHS uses patterns. Patterns will be \
discussed in more detail a little later. For now, it is sufficient to read ",
 StyleBox["f[x_]", "Input"],
 " as ",
 StyleBox["\[OpenCurlyDoubleQuote]for any input ",
  FontSlant->"Italic"],
 StyleBox["x", "Input",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]",
 StyleBox[" ",
  FontSlant->"Italic"],
 "on the LHS",
 StyleBox[", \[OpenCurlyDoubleQuote]replace ",
  FontSlant->"Italic"],
 StyleBox["x", "Input",
  FontSlant->"Italic"],
 StyleBox[" with the definition that uses ",
  FontSlant->"Italic"],
 StyleBox["x", "Input",
  FontSlant->"Italic"],
 StyleBox[" to do something\[CloseCurlyDoubleQuote] ",
  FontSlant->"Italic"],
 "on the RHS:"
}], "Text",ExpressionUUID->"31a98917-5376-4b5b-943a-7432551090fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Input",
 CellLabel->
  "In[232]:=",ExpressionUUID->"c8567424-8f8f-448e-8571-67be7be4ccac"],

Cell[BoxData[
 FractionBox["1", "25"]], "Output",
 CellLabel->
  "Out[232]=",ExpressionUUID->"0a583b10-932e-44a0-bb06-e291c34037f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "a", "]"}]], "Input",
 CellLabel->
  "In[233]:=",ExpressionUUID->"0e58d5ea-1242-4b38-ba61-0bc18925772c"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["a", "2"]]], "Output",
 CellLabel->
  "Out[233]=",ExpressionUUID->"4e41012f-2758-4566-9dc3-a5dc6c216f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellLabel->
  "In[234]:=",ExpressionUUID->"37ea41dd-e395-44ae-87cc-ff3de8a71cd2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f", "[", "x_", "]"}], ":=", 
                    FractionBox["1", 
                    SuperscriptBox["x", "2"]]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[
         Pattern[$CellContext`x, 
          Blank[]]] :> 1/$CellContext`x^2}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`f"|>, 
   False]]], "Output",
 CellLabel->
  "Out[234]=",ExpressionUUID->"c50ea182-3760-4281-ae72-35939681a066"]
}, Open  ]],

Cell["\<\
\[LineSeparator]SetDelayed allows for scoping of the input to the function. \
Set, on the other hand, does not provide scoping:\
\>", "Text",ExpressionUUID->"71c4cc76-aba0-4d7e-87cb-3dd0000e2cf0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "\"\<Something\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", 
    RowBox[{"x_", ",", "a_"}], "]"}], "=", 
   RowBox[{"x", "+", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f1", "[", 
  RowBox[{"2", ",", "3"}], "]"}]}], "Input",
 CellLabel->
  "In[243]:=",ExpressionUUID->"3dcee2e5-26c0-4bce-9ad4-e25ecfb40303"],

Cell[BoxData[
 RowBox[{"2", "+", "\<\"Something\"\>"}]], "Output",
 CellLabel->
  "Out[245]=",ExpressionUUID->"37762cb8-e5b7-402c-a9a6-a70cd38b05f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f1"}]], "Input",
 CellLabel->
  "In[246]:=",ExpressionUUID->"74b908b1-ebd8-4ec2-8643-de1685f79dc7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f1\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f1", "[", 
                    RowBox[{"x_", ",", "a_"}], "]"}], "=", 
                    RowBox[{"\"Something\"", "+", "x"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f1\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f1", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f1, {$CellContext`f1[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]]] -> "Something" + $CellContext`x}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`f1"|>, 
   False]]], "Output",
 CellLabel->
  "Out[246]=",ExpressionUUID->"661b74ee-80b8-4f3a-bead-44d6ef597a70"]
}, Open  ]],

Cell[TextData[{
 "Clearing the global definition of ",
 Cell[BoxData[
 "a"], "Input",ExpressionUUID->"fc629c92-93fc-4930-84be-0b6126886698"],
 " does not help, because its original definition ",
 Cell[BoxData[
 "\"\<Something\>\""], "Input",ExpressionUUID->
  "445376d1-d75a-4794-8ab3-08492b8964eb"],
 " has been ingrained in the definition of ",
 StyleBox["f1", "Input"],
 " using ",
 StyleBox["Set", "Input"],
 ":"
}], "Text",ExpressionUUID->"222d6044-6fd5-46c3-853d-9b28e4ca1187"],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellLabel->
  "In[247]:=",ExpressionUUID->"1ee639e8-1a9e-4b1b-a37b-19d6f4cfd719"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f1"}]], "Input",
 CellLabel->
  "In[248]:=",ExpressionUUID->"2172498c-4975-4471-9532-0053bbd976d2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f1\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f1", "[", 
                    RowBox[{"x_", ",", "a_"}], "]"}], "=", 
                    RowBox[{"\"Something\"", "+", "x"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f1\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f1", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f1, {$CellContext`f1[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]]] -> "Something" + $CellContext`x}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`f1"|>, 
   False]]], "Output",
 CellLabel->
  "Out[248]=",ExpressionUUID->"81f1b340-a6b3-4158-ba13-47fd9fe25729"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", 
    RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
   RowBox[{"x", "+", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f2", "[", 
  RowBox[{"2", ",", "3"}], "]"}]}], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"c55c3e7b-7a46-426b-966f-9aad6f1aa008"],

Cell[BoxData[
 RowBox[{"?", "f2"}]], "Input",
 CellLabel->
  "In[357]:=",ExpressionUUID->"b6e56e1e-2d9e-4478-a824-2514198f4fd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Effectively Using Set and SetDelayed", "Section",ExpressionUUID->"2ae6776c-4996-488d-84bd-c9c9ae2025cd"],

Cell["\<\
Set and SetDelayed can sometimes be used together to make your code more \
efficient. In the following example, when the need arises to store some \
constant values, immediate assignments are made. On the other hand, to store \
a more generic definition of the function, delayed assignment is used:\
\>", "Text",ExpressionUUID->"12729dc5-09ef-424f-a862-1177a1799d47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "0", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "1", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fib", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fib", "[", "n", "]"}], "=", 
   RowBox[{
    RowBox[{"fib", "[", 
     RowBox[{"n", "-", "1"}], "]"}], "+", 
    RowBox[{"fib", "[", 
     RowBox[{"n", "-", "2"}], "]"}]}]}]}]}], "Input",
 CellLabel->
  "In[249]:=",ExpressionUUID->"856a81d8-0fe1-49ba-a0de-95ce9ccf34a9"],

Cell["\<\
The use of both Set and SetDelayed allows assignments to be made dynamically:\
\
\>", "Text",ExpressionUUID->"01f03aa9-adac-48fc-a2d9-55e0ca07c780"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "fib"}]], "Input",
 CellLabel->
  "In[252]:=",ExpressionUUID->"48131657-6612-44b9-b83b-31b8a828cc73"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fib\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"fib", "[", "0", "]"}], "=", "0"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fib", "[", "1", "]"}], "=", "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fib", "[", "n_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"fib", "[", "n", "]"}], "=", 
                    RowBox[{
                    RowBox[{"fib", "[", 
                    RowBox[{"n", "-", "1"}], "]"}], "+", 
                    RowBox[{"fib", "[", 
                    RowBox[{"n", "-", "2"}], "]"}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`fib\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fib\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`fib", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`fib, {$CellContext`fib[0] -> 
       0, $CellContext`fib[1] -> 1, $CellContext`fib[
         Pattern[$CellContext`n, 
          
          Blank[]]] :> ($CellContext`fib[$CellContext`n] = \
$CellContext`fib[$CellContext`n - 1] + $CellContext`fib[$CellContext`n - 
           2])}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
    "FullName" -> "Global`fib"|>, False]]], "Output",
 CellLabel->
  "Out[252]=",ExpressionUUID->"45d76fb0-6437-4bc0-8d64-d94dd4616a05"]
}, Open  ]],

Cell[TextData[{
 "Wolfram Language provides automatic recursion, coded into the delayed \
assignment definition of ",
 StyleBox["fib[n_]", "Input"],
 ". Each time a new ",
 StyleBox["n", "Input"],
 " is used, a new value for the function ",
 StyleBox["fib", "Input"],
 " is defined and stored away. This avoids having to return all the way to \
the base case for every value that is used:"
}], "Text",ExpressionUUID->"36e13bb5-b4d9-479a-8cef-06c7cd0c49ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fib", "[", "3", "]"}]], "Input",
 CellLabel->
  "In[253]:=",ExpressionUUID->"eee3d70e-8135-49bc-a66e-9fff1d402dae"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[253]=",ExpressionUUID->"ab158bf2-4983-4032-99d8-ff5c116e98ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "fib"}]], "Input",
 CellLabel->
  "In[254]:=",ExpressionUUID->"f8a3bbcd-c89f-425f-b0a9-59aec90174e1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fib\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"fib", "[", "0", "]"}], "=", "0"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fib", "[", "1", "]"}], "=", "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fib", "[", "2", "]"}], "=", "1"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fib", "[", "3", "]"}], "=", "2"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fib", "[", "n_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"fib", "[", "n", "]"}], "=", 
                    RowBox[{
                    RowBox[{"fib", "[", 
                    RowBox[{"n", "-", "1"}], "]"}], "+", 
                    RowBox[{"fib", "[", 
                    RowBox[{"n", "-", "2"}], "]"}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`fib\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fib\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`fib", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`fib, {$CellContext`fib[0] -> 
       0, $CellContext`fib[1] -> 1, $CellContext`fib[2] -> 
       1, $CellContext`fib[3] -> 2, $CellContext`fib[
         Pattern[$CellContext`n, 
          
          Blank[]]] :> ($CellContext`fib[$CellContext`n] = \
$CellContext`fib[$CellContext`n - 1] + $CellContext`fib[$CellContext`n - 
           2])}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
    "FullName" -> "Global`fib"|>, False]]], "Output",
 CellLabel->
  "Out[254]=",ExpressionUUID->"bac2e6c2-cf2c-44a6-9ffd-c23491440963"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"fib", "[", "4", "]"}], "]"}]], "Input",
 CellLabel->
  "In[255]:=",ExpressionUUID->"95a7c0be-12cf-4162-98b2-d689ce4905c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"fib", "[", "4", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{
     RowBox[{"fib", "[", "4", "]"}], "=", 
     RowBox[{
      RowBox[{"fib", "[", 
       RowBox[{"4", "-", "1"}], "]"}], "+", 
      RowBox[{"fib", "[", 
       RowBox[{"4", "-", "2"}], "]"}]}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"4", "-", "1"}],
          HoldForm], ",", 
         TagBox["3",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"fib", "[", "3", "]"}],
        HoldForm], ",", 
       TagBox["2",
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"4", "-", "2"}],
          HoldForm], ",", 
         TagBox["2",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"fib", "[", "2", "]"}],
        HoldForm], ",", 
       TagBox["1",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"2", "+", "1"}],
      HoldForm], ",", 
     TagBox["3",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"fib", "[", "4", "]"}], "=", "3"}],
    HoldForm], ",", 
   TagBox["3",
    HoldForm]}], "}"}]], "Output",
 CellLabel->
  "Out[255]=",ExpressionUUID->"071b8371-e88e-4dce-b87d-d648f2dae082"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "fib", "]"}]], "Input",
 CellLabel->
  "In[256]:=",ExpressionUUID->"4cffd9da-5649-4b08-9bc5-2ebb82c2e675"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation Rules", "Section",ExpressionUUID->"2f4095f2-2d40-4f2e-bd1f-2ddd750b5e86"],

Cell["\<\
Definitions discussed so far are nothing but a set of rewrite rules, which \
are invoked automatically whenever the LHS of the definition matches an \
expression you are working with.\
\>", "Text",ExpressionUUID->"b2ea4e53-1fd2-45fc-b5c0-7758db856d47"],

Cell["\<\
Transformation rules can also be applied explicitly to compute the value of \
an expression after changing some of its component elements.\
\>", "Text",ExpressionUUID->"44c739cb-4616-43bd-baba-ad6c3db9a493"],

Cell[CellGroupData[{

Cell["ReplaceAll with a Rule", "Subsection",ExpressionUUID->"938a5514-c6d0-4a4a-8747-d92034b60e29"],

Cell["\<\
ReplaceAll transforms an expression according to a replacement rule of the \
form \
\>", "Text",ExpressionUUID->"2334a94b-1824-4679-a36b-d43f4d57f237"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{"LHS", " ", "\[Rule]", " ", "RHS"}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"8e4f5f49-cffa-4552-9ad2-ceb55911df4c"]], \
"Program",ExpressionUUID->"06d2cab4-a12b-41d1-b77a-ab8478247968"],

Cell["by replacing all occurrences of LHS with RHS:", "Text",ExpressionUUID->"d704ab0f-7a7d-4ccd-9053-a5825da2f2f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", " ", "x"}], "+", "c"}], "/.", 
  RowBox[{"x", "\[Rule]", "2"}]}]], "Input",
 CellLabel->
  "In[257]:=",ExpressionUUID->"562ed336-fa0c-413e-91fc-518dbcfc9cad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "a"}], "+", 
  RowBox[{"2", " ", "b"}], "+", "c"}]], "Output",
 CellLabel->
  "Out[257]=",ExpressionUUID->"55925cad-95da-4966-9650-4a77f1be9772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", " ", "x"}], "+", "c"}]}]], "Input",
 CellLabel->
  "In[258]:=",ExpressionUUID->"c15acdf3-414e-41dc-b3ed-126baf424829"],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellLabel->
  "Out[258]=",ExpressionUUID->"9f7fe5e7-e34e-4e89-a68f-d5d6dda4e4fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "/.", 
  RowBox[{"x", "\[Rule]", "42"}]}]], "Input",
 CellLabel->
  "In[259]:=",ExpressionUUID->"cdffd734-cd9c-4903-88b7-8e9a4a0f68d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1764", " ", "a"}], "+", 
  RowBox[{"42", " ", "b"}], "+", "c"}]], "Output",
 CellLabel->
  "Out[259]=",ExpressionUUID->"3935fb70-bdba-4395-879c-a37db936e3a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"y", " "}]], "Input",
 CellLabel->
  "In[260]:=",ExpressionUUID->"f3c8ebaa-78a8-45c8-9375-b4d419683820"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"Trace", "[", 
  RowBox[{"y", "/.", 
   RowBox[{"x", " ", "->", " ", "42"}]}], "]"}]}], "Input",
 CellLabel->
  "In[261]:=",ExpressionUUID->"315551f6-a0e9-4766-b9ac-f2fca0cbe06b"],

Cell[BoxData[
 RowBox[{"c", "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellLabel->
  "Out[261]=",ExpressionUUID->"5de7ff8f-2e26-4fed-ae8a-af1b2e97808b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox["y",
      HoldForm], ",", 
     TagBox[
      RowBox[{"c", "+", 
       RowBox[{"b", " ", "x"}], "+", 
       RowBox[{"a", " ", 
        SuperscriptBox["x", "2"]}]}],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"x", "\[Rule]", "42"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"x", "\[Rule]", "42"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"c", "+", 
      RowBox[{"b", " ", "x"}], "+", 
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}]}], "/.", "\[VeryThinSpace]", 
     RowBox[{"x", "\[Rule]", "42"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"c", "+", 
     RowBox[{"b", " ", "42"}], "+", 
     RowBox[{"a", " ", 
      SuperscriptBox["42", "2"]}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"b", " ", "42"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"42", " ", "b"}],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        SuperscriptBox["42", "2"],
        HoldForm], ",", 
       TagBox["1764",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"a", " ", "1764"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"1764", " ", "a"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"c", "+", 
     RowBox[{"42", " ", "b"}], "+", 
     RowBox[{"1764", " ", "a"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{
     RowBox[{"1764", " ", "a"}], "+", 
     RowBox[{"42", " ", "b"}], "+", "c"}],
    HoldForm]}], "}"}]], "Output",
 CellLabel->
  "Out[262]=",ExpressionUUID->"e1abd226-3140-4deb-a1e4-67f206d25da3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rule versus RuleDelayed", "Subsection",ExpressionUUID->"54a4ff42-6759-4910-9d8e-254b21751bc9"],

Cell["\<\
Rules are a very general construct in Wolfram Language that allow \
transformation of arbitrary symbolic expressions.\
\>", "Text",ExpressionUUID->"4db489c0-90f5-4559-b2b7-1592daa223d0"],

Cell[TextData[{
 "The RHS of a ",
 ButtonBox["Rule",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Rule.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Rule.html"],
 StyleBox[ButtonBox[" ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Rule"],
  FontWeight->"Bold"],
 "(\[Rule]) is evaluated immediately when it is created. However, the RHS of ",
 ButtonBox["RuleDelayed",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/RuleDelayed.html"], None},
  
  ButtonNote->"https://reference.wolfram.com/language/ref/RuleDelayed.html"],
 StyleBox[ButtonBox[" ",
  BaseStyle->"Link",
  ButtonData->"paclet:/ref/RuleDelayed"],
  FontWeight->"Bold"],
 "(\[RuleDelayed]) is evaluated only when the rule is used."
}], "Text",
 CellTags->
  "RuleDelayed",ExpressionUUID->"b560344a-06a4-475f-ad9f-097075ee1879"],

Cell["\<\
For example, when working with random numbers, you may want to use the same \
number repeatedly (Rule):\
\>", "Text",ExpressionUUID->"00414b69-6a36-4c83-bd3c-584005ff0f77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"RandomReal", "[", "]"}]}]}]], "Input",
 CellLabel->
  "In[263]:=",ExpressionUUID->"07b76b20-a044-4a9e-a350-1650325936bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.229339935283829`", ",", "0.229339935283829`", ",", "0.229339935283829`", 
   ",", "0.229339935283829`"}], "}"}]], "Output",
 CellLabel->
  "Out[263]=",ExpressionUUID->"a50f9cce-9862-4bda-8cf8-5632784cf7ec"]
}, Open  ]],

Cell[TextData[{
 "Or you may want a different random number every time you replace ",
 StyleBox["x", "Input"],
 " (RuleDelayed):"
}], "Text",ExpressionUUID->"f2d40aca-81fc-4792-9b4c-de30d5e56e43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}], "/.", 
  RowBox[{"x", "\[RuleDelayed]", 
   RowBox[{"RandomReal", "[", "]"}]}]}]], "Input",
 CellLabel->
  "In[264]:=",ExpressionUUID->"66666669-82fe-43df-90c0-1ac160ee6010"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5547497395312415`", ",", "0.7469182576725422`", ",", 
   "0.6345255882291536`", ",", "0.06605763646966478`"}], "}"}]], "Output",
 CellLabel->
  "Out[264]=",ExpressionUUID->"6d697d0b-7c38-4198-93b0-19454a940ce3"]
}, Open  ]],

Cell[TextData[{
 "This tutorial talks more about ",
 ButtonBox["Applying Transformation Rules",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/tutorial/\
ApplyingTransformationRules.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/tutorial/\
ApplyingTransformationRules.html"],
 ". "
}], "Text",ExpressionUUID->"626329b1-3f14-47c1-a315-c5779df72b73"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell["What is the result of x^2 /. y \[Rule] 3?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "9", "info" -> 
                    "\[OpenCurlyQuote]x\[CloseCurlyQuote] is not the same as \
\[OpenCurlyQuote]y\[CloseCurlyQuote], so it is not replaced.", "index" -> 1, 
                    "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "9", "info" -> 
                    "\[OpenCurlyQuote]x\[CloseCurlyQuote] is not the same as \
\[OpenCurlyQuote]y\[CloseCurlyQuote], so it is not replaced.", "index" -> 1, 
                    "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "9", "info" -> 
                    "\[OpenCurlyQuote]x\[CloseCurlyQuote] is not the same as \
\[OpenCurlyQuote]y\[CloseCurlyQuote], so it is not replaced.", "index" -> 1, 
                    "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "9", "info" -> 
                    "\[OpenCurlyQuote]x\[CloseCurlyQuote] is not the same as \
\[OpenCurlyQuote]y\[CloseCurlyQuote], so it is not replaced.", "index" -> 1, 
                    "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "9", "info" -> 
                    "\[OpenCurlyQuote]x\[CloseCurlyQuote] is not the same as \
\[OpenCurlyQuote]y\[CloseCurlyQuote], so it is not replaced.", "index" -> 1, 
                    "correct" -> False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "9", "info" -> 
                    "\[OpenCurlyQuote]x\[CloseCurlyQuote] is not the same as \
\[OpenCurlyQuote]y\[CloseCurlyQuote], so it is not replaced.", "index" -> 1, 
                    "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "x^2", "info" -> "Correct", "index" -> 2, 
                    "correct" -> True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "x^2", "info" -> "Correct", "index" -> 2, 
                    "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "x^2", "info" -> "Correct", "index" -> 2, 
                    "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "x^2", "info" -> "Correct", "index" -> 2, 
                    "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "x^2", "info" -> "Correct", "index" -> 2, 
                    "correct" -> True|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "x^2", "info" -> "Correct", "index" -> 2, 
                    "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}], 
            Spacer[0], 
            TextCell[
            "What is the result of x /. {x \[Rule] 1, x \[Rule] 2}?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "1", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "1", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "1", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "1", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "1", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "1", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "2", "info" -> 
                    "If two different rules apply, then only the first rule \
is used.", "index" -> 2, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "2", "info" -> 
                    "If two different rules apply, then only the first rule \
is used.", "index" -> 2, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "2", "info" -> 
                    "If two different rules apply, then only the first rule \
is used.", "index" -> 2, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "2", "info" -> 
                    "If two different rules apply, then only the first rule \
is used.", "index" -> 2, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "2", "info" -> 
                    "If two different rules apply, then only the first rule \
is used.", "index" -> 2, "correct" -> False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "2", "info" -> 
                    "If two different rules apply, then only the first rule \
is used.", "index" -> 2, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "{1, 2}", "info" -> 
                    "For this result the replacement rules would need to be \
specified as x /. {{x \[Rule] 1}, {x \[Rule] 2}}", "index" -> 3, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "{1, 2}", "info" -> 
                    "For this result the replacement rules would need to be \
specified as x /. {{x \[Rule] 1}, {x \[Rule] 2}}", "index" -> 3, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> "{1, 2}", "info" -> 
                    "For this result the replacement rules would need to be \
specified as x /. {{x \[Rule] 1}, {x \[Rule] 2}}", "index" -> 3, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "{1, 2}", "info" -> 
                    "For this result the replacement rules would need to be \
specified as x /. {{x \[Rule] 1}, {x \[Rule] 2}}", "index" -> 3, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "{1, 2}", "info" -> 
                    "For this result the replacement rules would need to be \
specified as x /. {{x \[Rule] 1}, {x \[Rule] 2}}", "index" -> 3, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "{1, 2}", "info" -> 
                    "For this result the replacement rules would need to be \
specified as x /. {{x \[Rule] 1}, {x \[Rule] 2}}", "index" -> 3, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}], 
            Spacer[0], 
            TextCell[
            "If y = a x^2 + b x + c, what would be the right way to find the \
value of y for x = 34?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "y = a 34^2 + b 34 + c", "info" -> 
                    "You should not have to edit the original expression.", 
                    "index" -> 1, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "y = a 34^2 + b 34 + c", "info" -> 
                    "You should not have to edit the original expression.", 
                    "index" -> 1, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "y = a 34^2 + b 34 + c", "info" -> 
                    "You should not have to edit the original expression.", 
                    "index" -> 1, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "y = a 34^2 + b 34 + c", "info" -> 
                    "You should not have to edit the original expression.", 
                    "index" -> 1, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "y = a 34^2 + b 34 + c", "info" -> 
                    "You should not have to edit the original expression.", 
                    "index" -> 1, "correct" -> False|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> "y = a 34^2 + b 34 + c", "info" -> 
                    "You should not have to edit the original expression.", 
                    "index" -> 1, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "y = a x^2 + b x + c; y /. x \[Rule] 34", 
                    "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "y = a x^2 + b x + c; y /. x \[Rule] 34", 
                    "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "index"], {}, 
                    <|
                    "statement" -> "y = a x^2 + b x + c; y /. x \[Rule] 34", 
                    "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "y = a x^2 + b x + c; y /. x \[Rule] 34", 
                    "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> "y = a x^2 + b x + c; y /. x \[Rule] 34", 
                    "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "y = a x^2 + b x + c; y /. x \[Rule] 34", 
                    "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "x = 34; y = a x^2 + b x + c", "info" -> 
                    "What if you need to compute the value of y for a \
different value of x? You want to maintain a general definition of y.", 
                    "index" -> 3, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "x = 34; y = a x^2 + b x + c", "info" -> 
                    "What if you need to compute the value of y for a \
different value of x? You want to maintain a general definition of y.", 
                    "index" -> 3, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "x = 34; y = a x^2 + b x + c", "info" -> 
                    "What if you need to compute the value of y for a \
different value of x? You want to maintain a general definition of y.", 
                    "index" -> 3, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "x = 34; y = a x^2 + b x + c", "info" -> 
                    "What if you need to compute the value of y for a \
different value of x? You want to maintain a general definition of y.", 
                    "index" -> 3, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "x = 34; y = a x^2 + b x + c", "info" -> 
                    "What if you need to compute the value of y for a \
different value of x? You want to maintain a general definition of y.", 
                    "index" -> 3, "correct" -> False|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> "x = 34; y = a x^2 + b x + c", "info" -> 
                    "What if you need to compute the value of y for a \
different value of x? You want to maintain a general definition of y.", 
                    "index" -> 3, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1143.5, {335.5238763427734, 346.3725091552734}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"e27b03a0-5446-457e-96cf-\
62fde3d52a13"]], "Text",
 CellTags->"CYU",ExpressionUUID->"8436c709-9cb7-4366-abf5-5ced428b4299"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rules Use Patterns", "Section",ExpressionUUID->"15c85fc0-703d-4744-bb88-e0e20597d2c1"],

Cell["\<\
Rules can be really powerful when used with patterns. The typical syntax for \
such a rule is:\
\>", "Text",ExpressionUUID->"ae2891f1-199e-40c4-b14e-13825ddc8618"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["pattern", "Input"], " ", "\[Rule]", " ", 
      StyleBox["replacement", "Input"]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]],
 CellTags->{
  "201853155754.163213", "201853155756.869136", "20185315581.187373", 
   "20185315586.811606"},ExpressionUUID->"2bc2f5a4-6083-459d-b8cc-\
1f09c76ca275"]], "Program",ExpressionUUID->"4c1c5d3b-99ac-4620-b2f7-\
c03fc25959c6"],

Cell[TextData[{
 "It describes the transformation of an expression whose elements match the \
",
 StyleBox["pattern", "Input"],
 " on the LHS and can therefore be substituted by the ",
 StyleBox["replacement", "Input"],
 " expression on the RHS. "
}], "Text",ExpressionUUID->"363b6a3b-8693-46e7-afd0-90256049f1c4"],

Cell[CellGroupData[{

Cell["Specific Replacements", "Subsection",ExpressionUUID->"3a1aa400-39f4-4a40-97ba-290075b663f6"],

Cell[TextData[{
 "The following looks for the specific pattern ",
 StyleBox["a^2", "Input"],
 " and replaces it with the expression ",
 StyleBox["100", "Input"],
 ":"
}], "Text",ExpressionUUID->"8097ce93-3308-47b3-bdda-5855866d0b1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "^", "2"}], ",", 
    RowBox[{"a", "^", "3"}], ",", 
    RowBox[{"b", "^", "2"}], ",", 
    RowBox[{"b", "^", "3"}], ",", 
    RowBox[{"c", "^", "2"}], ",", 
    RowBox[{"c", "^", "3"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"a", "^", "2"}], "\[Rule]", "100"}]}]], "Input",
 CellLabel->
  "In[266]:=",ExpressionUUID->"d9fe1b8f-b9ea-42b5-831f-01a24337e4b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", 
   SuperscriptBox["a", "3"], ",", 
   SuperscriptBox["b", "2"], ",", 
   SuperscriptBox["b", "3"], ",", 
   SuperscriptBox["c", "2"], ",", 
   SuperscriptBox["c", "3"]}], "}"}]], "Output",
 CellLabel->
  "Out[266]=",ExpressionUUID->"b77c330d-ae40-4895-b916-35d04d9fe598"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Replacements", "Subsection",ExpressionUUID->"e6dfdb93-f45e-4eda-97a5-a4f716137f7a"],

Cell["\<\
Pattern objects can be used to find matches in expressions for a more general \
pattern. The following matches all the squares but not the cubes:\
\>", "Text",ExpressionUUID->"ef7d280c-77fa-447e-8e2a-ecae06b5b1a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "^", "2"}], ",", 
    RowBox[{"a", "^", "3"}], ",", 
    RowBox[{"b", "^", "2"}], ",", 
    RowBox[{"b", "^", "3"}], ",", 
    RowBox[{"c", "^", "2"}], ",", 
    RowBox[{"c", "^", "3"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"_", "^", "2"}], "\[Rule]", "100"}]}]], "Input",
 CellLabel->
  "In[269]:=",ExpressionUUID->"63dfff79-a6cf-4179-813d-e178defd4b1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", 
   SuperscriptBox["a", "3"], ",", "100", ",", 
   SuperscriptBox["b", "3"], ",", "100", ",", 
   SuperscriptBox["c", "3"]}], "}"}]], "Output",
 CellLabel->
  "Out[269]=",ExpressionUUID->"81200181-eded-42c9-b146-e8eaf10e3493"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern Objects", "Section",ExpressionUUID->"1786121c-6cdf-4483-ba74-b1dad908116d"],

Cell["\<\
An important component of good programming in Wolfram Language is the \
effective use of pattern matching. Patterns are defined as a class of \
expressions containing pattern objects that can represent sets of possible \
expressions.\
\>", "Text",ExpressionUUID->"a53850b3-1ab0-49d5-8fd8-7df3bdd260af"],

Cell[CellGroupData[{

Cell["The Blanks", "Subsection",ExpressionUUID->"8d27d0b3-6681-4ac3-bf96-d288021fb8fd"],

Cell[TextData[{
 "A pattern object may consist of blanks: a single ",
 ButtonBox["Blank",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Blank.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Blank.html"],
 " (_) with a single underscore character, a ",
 ButtonBox["BlankSequence",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/BlankSequence.html"], 
    None},
  ButtonNote->"https://reference.wolfram.com/language/ref/BlankSequence.html"],
 " (__) with two underscores or a ",
 ButtonBox["BlankNullSequence",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/BlankNullSequence.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/BlankNullSequence.html"],
 " (___) with three underscores."
}], "Text",ExpressionUUID->"8109e63a-0eae-4cc4-ba0d-4976225f219f"],

Cell[CellGroupData[{

Cell["Just one thing", "Subsubsection",ExpressionUUID->"662e118c-655b-4bc3-83c8-93cbb420b008"],

Cell["\<\
The Blank (_) pattern object can stand for any Wolfram Language expression:\
\>", "Text",ExpressionUUID->"d45eb3a7-5745-4f13-9f57-7300db50f846"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "g"}], "]"}]], "Input",
 CellLabel->
  "In[270]:=",ExpressionUUID->"01d132a3-09f5-4d71-b01a-901d6ef6f3dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"f", "[", "]"}], ",", 
    RowBox[{"f", "[", "a", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "_", "]"}], "\[Rule]", " ", "xxx"}]}]], "Input",
 CellLabel->
  "In[271]:=",ExpressionUUID->"b793f1ae-4af3-48bc-a267-51d718198578"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"f", "[", "]"}], ",", "xxx", ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "Out[271]=",ExpressionUUID->"6b204a92-4aea-4649-a93b-223376f1fe31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One or more things", "Subsubsection",ExpressionUUID->"2c152434-2856-4c55-af2d-b0a41341e43a"],

Cell["\<\
A BlankSequence (__) pattern object can stand for any sequence of one or more \
Wolfram Language expressions:\
\>", "Text",ExpressionUUID->"fc862a17-15db-4256-affd-c7cd393bdb90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"f", "[", "]"}], ",", 
    RowBox[{"f", "[", "a", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "__", "]"}], "\[Rule]", " ", "xxx"}]}]], "Input",
 CellLabel->
  "In[272]:=",ExpressionUUID->"a17314db-8c3d-4910-a4e5-2b411bb2caff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"f", "[", "]"}], ",", "xxx", ",", "xxx", ",", 
   RowBox[{"g", "[", 
    RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "Out[272]=",ExpressionUUID->"572dafbd-84a7-4f8e-8b9c-5e1f2c19a41d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zero or more things", "Subsubsection",ExpressionUUID->"a849ebec-5857-43b1-9719-e43b3be034da"],

Cell["\<\
A BlankNullSequence (___) pattern object can stand for any sequence of zero \
or more Wolfram Language expressions:\
\>", "Text",ExpressionUUID->"0f4c647b-a1f8-4152-b000-d4f727465c14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"f", "[", "]"}], ",", 
    RowBox[{"f", "[", "a", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "___", "]"}], "\[Rule]", " ", "xxx"}]}]], "Input",
 CellLabel->
  "In[274]:=",ExpressionUUID->"6d11836a-8ea2-4904-a547-a6223081752e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "xxx", ",", "xxx", ",", "xxx", ",", 
   RowBox[{"g", "[", 
    RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "Out[274]=",ExpressionUUID->"ab7bdc8d-ce0b-42cc-8598-21a0264571de"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "Which pattern will match all expressions containing two items in \
the expression {2, {a, b}, {\"2\", \"3\"}, f[1, 2], {2, 3, 4}}?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "__", "info" -> 
                    "The BlankNull sequence matches any sequence of one or \
more Wolfram Language expressions.", "index" -> 1, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "__", "info" -> 
                    "The BlankNull sequence matches any sequence of one or \
more Wolfram Language expressions.", "index" -> 1, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> "__", "info" -> 
                    "The BlankNull sequence matches any sequence of one or \
more Wolfram Language expressions.", "index" -> 1, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "__", "info" -> 
                    "The BlankNull sequence matches any sequence of one or \
more Wolfram Language expressions.", "index" -> 1, "correct" -> False|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> "__", "info" -> 
                    "The BlankNull sequence matches any sequence of one or \
more Wolfram Language expressions.", "index" -> 1, "correct" -> False|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "__", "info" -> 
                    "The BlankNull sequence matches any sequence of one or \
more Wolfram Language expressions.", "index" -> 1, "correct" -> False|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "{_, _}", "info" -> 
                    "This will miss f[1,2] which is a valid match for the \
given requirement.", "index" -> 2, "correct" -> False|>["statement"], "Text", 
                    
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "{_, _}", "info" -> 
                    "This will miss f[1,2] which is a valid match for the \
given requirement.", "index" -> 2, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "{_, _}", "info" -> 
                    "This will miss f[1,2] which is a valid match for the \
given requirement.", "index" -> 2, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "{_, _}", "info" -> 
                    "This will miss f[1,2] which is a valid match for the \
given requirement.", "index" -> 2, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "{_, _}", "info" -> 
                    "This will miss f[1,2] which is a valid match for the \
given requirement.", "index" -> 2, "correct" -> False|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> "{_, _}", "info" -> 
                    "This will miss f[1,2] which is a valid match for the \
given requirement.", "index" -> 2, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "_[_, _]", "info" -> "Correct", "index" -> 
                    3, "correct" -> True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "_[_, _]", "info" -> "Correct", "index" -> 
                    3, "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "_[_, _]", "info" -> "Correct", "index" -> 
                    3, "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "_[_, _]", "info" -> "Correct", "index" -> 
                    3, "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "_[_, _]", "info" -> "Correct", "index" -> 
                    3, "correct" -> True|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "_[_, _]", "info" -> "Correct", "index" -> 
                    3, "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 4 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "Blank[_, _]", "info" -> 
                    "Incorrect syntax", "index" -> 4, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "Blank[_, _]", "info" -> 
                    "Incorrect syntax", "index" -> 4, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> "Blank[_, _]", "info" -> 
                    "Incorrect syntax", "index" -> 4, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "Blank[_, _]", "info" -> 
                    "Incorrect syntax", "index" -> 4, "correct" -> False|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> "Blank[_, _]", "info" -> 
                    "Incorrect syntax", "index" -> 4, "correct" -> False|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "Blank[_, _]", "info" -> 
                    "Incorrect syntax", "index" -> 4, "correct" -> False|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1136.5, {165.6724090576172, 176.5210418701172}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"8d801a8e-7d84-45b6-b20d-\
7e167ea5e33d"]], "Text",
 CellTags->"CYU",ExpressionUUID->"9da70bbb-2584-4613-b6b6-77098b99a6a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Named Patterns", "Section",ExpressionUUID->"e2d42642-39cc-46f4-9f62-82c75f690661"],

Cell[TextData[{
 "A label can be added to the start of the pattern object to name the pattern \
(",
 StyleBox["name_", "Input"],
 ", or ",
 StyleBox["name__", "Input"],
 ", or ",
 StyleBox["name___", "Input"],
 "), so that the candidate expression that matches the pattern can be used \
later while being referred to by ",
 StyleBox["name", "Input"],
 ":"
}], "Text",ExpressionUUID->"a0a47a58-bb6a-4a75-b250-7046fe738016"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "12", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "\[RuleDelayed]", " ", 
   RowBox[{"x", "+", 
    RowBox[{"y", "^", "2"}]}]}]}]], "Input",
 CellLabel->
  "In[275]:=",ExpressionUUID->"69a8b956-a333-4dcd-b0e0-1e5ddd7506bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12", ",", "5", ",", "11", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[275]=",ExpressionUUID->"8baa5f24-2768-4ba8-b579-049682714b46"]
}, Open  ]],

Cell["\<\
Note that it is better to use RuleDelayed when using named patterns for \
further computation, to scope the match.\
\>", "Text",ExpressionUUID->"8712ac81-5397-4a9b-9922-3adce1a2516d"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "How can you use pattern matching to reverse the position of \
elements in each inner list of {{-1, 5}, {-2, 2}, {4, 1}}?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {x_, y_} \[Rule] {y, x}", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {x_, y_} \[Rule] {y, x}", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {x_, y_} \[Rule] {y, x}", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {x_, y_} \[Rule] {y, x}", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {x_, y_} \[Rule] {y, x}", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {x_, y_} \[Rule] {y, x}", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {_, _} \[Rule] Reverse[{_, \
_}]", "info" -> "The correct approach would be to use named patterns.", 
                    "index" -> 2, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {_, _} \[Rule] Reverse[{_, \
_}]", "info" -> "The correct approach would be to use named patterns.", 
                    "index" -> 2, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {_, _} \[Rule] Reverse[{_, \
_}]", "info" -> "The correct approach would be to use named patterns.", 
                    "index" -> 2, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {_, _} \[Rule] Reverse[{_, \
_}]", "info" -> "The correct approach would be to use named patterns.", 
                    "index" -> 2, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {_, _} \[Rule] Reverse[{_, \
_}]", "info" -> "The correct approach would be to use named patterns.", 
                    "index" -> 2, "correct" -> False|>["info"], "Text", 
                    FontColor -> If[
                    <|"statement" -> 
                    "{{-1, 5}, {-2, 2}, {4, 1}} /. {_, _} \[Rule] Reverse[{_, \
_}]", "info" -> "The correct approach would be to use named patterns.", 
                    "index" -> 2, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1150.5, {128.39016723632812`, 139.23880004882812`}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"d4055045-2b7d-47cb-8d78-\
e7426e0e1b4f"]], "Text",
 CellTags->"CYU",ExpressionUUID->"758e8553-7111-4aac-bdf3-26a2e1c3a42d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Expressions", "Section",ExpressionUUID->"73b73919-7016-4e7e-940e-6c0c5b719679"],

Cell[TextData[{
 ButtonBox["MatchQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/MatchQ.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/MatchQ.html"],
 " can be used to check what classes of expressions match a pattern and as a \
tool to assist in learning how pattern matching works in Wolfram Language."
}], "Text",ExpressionUUID->"40369b57-d3c7-40c7-ad85-7a544a95e676"],

Cell["\<\
It can match against symbols, numbers, strings, images\[LongDash]any Wolfram \
Language expression:\
\>", "Text",ExpressionUUID->"e3b3559d-338e-4b6f-8f1c-6c5b5c61000b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"a", ",", "_"}], "]"}]], "Input",
 CellLabel->
  "In[276]:=",ExpressionUUID->"fa5233e7-66a0-4373-996e-40ffdcbf6716"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[276]=",ExpressionUUID->"e4bc8b6e-db16-4944-a083-84184406318c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"4", ",", "_"}], "]"}]], "Input",
 CellLabel->
  "In[277]:=",ExpressionUUID->"413a94f1-ffbd-4b8d-a8d0-e5522da600cd"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[277]=",ExpressionUUID->"41e6ca0f-db7e-44a8-a2e6-dcebe3a0a434"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"4.32", ",", "_"}], "]"}]], "Input",
 CellLabel->
  "In[278]:=",ExpressionUUID->"6e086b4e-c523-4538-ab23-f88758efab88"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[278]=",ExpressionUUID->"294946da-a21b-4deb-8805-2e9991002e03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"\"\<myString\>\"", ",", "_"}], "]"}]], "Input",
 CellLabel->
  "In[279]:=",ExpressionUUID->"9206cd1c-72fd-4037-b402-edafe0499201"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[279]=",ExpressionUUID->"c5b7a57e-d209-4a4f-8b49-d37f10f16d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "_"}], "]"}]], "Input",
 CellLabel->
  "In[280]:=",ExpressionUUID->"3779fedf-4810-461e-bd5b-32dc57128085"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[280]=",ExpressionUUID->"fffbd113-ec6e-4167-b547-766f81df879e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["RGBColor"], "Input",
 CellLabel->
  "In[284]:=",ExpressionUUID->"4f46e995-fb01-48be-a27a-58918bf5e991"],

Cell[BoxData["RGBColor"], "Output",
 CellLabel->
  "Out[284]=",ExpressionUUID->"2b134645-3268-4aff-ab7c-eae97e178db0"]
}, Open  ]],

Cell[BoxData["|"], "Input",ExpressionUUID->"3b579bc3-fe00-4be9-bfed-8ab2c4577f35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"RGBColor", "[", "_", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[281]:=",ExpressionUUID->"59d01d2f-2aac-4455-9f5f-36d7a7a20af6"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[281]=",ExpressionUUID->"02e62932-9c7c-456f-bb6c-6e6e518fef53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"RGBColor", "[", "__", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[285]:=",ExpressionUUID->"95875a27-18da-4480-b3c0-fbf50f9212cc"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[285]=",ExpressionUUID->"6ccf7674-8e1b-473d-a9e7-0c7429ec8a6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[286]:=",ExpressionUUID->"a1649f36-5355-45f4-b695-592c782dfd3e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[286]=",ExpressionUUID->"5f64f719-e0c5-4ee1-9830-567db1b32eb4"]
}, Open  ]],

Cell[BoxData["|"], "Input",ExpressionUUID->"688a5058-25de-4b98-9ed9-bd3507427375"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plt1", "=", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnW+IHVcVwDf94x+0UkEERUlrAlIR2w81KBWNxkKsBDRhLcRNsvvct2/z
b0vzB1Nj+xoaIU1KIWtaY7eyHwQVKljIJrVG2SCtFPuH1KAGBTeJ4gfRb37x
0/Oclzlv707unbl35tx7z8ybH9x9783Mzrx35p57zzn3zL13th7aPHXTyMjI
/nfBn80T3/7ivn0Tj2y5HT6Mzuzf2ZlpT35l5kC70973mdbNsHEflNeg3DLS
0NBQlm6366xKU1NTPSw+vk9DgxSgjm+Acs6w79F2u30RyqXp6emPp/Y1utFQ
a6Det6Bcg7r+cnrf5OTkPbgdyq2dTud+eD2j7m/0o6HuQB0/CHV/nU4/YNsM
lN3K5yup/Y1+NNQetJt0+gH9ylOw/UH6DO//3Gq1blM+s+vH0g9W37E0t2Y9
Fo7z7ei+dMc3u2fWq4XjvFVjIFd4jf1dqkaGfjwG2yeUz5fhZRV9Jv+cQ0/w
3l2dW7t09fm1vUGBz656gvow1l0Y337k7DyUnqlsO7KwtP3xhS4eW/a7S2bp
uY+Nc8h1mDHpB9hdD8D2OXwP/cZqeP+qup+r/7jy/Nou3Td8j/dusA0Kvs87
B+oF1ne1/m87cnYR9QR1gPqOvu7Accm+FbrC8VskkSdX1J3Y37EKpPUDPn8w
8TVWJTbWAry+Ba/3qv/HoR/K/VpM70NbALdn6YhOL2z7BPrfvn7UTE9Irtfm
1syn96lybXSkPA8//PC7ddvL6kffpkrat6zjBvcyZRNg/VbrdhnfgvNcsenb
VAbdUDHJtYGHMvrRb8PQLkZbOMdnVI+lbdRncLf5al9URd8k6Rty2xzXYxvc
KeObY9vm0nZRX/P7059bVHUD2/0i18/iel8y8E8y22BpkF3lKte8vqbBnaK6
Qe2W6z0he6B77GQvhJ9AOoKvvq/FQdG63thZfiiqH/37YWFXqWCbfuB7P+rf
xzdPfzaYPbDcV8nXkSJyRYq2Vw3ZFNGPIm2cau+cP7VpKXRbl4yniNaRsnaS
q73bkE8R/XBt41b4AolNFaOtk64jJNeS52j6EEZc/XPXflynG0istk6qrcXl
Yw/k2uSgsODafwz6Dst6PYi1pnzxmPbyIG9F0DhiUb8jTeOH8FKk79CNk+sg
e8YUXx3EXCK0ddSnSRgf4a7TJFeOcw07TvqRjOna9B39vI9kfCP3fJHyI0hH
Yo+zu4535BFbrnXCRT9s/UfK87AZ+6O8VNvvwImNDvtGl1fAQSJXUT5WFbH1
z8l/zMvDJX/cNv/JpU/yAX7HmP46yZW7rW/8dB5s+w/bvsPkj+ecO6o/WeQ7
c8ER09XR+Ok8WPUdln550bZYgj8ZwxdxjXe4IkGuVcdKPyxsIBefw3j+yP5k
aF/Et20pRa5VxkY/bGyAsu2vBFsgtC/iy7ZKXSO6XKtMnn9uY8fmjXPYQP5k
0f/nIpSdFco/kCLXmGTN/5bs/w3s+0dSfp3alym7PBuAK0YqyRagZxB9XiNU
3E6SXGNgMf/brTinj+n/8/QjzwZwieXmIcUWCGFnhbCtlGuJkGsM8uZ/A525
G7b9EufAAl360ogyt09yfGHbisOuUpFkC1DM14edFTr2KkmuobGY/+2rUM7D
cVvg9Rl4/Yn6/5n6kWED+Bh7lmYL+LKzQo+JSpNrSPLmf0uxCo79244dO26n
DVnzw2XZAJQDy92+SrIFyM7ifn49pG2lXFOMXENiMf/b16Acwvc7d+58f+KL
rJg/UXferLErX/UGkTamxR3PijWuLU2uAdHO/0bzw+3du/edsP0FeP9zKH9C
fVH/2agflBdkmK/K1zha7HwsHZx2pEmuvpEo15CY5n8jdu3a9d5ut3tTertJ
P0w+HfmtPp+bkGYLDOIQDPlZMWwr5dqi5FoFTPqR9McrbKtln9zv+HLMnHcT
ZGeVmavLd75VHhLlKh2db073MZ3LzjnWkcXgeSFBudkcYyK+ctltaXLe3dH1
H7rn2bjHOrKIXY9MlI3Zxdb7YY7zFsUmruvbJ9eB15doK5fx1WP6HoPvIFSu
UjHZVqoMqe8IOZeBVFugqK9usllDM8xj6UW4QT9S8cdYz2hLtgWK+OpS4quS
5SqRtH+etgF8jZPbIDUeWWR8VIJtRUiVq0RU3UjHH32Ok9sg2RZwGVePHddN
M8Rj6c6s0I9U3IjiuT7W57BBik2iw2UsKNaYuYmBXIX5dhJR9UON63KOGZdB
si1gmwMfO66bRmr8XCI63yNGPNeE9HikjZwk+R6EdLlKgfxzNf4YI55rQmqc
l8iTlZS4bhrpcpUC9R9kky7Mjo7HnnNTpQrxSPLVdfuk+lBVkKsESD/IBogZ
zzUh2QdBsuJ8Em0rQrpcJaDaVrgmoMS1Y6oQj9SNGUqL66apglxj09ePJJ4x
//SeXoj8XFeqEI/U9SHS40TS4moSIf/8Kq25LHCtcGqHpdYzIm2bcq/rwU3j
g+ST6Mbi2z9cJ8Yn11GVeKRqn0r2PYiqyDUW1He8OLs1+lhgFpJzTVRozPD4
8aPjEuO6aaoi11iQfjzx5AnR7VwRW6DI2tVloOthP4zylGxbETbx51hylAB+
F7StbMYCTd9bt93HsXgfY38Hm2NRlhee2dhD28XlvC7Hcf4GNc4rSY66bRee
3dhV20gfuqTOCdeUplS5cOuGTldi5ee6UpWcCIq3Ybxcsk9HVEWuJ08cng/t
04XQQS6qEo+kuC76IGXnBApBFeSKMsT2JrRPVyX9QKqQE0Fx3djPl7kgXa4Y
MyefLuR1Q+tHt9u9pcz/S49HpnNKYqz7WQTJuSYou5mjP+7F0OFQfk5yrQ1Q
zpU5h20+bLvdnoXyO1wvK1n3xBtwjVN4Lfhtr/3i2Oe36ue34Mtpw3nGcS0w
+F0f4TqnKYdnKmPtMW7g/AegvI5yhNcv47brzyKdXcTcjhjx8lC6Ab+3BeUa
XO/lsufKa0fgOl+A6/wU30MduhPlXfaaJlD36FrwuvnIvgcvpusZ91o78Pt+
BuXfrPqheU5lKmftMU46nc4n8D6Njo7eDPr/Ufh9L+F2er4mhm2FBOw7DoIM
1rHoR05OBFzjQ61W68PJ+w9A+WfZa5rAOb9xbnC8r3BPD3//O5v+rruPXM/U
gE6Mw+85Ctd6hVM/kLRc89Ye4wR+zyNQ9mC/MT09/Uncpj7HqpsPOgQh/Q9c
O5RDP2zjkWNjY+/B+wv3tl32mnnAdU52pib/9dunP62NP3I8kwl1Zw2UX6EP
50M/0nKdyll7jBM8P5Q3oHwXrwPluIRcnSrqh008Mln/5FVsb8tez5bXZ+/e
s3/Pjt7l03dt0O0vu14b+gLYd0C7/i14/Sva67i+S/FvvJIcud6w9hgncO4T
+NvwPfbFU1PTS9sfP9P322LmQYf0z7n0A8nyQRLdeAPq0XqOa2UB+vd1tA3w
/R+fveuVQzNj/8P7qzu27JwwybW2JeUvUB7i1A8klWuSufYYJ/DbvgHnfw7f
w296X3t693/JZ4uZB13F/gPJikdi7Aqu8x8ob1PhrkcE6MI70F/eMz1x9smD
W3oLx+77Q9bxHOuIID7sK0SVa97aY5ygHwfXegKuMd+e6lyaODTXHzeK/Qxm
1cYHCWnPFL558lMbbWwA6WOGumcKTWuP+QB1EuyqCzQvYey59aqqH4ikMV+X
Z1UlzoFBxM41Sa8zE/sZ4Errh6Bn31xtZInzYBCx5KqblzBWXJcI6Z9zIyXv
tMgccNxjhpzEyuFJr/0qYW69quoGEtsWuOF7ONrIZeO9voghV10ejoT5Laqs
H4gEH6Ro/FGyrx5ariiD9NxSEua3qLp+xM7nLRt/lJrfGzKfVzt3mGadvxhU
XT9iz29bNv4Yak15V0LJlfJz0+vMxI7rElX2z4mY7QxH/yXVVw8hV1NeGqdt
BfX70Xa7fRHKJRyj1uw35vBXXTcQlGMsO5Ur/ihlvRWVvlw92limtV85x8wn
JyfvwZwNzNXvdDr3w+sZdX9eDn8d9CNWnJdsAI74o5T1ulR8y5XsqnS/yTlv
MdTvGSi7lc9X1P15Ofx10I9YcV7u+KM0X92nXLNidwXlugrzQtWCG8Feegrr
Ph2EfUWr1bpN+ZyZw18H/UBijPlyxx8l+uo+5Jq3fl8RuUI9HoO6/ZZaoG+4
D14fg30TdBx8vjxizkG+IYc/5FxbPgltY/ka25VmZ/mQa3qcXIVbrqAjD0Dd
nsP30G+sxmeC1P15OfxV1wsitI3lc2yXKweeA2655vWRHuS6KrGxFrBPgdd7
cWPyjNCVvBz+uugHEjLO63Nsl2xzKXYWl1xNYx2pa3mRK84RkLXflMNfJ/0I
ZWOFGNvNskFCw5WjkPebJOQjpqmTfoSysUKNLUuJZ3HI1Sb2ICEfMU0dfHOV
EHGsUHlzkuysMv2lGq/K8qkk5COmqZNuIL5trNB5c2STxI5nlZErPS+ZZStK
tK2QuumHbxsrhg0gwc4qKtf087ImJNpWSN30A0nyhrzYJDFsAFOeUmhcbVfb
793vOzzeszLUUT982Vic+VauSPBFXOSqxnLz+j3J68TXzT8nfPgI1HfEet49
ti9C9dhGri7fVaJfTtRRNxDu599iz1NGxPZFbORq63MgUuRqoq76we2nx35O
kSCbPpaO5Ml12Q6085WkyNVEXfUD4fL5kjZOjA3gWge5MbX3tuMchDS56qiz
fnDFDCX6jzH99YGfrshV1Q3bfk3K/ExZ1NU/Jzj8dKltHNn5MXRElauqGy6x
A6lyVamzbiC6ts4Fl5hNDChOFFpHSK4Ls6PjFDNw0Y2YsXIX6q4fSJn4SOyY
rg2UvxFSRyju9OLs1l6RmHMV+g5kGPSjaB8ive9QWe5HwvjsaFOdP7WpP7/J
yROHneRDfof0vgMZBv1AXPuQQc5DBdo4YtkfsfeRi6DGz6okV1y30fV/6u6f
E65t1iD2JTi2okOZF4R9nL0/9qL0U/iZ5OQs1/DrmG+Acs6wzzh/3DDoBkFj
v3n3hnSpCnaVDsp9UusxzzmvzzeP51bPKV2uUO9bUK7p1vazmD9uaPRDyWUw
3svBMcJ9chsGOVBJX1JET5Lx+nnSNV2ftEJmFnJ1/yXlgDp+EOr+Op1+5M0f
N0z6gZDPrbOdqO+vg24Qav3OquPp/0FfRu2D8vRrINeUjqAcA8lVOz8cYVob
1mL+uKHSD0R53qBHOShkI9RJN1RU30HVles56Mslvd+l31HbnoFcFTn7lKtp
fjjan6EfmfPH1WV+uCIk7doixVOqEG/koO/DQ72n5zOWX6+/x/6maPxL6S9E
ydWkHxbzxw2dXjQMH2n9oPnhRgzzxxGNfjQ0mOePa/SjocFMox8NDWaG1Tdv
aGhoaGhoaPg/2TqXnA==
       "], {{0, 114}, {200, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{425.2070312499984, Automatic},
     ImageSizeRaw->{200, 114},
     PlotRange->{{0, 200}, {0, 114}}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plt2", "=", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwlmXk4lN/7x61ZEjPPjJAU7SsppYXuUwlFSokWIWkhSURIKpWQZK9kS4X4
RHZJTpSikKiEopAsYx7rmJksv/O9fn+d63Vd82zv9/u+73Ou0bA/u/e4mIiI
SJaoiMj/VnEsW9ux9upmXun/rwt7SjfNibSFu/mNw7PJKnyu5dAUcRbORecZ
fCHrH/YpfkHEZbjytMwnmazNhtfLn0TcAbWrSdX7yPrVNmJxfEQirNs+w2J/
eCLsdVZpvheRBWux8JX37SwIH7LOjYnAsF7xqYGaH4ZNFTtlt7rXwY2SV9tl
t9eBq4/Z0VzX71B44Y1OSVMjnCk6Hio2/xcsypjzyZjTCl+6d8ik2ndCZ1fT
wQrpDgjW4okUHOwGDal00Z3MLji3vDL69RMOCNzfr83gd0Pn8c4rSQUcOOdZ
NH+teA9YJok4X3nPgedXZqgVzeiBjYobtqIeDtTb6Sx6Oq8HxKaecvGKftja
M3OLrmkPRNTfMsK5/WB/MpktmtADOd67Ba/KuGDW1Oihq9cLwmOnM3+6DEDG
zO7au/Z9YMcc9irxHICSqcNzXzj1QUWpz7YHfgMQ4RBZ0+DWB2Eqwd8PhA5A
kYnnplH/Plj8KU3sy7MBWGcWvKg7uQ8sNnZZfuAMQPaxhbdCfvdBJuPoVIHT
IKjEWJwpP8gBdml3VbTbIKSUiVVNP8oB79OuUed9BsHkR7Oh2SkOGLy7vHR1
8CC4N4gnl3pyoOViwr5nTwfhTo7bE9NIDkj/bUl91D0IHw3k7WZ/5ID9K8s9
YSeGIGA/5vmt7YfVBcqUytkhcOPND3bX6wexrOaGhxeGwHveqmrbbf2QnGRj
lRs4BJoP7SzmmvdD+7UTNt/Sh0A3OXzzRmei005P59n0ELxe71vzM4lwY3Rg
2oVhYJze2F8rzoXVdVY7ta8Mw5HOxpx8GS6IVanIFQcOQ6BDISdSgQvJxfF3
Pt4fhp7D4QXrVLnQHv8khvtyGA7k3TqvuJoL9g75j3VERuDXG9dV62y4cGzw
y+vXgSPg6O/YJsjigp1PmFVR2Ai05sw+5pPHBWtxU27WvRHw1K3ZMVzEBUvF
N6qJaSMQGle0qZb4aLwh2/NS5Qi0Gc2PXNLABc2rt1dslB4FmYnPGi4jXFgm
u+ONNmMU1GKdLc7zubA4UuLQUuVReFu0tMltnAvqTy7eVF4yCrdB6esBCRpY
VY7tPKNR2Bzme7GSRQOfYXgv9+YorMuIy1yrTcPIfVGtjDuj0PYxN+y1Dg2D
815VJN8dBX9RYf629TT06ugMh6eOQlHd/XergYafB+aZub4fBdFg/e5cUxrK
kybFV0rxgMtRPr/lBA2lS4tjFyjwoMrjy4I9jjS8zPHQnq3Eg/6ygulWzjTk
veXYTF/MA1py0GuXGw2p3c0vegx5cG9+TsmPSzSErCo8mxLAg8NaZ02uR9Lw
YXVjl0coDwZ3JC+XiaFBeu3Yke0xPDDmiNwIuEfD9Q26pp1PyP1ZHUlO8TRc
3Fq4ZF4FD0avKJz5nkJDkUFj4mA1D/a2npim8ZQGnuHYzLIvPJghfYRtn0GD
m4mupF0nD5pviIbUZNHgZFH4O158DN7tjGjZUURDmmXjgTPTx2BlzMbplsU0
dB0Y+6THGoNSkVMZh0poOHpEt7Rl3hjUR5zctOs1DQdOFMaqbB0DB92RkMb3
NBh5Fe6LvjIGOnPFo658Je/r0/jBIXAMlp/aGMNqJPr5jm3RCRuDwkg1scTv
NGy+qruqIXEMnvu4Kia20LAuuFCOicfg9VJndYPfNJwPabz2690YPLmqciK2
nYac0DFhVu0YrIrOpXo6aFgZqdtj1joGnFLXxLNdNCyIK6wImRiDvHWVfhp9
NNgnNOpZS/LhWtPN4Y0cGpKSxnKXz+DDzIHuatN+GmY/0U3+MJsPOVtD/jtI
03Ao1UoldgEf1J3NcywGaLj39EKY4wo+bOx8pWo8SPKVWegnrceHptspysrD
NOx53jjauI0PA5p5GSOEQ3PGnFNN+DA8ceth1QgNsoW6hw0P86FWUJdnzaPB
+IVVveIxPkyf1fp51hgNAS8v7PjjRN5n9+iez4TFXhfqXvfhg/nX6POLBTSk
z6BSJvz5ECLxe88XwnsPO7Mv3OLDz7RGHS8hDcK0d/4DkXwIrzRRZ/2j4RFP
fdAxjg9aXCbrCWFTg4u2HY/5ELBEdIbmOMl/+Nca62d8yJcdnpFJ2GBlcPru
Uj5MpJkviJyggePTqVz1jg9mGn4b+ISjKjff3PqJD+MvVuy3mKRBb+b90ZeN
fLCK23YhlfCfY8PH1v7iwzrPjMRBwqHZu+ozu/kw5b27dvUU8XMqFS0Z5MMz
GzXx04RbTcWyHgr40GAruTmWcECstZqqmACe6Av9XhPW7C64FSUrgDG9wYqf
hL+tZQpnsASwbXE7NUTY79rpUzdVBZC+8/3xCcKLP1d8E1kggBHv+NIpwnVz
1Lf7rBBAtJyDmoCwl7NP7rCOADJaZ/v3EFYv/qJxRl8A43uqOXWEK6W0wrq2
C4Bn7H0ki7Dr/qBJWzMBZK1a+eU6YeVHHc5NlgJo4w3vMSf8ekC/Za8tYfkf
DWzCjpvv7ag+KYBHrjzrT+T7qZChwu2uAnhxz5JzhXBxk+ki7CWAzYGU/1LC
9otTo9ZfFcCPt1vnVBF9ZT1ExXOCBFB+QKzMlnBO+eFzyyMEkFDv4tRP/DnE
KGh7HCuAO9vTZrkRFrNhmM15JID5Oz5/7if+ZmQ4ldzNEICJQD7MjrCF4O0y
Zp4AdvEC938g+Rg3nHs/uEQArxwc5y0nbNre4HGpRgDnX1ENn/kkD1qanbyv
5Ptv6BUqEY67FLjXtVUAyDf0kQXJY7+yvtYxWgCXDwdG544Sf3endBszhbDy
ocsfySHib7yIVbmKEDLG7JkSpD5aew9VbJonhKM5F40EpJ60AhSSNdcIgdYx
bqgk9VZX4nWYvV8ItSaqbuPdxB/ZhqrbR4SgLk2P5fwl/hxYuV7qhBC09K8H
25F6dh3+zRZ6CkHc4lxjEql35jKT2rZ7QtgdZala8JP0J6lEZmWSEPrOuGmh
H0TvP0MWz9OEkBDpe7G8mQaHh7EtV4qEkBNeX5JF+k+Rcm+3xnchHD6qRa/4
TMNtnv4K2V9CYFgeqvH6RPz5En526K8QFsdEdJXU0DA9bAOvfEwI3KDWjys/
0GAjFSTuoPQPOOd0XXLKaVjz54eh6dx/4JlOab8m/VD6zapgncX/oDYhcvW7
UuKn33eGpO4/aBnxHC4m/VSSt3hOiuU/kBos9THKoeG/znfru6P/QZHwuGJ/
Ig1Xy2f51sX/g89+mSKXSX+3THLBRU/+QY3shjUyD2gQsZ5pGJT/D8pPXHKd
RubDvobj+5Z9/QcfB+SOPL5F+kGZhIszexySeOWhLh6k3yRufTQQMQ7vAuU2
bdlGw83Kup/+D8ahSNVjYRSZb+8GbZQVH5Pfb1+l3LqJhu0GF29vyB+HuVc7
ZlmR+bi1J/eCf+M4/LyenftzAan/NQtN2bMnICNoTHMzmber3kuN6j6ZgKsx
HTkWJVw4OxCt9eHZBKDnN3qCC7mQqbLAybpgAt5aXd9dlMOFlc6o7cr7CZCR
nZ/FTyPzneldVdUzAQW3t3cqRHNhweHe+MOak+CccdTx/mkuKNHVhpcLJ6Fc
st13PsWFe+H4aA+ehNCrxko2clxQ1snx3Vc5CS9Tl9qHTSPsfTdncdMknO6o
Uvgh7IdZ4vZz6oSTsFJLgq/Q0Q9zlMZG1TdPwWj78Nm+7H5YBBpPyt9OQYrX
GPPSjn6IfV8sKu4ogg6zfy10t+PAwK/n3rSzCLJ/HpemSfZ/RsKUwRZXEXQi
PfZghzkHRlZE/s7zEkEL1I7uWr+NA2YRp8tOBIogReekZ2ELOSB2ZPbVD6ki
qLg+oH28uw9OD10SiegSQb6NIiJ1ZH+qp7ZlSt1BFNXdDDxYc6gXjK2/uNmf
EkXf2950aZj3gsWDk12PnEXRIcEN0bNGvXBaJbRmkYcoavsX2zu0phdiFVse
rAgQRZ+Kjn9/KNcL/Bke69eniSLfUsOohJIeyJtMO7ebI4puRhgGLlbqgeW/
GJ2XzouhQ7rDnWqFf+FZGnUq300cyfGkPrm2dYJv65GG5QES6Ofe40uvufyG
c3rrTRKiJJFvnVHUGr8WECYa2PeFTUPNXaYPKzW/QJ1rrN2FZCmkJue9xO3L
e9hgNG/y50Np9Pmb3IlJkedQtX1DGoqTQRvqbOZkhWTiJ9n3N7RnyKLPLHW9
JxcqseL8FU42T6cji8U5Cwz/NOB6UWl/lRI5JPEh8alOcwvOl3ZPqauagaK8
V+W/ifmNVygynOwr5NGKsEcHrF92YjqUx17zTQGtus3sWFT1F3MG5pSvbFZA
holviqsa/uLevUZnl7QqoLf0vmcnWv/izpn3qtS6CI/f+R46/Bc3J2zwk+Yp
oI0RppN31bqxvVXpMFeWgdSX2W+95dqNd50UPfJ2GQNti3do7GD24Pk3b2qd
dWIg6SpL/4Ytvdjtm46fvTMDrSsQj325sxe/Xthevd+FgZa0njgXv68X27zV
c9JzY6DwllZLs+O9OFZ06LGMDwOd7vtc5hDYiylf61mPgxjIyyzM0L6mF4ud
05ZsSmMgx6PjdeF7+7D569Z91ekMtDJI8c+zQ304SSEkGf/HQL4xel5v7Pvw
5swuSHnOQD+yJdktbn3Yp++Bj3sRAwX9ZXFeRvThoePTBmZUMlDdp+ILWz/3
4fZDLc1b/zKQ9vYtsy13cLCcvlWqXQ8DJbxq+aRnzsFr5za4+/UxEFdeIUb1
IAcHdnyQK6YZaJalm3nZKQ7Wci7erM1nIKfCaUbPbnKw76X7yXNlmCjdLtJE
8i0HKyZZOY0vY6K90iEaqev68Wb/hnWzVjJRycl6+RD9fnzKYbf4ei0mMlwS
XH3KoB+XLDGKc1/DRHq9Sdkye/uxffa62t5NTPSmTru/27kfZ5Yrrm4yZSIN
9eSbqg/7sfGfBkG+CxN1zjfNNhDn4kvLQy9muTKRUUnU8EtpLs45ZzyR5sZE
l8LVO5fLc7HqZIlInCcTvW8r+DCqzMXcmSlS/n5MNBmmE6StycVRxl6KZqFM
VL9S+j8jKy7+lTFbu+sZE9UkKnD+POJixaFvOW1ZTLT6uWGgaxoX71wfrtOU
zUSp579mDP/HxblvJddX5zNR5p/o6x35XBzwk7s55xUTLWeY2Di+J0dZhTJT
vxomEuRWVcj1cLGX2/FTM/uZaF+yvW3GIhoHmnBPbqSZaEvVqmkRy2h8d8GF
kzaDTHSSI/b6rCaNC74FnkgZZaLgPqNTjHU0Ht74n8O6SSbqcB917jKgsYv4
sJ2lAoVCHE2tO+1ofOnHRTsfJoUWjc3M2+RA45B8CbsEFoUM/x6VDz5J44yT
M227lChE8bLfTXehcffHDUc81SnUb3JoxSMfGh+LunIwRptCDDmQ1IigsdsZ
mYPFayjUc1dRpTuKxv6GEQda11Jo/8RFjZS7NE7iP7JatJFCkbnf5KTiadxq
/X5/wVYKzQ9xXG+dSuP+tXv2NxtQKNF/b0vzUxqPyzdZTBpSaNPFj857/qOx
alnvPkMTCp39lnBAPZvGBxbK7/22j0Ka7gVoXzGNT03GmAv3Uyg4hG8QVELj
C41zzeccoNBSyXOrC0ppHBOkveeENYWWPw96N1JO44Z+CzOeA4UcZULKJT7S
2Kzgwc6ZnhTaqDp862wTud+w/ZSiF4W2yj3Yw2+m8bVVy/IUfSikN9qi7v2D
xkXpRWqKfhRyM01vt2+j8bzErwOsAAotfOL++1snjfV+xD1hBRK9xOv4c7to
bKXicIgVTCG7rePKR/8SvSOH3lChFHp5/4bbxx4a824q3GXGUIiFWf6IS2NG
xTcT5j1y/ab7jTtoGi8XSxBhxhI/ah6vMRmgsZ3vCidGAoUeq+yeXDtEY58X
w3MYSRTyMHR3njtM42hecYNCMmGnJb9ERmj8wXWHvkIKhRIcTjRmjNK48xlj
SD6NQhZx1w958Gg81duYIp9O9A21aV83RmOd4ycY8pkUmm0eMPWQT/RJXlkx
4zl5vod3lImAxo5tI94zcihkJHRb2U844eC1DrkCCp181eSk/I/oE7PznlwR
hYa3jMsnE25oYO6SK6YQO/9OwfxxGnMZTaJyJRRyKXA/Gk9Y2iypYHophdZ2
BikoTBA9b508Pf01hTa35L/2Iqxfqak+vZxC4ro/zzcTPiDJ+yL7lkKp4X+X
60yS/G19FST7jkIT10r/3CAccvn6ZtlKCkU82ZVM9ts4tcRkWOYDhf4L8T/K
nKJxuYBKk6mm0N5a0/kmhH+sa7aWqaXQnsn4v76Eee4PmTJ1FNqQ5ZiZQpiZ
feqddD2FzriRaUR4BVfrovQXCil9N97WTthw+ZiW9DcKrTm7izlC2O5UaafU
dwqFVWT+JucPfPHJjftSzRSqPemUR84fOKbd1EzqB8nD78tB5PyBn89li0u1
kvosGbDrI/zBuqVw2i/yPP/XG78S/nM/2XlaO8lD8cjMQsIijY4a0zopVMWJ
Gg0jPIut/U2yi1wfn/7NnrCOOT9YsptCt823FK8gvDsUg2Qvuf7WiSQu0cPp
Y8CIBIfoU7s0KI3wdWmzpxJcCi2OjTt/iHDCdkUbiQEKMV3q7SUIv/D/QUkM
Uehc5a99KUR/7riTrziPQqFifzfXE/8OHjBZKhij0Gl7kXgbwm9zl3/jCijU
WFGyq4P4f9+Jo9U8QSGR+pjUr0IaS7yr/vFpiuRnzeiebYRdNJ4FVYiykIaM
166nJE8G3890PJdkIZ/3V5ANyV/WGrOwFCkWslhoqfuM5HPWHU39OBkWsmvn
Xh0h+R3YTsfcnMFC01PVWM4k3w9yXXfaKBLOebVsapDG0xTMx/YpsdBBX+5b
BmFXJ+3HO1RYaOynV94sUk+GGkMTOmos9OxiYJQSqb+hUPfs6QtZyLPA1zaf
1OeR3n02ootZ6D3XMiOom8aV23Wmjy1hoYTiGDNLUs/x4yMO7SvI9cKzcd9J
/Rs7eSq/0GGhrBvyNldJf8itsKzIXMdC/Z23zyi30niOhq7b4/UsFOo18i2V
9JPhxrGPd/RYSH+ouSir6X/6e18+YcBChT0r3xxroLHMw4MrrA1ZqPujMOPV
ZxqfH9/QZG7MQldEUwYV6mi8I1e4Wt+UhUxq10bHV9N4RN23i2XBQrNseMZH
Kmhs62sdKWPJQnkeDgt83pB8NeqhKSui5x41uztlNE4Mnbjfe5iFdu02Fia/
ovHOcb9dZcdYaMmf7+9c8mn8sPFqnos7C8XMuqN9/xGNuypWtYV6sJAQFRRK
PyT1kNcmk3WBhWaAwe6zCWQehenb0hdZ6AYnIF/jPo2rdwhkXK+z0AabBnfV
UBrzX7ranosm9zfXdDzmSePN6XODw++ykFbNoWMG7qTf3qvNy75P/K1rvjjb
lcbyHitkh+JZyCvo1PQcRxrP1+zOc0thoUt9pqVu1qQ/JdnKni9kIba4qLEJ
onFUqPzaqBcs1GxWfzdBj8ZNvq9s816yUE3jccWe9TR2OKiaP4JZaCpzWsIx
bRp7U422HpUsFLBaXZzWoPHj62b5nk0s1MWxZduJ0lh4St/O+x8L1dcER+S+
IPP95TLkMcFCb7LTryIyzx/MUFY/N8VCzmckOyqec7FezlDbKXE2avD7KlKc
ysV+/1JtD0xnI84lzUqjaC4WD6VsdVXZ6FmWSYDQhYvlcv8eGd3IRmX/7V9Y
MZuLrSW/6g/qsdG26jnJ9kpc/MyqXK1/MxvVUPxCPpOLzcbjfnZuZaPYiFV5
8lJcHLZ975EvO9koNcGD3T7Qj9nfS6xzD7FRd+XCtMVv+rHaRPjhcz6E/8aq
rLcn+6P2XS/u+rJRe22ulsPhfnz+vYxSqR8bFQzUf7hp0Y8/hF+tl73GRvIN
rHv5hv3Yc9G5HY9vsdHPa0XvMpb147rde3Qb49joqoS5vsQgB/sny7P0MRs1
FynuP3+Bg7uMbn2QllBE1rb9az6d7sP2JnbqC6cpois7fLSVjvXhn2ZrPbdI
K6Jxwe9QK7Jf/bK/TcNHThF1aYm5lxn34fJja7z72IrojxJauHFhH46/3LK4
dqEiMh9xsSn70YstCpffiDRSRA/rDo+tN+zFbxZVw5xbiqjx2FsNe/Ee7CSd
IqEhMxN5bpfdWWPbhQuTFui/CZ+JpF6tdCrR6MC1m/Qq9jKVUIBbccWbu22Y
7/Rgn12oEtIqtCh+H/kdV+5J3D9jpjKaaP3+Xj20Dttv0EtNjVJGcZ7WaWpx
Zdixv2b0R4wyKpG001SzLMOuD20NqPvKqLrn42klRhm+LHPtt2+8MmJN22Q/
fu01jmuqUt2booyCz79dpNhYir95W4WNFyqjhu6ZntHuxXhnsZu3eYsyqndO
mPErJRubu0hUBvxURhu/N7a0qWTjA/NiZpa0KaP51766N4c8xyeDX+Qu6lRG
x/ypQ1f/ZOLrh0S4/zjK6L2P5kCGbzouFd62T5lURh5PoxdFPn2IKzLnZreI
qCCe01lT9p0kXG2fPcUQV0EtYXnV6j0JuOXDl7iLUiros9H9+FG/WMyPVW3c
w1BBv7clFm9LD8dTZs8WBlAqyGHRzk2M3lA8TRzOv2SroNXD9tF3Lgdj9ml7
5iIVFVT39e/JC+lXsercEdvDqipoAdU2r+KyD57XcCMzTE0FvUjxsI9MP4eX
3VSaqJirgtbHnblclH4Ua296avJPQwUt1L79v/+3Sv8Ph2LZdw==
         "]]},
       Annotation[#, "Charting`Private`Tag$144428#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVmnk4VN8fxxkq2QaZsaa0IJUWqXyj80mopJIsLUSkVYpKi61FaBNCkSKl
ZF+iIo5QpMiWrNnHjFkOspT1d3//zHlez733ue/P+7Pce+4z6k5nLV1oQkJC
BdTP/1cRLF7VrXd9c1Xh/9fQzUs5hZvUHjqgH2aLVJUenkXjGauONoWdRSww
ZZWG+aFe+RN/c6l12bZpYZewB6jZ1L84gVqXq//h24fGop8OYZpPw2IRvfDQ
XN/76cjSVan5cVg62pm8/vgCX4xCh+yyI8Mwirtq96kDfqBNn83Ejc5Xo/VN
bzNPX25HMvWvfmx4WI2uBecEiGa0o54uWsTK7GrkZPoH+/S1o2Ch/AVKf6pR
z4YxEFvegbo2Ldcb8KhBO5esim183IGCsiQcn3nUIgsVCZ6teydqiP2eM+5e
jy56Xt/MYHSj5DQtr4HQeiR6QCc8W6cbXSvwB1ZmPer4cqps8/ZutKzF4FvN
YD1KH/vgqOLVjbyZqR2J7j8RCZyJ6m/vRovv35ewdW9AnZd6t3xL6EHnru4+
kn2uEfUOuB/pV2chMzeDRLGQRmT+dq7M9Y0stNhJm9inNyIJ0ZJztD0s1LBj
to+YoBFl/XIYKvViIUOlwsf2p5uQ3DztWNN6FhJ/v7J6zrFm5DH4XFv7eh9K
GJFEdoda0aJlRZ+7vrKRL2f8VubVVhR+POXG6zY22t/G/j47uhWVjV8/YTXI
RpKfSw9mNraivz53nY8pcpBHuLfnbJs2ZHE6RPKkCweBLi81w+I3eqtgs6hp
nIPOvHcJpi3uQAE3vUbYclyks2PvQuF1HejHrS/af5dw0UCTQdaMcQeif/cr
Yq/nogsT8xomj3Wg8xKnP545yEVXNxfPH0vqQPnbp8tE47gooFQtlbu2E61M
LF5ls5SHtluLo/6tnWjc7vUmDz0emssaqWZbdaKNzuEX3Ex46N6cyuFez07k
HxW0dI4LDz008zLoyOtEo3c+P3wXz0Nx1b++1Rt1oa3jco9nKfKR05ES+7p9
XSjqVMoeVQ0+WjyURmqOdqErf78tkVvHR6/mBcz7EdCFFiwqYUfv4aNUm3WH
vlZ0IV1OoeaCW3yU1xrSX2DZjczD9H17OXzkfcbb+6NzNzL4JTXNGuEjw+nj
0vkXupHM6ETGF2EBKlqA1r6P7EY7GnOvLlQSoDIn/pWs5m7E/jK5ysBUgOrZ
O+a+dupB+oUP1s6NFiASpWVy06MHpSbeOQovBEh855zrDjd60CHWa68DKQIE
qaV/FeJ7ED/mpd6aQgFKdkfsoM4elLQgvvdihwB9WaS2xGWwB53+02Kezxag
jrpJhy3CvSjKZ8iqa0CAmOvzfv1b2Is6n5Vr/hQi6Mb4urJTjr1IY77WjPkC
gp4mzxPZdq4XiY7devhMg6D3dkObF1/rRaN44G7NSoL4hem5LbG96HwQvtey
iaD9N7Vfmbf3osol0XQ/G4LOr5vbpUV60RazXtEWO4KCe/vmz5rpRe12Q1qK
zgSVbkuIKFBjobtq3B69swStklx4S+cwC3kaaQZN3yLIrGC6SNyNhbpW+O52
vkvQUbe2SZYPC2m2tzHehBAUXR19IfYpC+1qVn34K5qg2RGMozJtLKSUMrcQ
pxKkbjocy+OxkIaREW1FFkEGY7Ut5ZMs5B92XP1KLkHuB0L2XVftQ7NU0ttz
CglqnS+xdehQH/I/cZT/vpKgsSqOb9XpPnR3l0PU8hqC5K6V5yV59aGgfTXC
fvUEbe+6tdb5SR+KkNecKGsmyPnhUTeU3IeKq9tuFbQR5Gu8NUklvw+tzs0s
ethBUPYroUX1zX1opd2bTV29BFXZtttn9Pch9S2RngfZBLHFCqPujfch9HSt
bXY/QSJ5MT9PiLNRMW11C49HkNppL1kTZTbqrz8sNIcQpK96cJe6NhvNN0sr
FR4kyKpy4+0pfTb6c2aFRtsQQXdWjQrlHmCj9UsDP+iNEnT10o7lrFNsNB2x
2KVmjKCTOMaa6c1GTkOHV2z/R+VvzoCf6X024r8Pkooep+LbszXJ8xl1/ZTy
nLIJgjY+iqx/lc5Gr0/mKfyYJEirnTPdUMRGElvWb86aIkhR03DZnFpKn0PQ
lXPTBM05G7JvQzcbfTL8WT53hqDR3G6f48NsNMw/vdyXYtb0+sRHszjo5cIv
cZUUN5jeqS1jcpDx4iCtvxR/CW6bHNPkINHOa8VTFOc2rNbU0ucgie43br8p
TlDz37vfjIP8LDRXRlMcfuyXV9AhDtov2Da9mmL/NO1X7105aM6CW13xlJ4L
oz7VbB8O4nbeaCaUXufNNeOKDzgovJbep0CxZcCSpTviOKhac+lcFSo+o6pL
e65kclBoFmvLP8qPtcxvV94Uc1B0a3xYFuXXosNqL5vqOGjyVe2k6V+qPl65
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
5SS54zWb3uycUFeCqdX3////3cL/AY29SDo=
         "]]},
       Annotation[#, "Charting`Private`Tag$144428#2"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{388.5937500000003, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
       0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], ";"}]}], "Input",
 CellLabel->
  "In[287]:=",ExpressionUUID->"d7506076-5195-4d1b-862f-005488c7162b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"plt1", ",", 
   RowBox[{"Graphics", "[", "__", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[289]:=",ExpressionUUID->"19928a96-1913-4b67-b32c-e2aaf52e97b0"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[289]=",ExpressionUUID->"df1a5840-e815-483e-aec3-1a0621356a97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"plt2", ",", 
   RowBox[{"Graphics", "[", "__", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[290]:=",ExpressionUUID->"73914265-2603-41e3-b065-5a14c112b16e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[290]=",ExpressionUUID->"fab91786-8840-4722-9663-387de10d3796"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Head", "[", "plt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "plt2", "]"}]}], "Input",
 CellLabel->
  "In[291]:=",ExpressionUUID->"ab0f6f66-3b79-419d-a5ab-fe9820ce170b"],

Cell[CellGroupData[{

Cell[BoxData["Image"], "Input",
 CellChangeTimes->{3.9428519193685417`*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"e07b7a37-04d2-43ca-a3fd-88fa4641bc78"],

Cell[BoxData["Image"], "Output",
 CellLabel->
  "Out[294]=",ExpressionUUID->"da4a9cf6-82ee-41b2-9f7c-4e2960f812f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Graphics"], "Input",
 CellChangeTimes->{3.942851917282207*^9},
 CellLabel->
  "In[293]:=",ExpressionUUID->"e27047ca-a281-4de5-b92f-3b993484625b"],

Cell[BoxData["Graphics"], "Output",
 CellLabel->
  "Out[293]=",ExpressionUUID->"3759dc9a-1378-4531-8719-8cc8f85a5d90"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Restricting Patterns", "Section",ExpressionUUID->"fc265650-2ee0-4d1a-a250-9bbb2afaf0b9"],

Cell[CellGroupData[{

Cell["Expression with a Specific Head", "Subsection",ExpressionUUID->"0ba92007-cfa0-4d7b-80da-f2805bd70c17"],

Cell[TextData[{
 "The end of the Blank can be modified to indicate that it represents any \
single expression with a specific ",
 ButtonBox["Head",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Head.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Head.html"],
 ":"
}], "Text",ExpressionUUID->"00950b9f-cd24-4dd3-9a38-138d562ead81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"3", ",", "_Integer"}], "]"}]], "Input",
 CellLabel->
  "In[295]:=",ExpressionUUID->"966c6f53-e27e-4e70-af3d-90897be92e14"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[295]=",ExpressionUUID->"22da20da-af41-4bb0-bf32-3ce8aa082df8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"3", ",", "_Real"}], "]"}]], "Input",
 CellLabel->
  "In[296]:=",ExpressionUUID->"5efd516f-238e-4872-a59e-3cc9dbb24f9f"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[296]=",ExpressionUUID->"94f926d3-ea3a-464c-93e0-8a07a02bfc48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"3.14", ",", "_Real"}], "]"}]], "Input",
 CellLabel->
  "In[297]:=",ExpressionUUID->"3881c444-a24c-470f-9c2d-940ddbb2da95"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[297]=",ExpressionUUID->"64e80316-e847-48a0-ac91-e1af3f63cc92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"f", "[", "3.14", "]"}], ",", "_f"}], "]"}]], "Input",
 CellLabel->
  "In[298]:=",ExpressionUUID->"50602aa4-9f28-40fb-8de1-aa27b1d0d76f"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[298]=",ExpressionUUID->"79dc0af2-6f3a-4dcb-bea3-6e2949599d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"f", "[", " ", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "_Symbol", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[303]:=",ExpressionUUID->"055fc0a8-e716-4042-8e88-89c3dc0129f7"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[303]=",ExpressionUUID->"68dba89c-d825-4551-b189-71dbd2dace8a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicates", "Subsection",ExpressionUUID->"625f7213-e654-4dd0-80e6-b7a3327ba953"],

Cell[TextData[{
 "The end of Blank can also be modified to test the pattern against a \
predicate function. The following recognizes patterns for which the ",
 StyleBox["test", "Input"],
 " evaluates to ",
 StyleBox["True", "Input"],
 ":"
}], "Text",
 CellTags->{
  "_?", "PatternTest"},ExpressionUUID->"4bdfe91d-c6f3-4531-93db-1d90cfe45b02"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  RowBox[{
   StyleBox["pattern", "TI"], "?", 
   StyleBox["test", "TI"]}]], "Input",ExpressionUUID->
  "4a65a6ce-2d8f-4dd0-a2c6-f8d4754c035b"],
 " "
}], "Program",
 TextAlignment->Center,
 CellTags->{
  "_?", "PatternTest"},ExpressionUUID->"b1f2bc58-318a-4717-9147-220acdb4e679"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberQ", "[", "3.0", "]"}]], "Input",
 CellLabel->
  "In[304]:=",ExpressionUUID->"5b0755d7-71d8-4d37-8cb2-9fea78098695"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[304]=",ExpressionUUID->"2122a7d9-7bc4-40b0-afe1-8de4eab79e64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberQ", "[", "\"\<3\>\"", "]"}]], "Input",
 CellLabel->
  "In[305]:=",ExpressionUUID->"17d30e82-8b4e-46ca-845b-0b062f55e874"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[305]=",ExpressionUUID->"5afa587c-18b0-4776-9f9e-29dc48d630e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"3.0", ",", 
   RowBox[{"_", "?", "NumberQ"}]}], "]"}]], "Input",
 CellLabel->
  "In[306]:=",ExpressionUUID->"61bcb72a-5da4-4493-8231-17ccce536c75"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[306]=",ExpressionUUID->"f32fb49d-d100-4516-a2cc-e6d9390323a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"\"\<3\>\"", ",", 
   RowBox[{"_", "?", "NumberQ"}]}], "]"}]], "Input",
 CellLabel->
  "In[307]:=",ExpressionUUID->"0b93c773-ae3f-4e7c-ab4e-2cd7ae0b17e2"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[307]=",ExpressionUUID->"0ab58989-bf64-4f7f-aed3-032df0bc4809"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "Negative"}], ",", 
     RowBox[{"_", "?", "EvenQ"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[308]:=",ExpressionUUID->"ece9ee72-1d17-492b-8158-e84537526e1c"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[308]=",ExpressionUUID->"6e3ff58b-4a9a-44e8-9e72-bd47fed5724b"]
}, Open  ]],

Cell[TextData[{
 "Wolfram Language has numerous predicate functions to test expressions, \
their names typically ending in Q. For example: ",
 ButtonBox["IntegerQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/IntegerQ.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/IntegerQ.html"],
 ", ",
 ButtonBox["StringQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/StringQ.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/StringQ.html"],
 ", ",
 ButtonBox["PossibleZeroQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/PossibleZeroQ.html"], 
    None},
  ButtonNote->"https://reference.wolfram.com/language/ref/PossibleZeroQ.html"],
 " and more to be found at ",
 ButtonBox["Testing Expressions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/TestingExpressions.\
html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/guide/TestingExpressions.html"],
 "."
}], "Text",ExpressionUUID->"c6f8efce-e20f-4dd0-9717-d9e4ee3c64a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditions", "Subsection",ExpressionUUID->"3eaf3a1c-922d-4d5f-9a37-11e61fcb27d0"],

Cell["\<\
Patterns can also include a condition that must be tested and satisfied in \
order for an expression to be declared a match.\
\>", "Text",ExpressionUUID->"8c34efa6-3e3e-4289-a43d-6102fad89f68"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"pattern", "/;", "condition", " "}], "TI"]], "Input",
  ExpressionUUID->"aedf8b02-d576-479b-a413-f534a7256f46"],
 " "
}], "Program",
 TextAlignment->Center,
 CellTags->{
  "_?", "PatternTest"},ExpressionUUID->"cd0dc113-b859-4654-b52a-622c234ee8a5"],

Cell["\<\
The condition often needs a named pattern that it can work with:\
\>", "Text",ExpressionUUID->"70b4cac0-caa1-4b53-b37e-cdcb7215504d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"4.18", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"x", ">", "4"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[309]:=",ExpressionUUID->"836dd713-9763-45fc-a4e0-5932555d7418"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[309]=",ExpressionUUID->"f86e0556-554a-4591-825c-095a526d153d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"4.0", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"x", ">", "4"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[310]:=",ExpressionUUID->"fc339627-04ca-4838-892a-05b8ebe56adf"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[310]=",ExpressionUUID->"32535c31-4366-4ef3-8764-18d77f800efd"]
}, Open  ]],

Cell["\<\
Here is an example of finding the square roots of the only the positive \
integers in a list:\
\>", "Text",ExpressionUUID->"4b19b685-e938-47b2-a38d-4280f34a79e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"4", ",", 
    RowBox[{"-", "2"}], ",", "3.14", ",", "9", ",", 
    RowBox[{"-", "25"}], ",", "16"}], "}"}], "/.", 
  RowBox[{
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", " ", 
     RowBox[{"IntegerQ", "[", "x", "]"}]}]}], "\[RuleDelayed]", 
   RowBox[{"Sqrt", "[", "x", "]"}]}]}]], "Input",
 CellLabel->
  "In[311]:=",ExpressionUUID->"2baea939-9071-4da5-8988-60d1fe1f62d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   RowBox[{"-", "2"}], ",", "3.14`", ",", "3", ",", 
   RowBox[{"-", "25"}], ",", "4"}], "}"}]], "Output",
 CellLabel->
  "Out[311]=",ExpressionUUID->"c84a4fdb-d4c1-44cd-8c22-393cf6ac40b2"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "What would be the result of MatchQ[f[3.14], _g]?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "True", "info" -> 
                    "The Head of the expression is f not g.", "index" -> 1, 
                    "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "True", "info" -> 
                    "The Head of the expression is f not g.", "index" -> 1, 
                    "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "True", "info" -> 
                    "The Head of the expression is f not g.", "index" -> 1, 
                    "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "True", "info" -> 
                    "The Head of the expression is f not g.", "index" -> 1, 
                    "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "True", "info" -> 
                    "The Head of the expression is f not g.", "index" -> 1, 
                    "correct" -> False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "True", "info" -> 
                    "The Head of the expression is f not g.", "index" -> 1, 
                    "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "False", "info" -> "Correct", "index" -> 2,
                     "correct" -> True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "False", "info" -> "Correct", "index" -> 2,
                     "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "False", "info" -> "Correct", "index" -> 2,
                     "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "False", "info" -> "Correct", "index" -> 2,
                     "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "False", "info" -> "Correct", "index" -> 2,
                     "correct" -> True|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "False", "info" -> "Correct", "index" -> 2,
                     "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}], 
            Spacer[0], 
            TextCell[
            "How would you rewrite the pattern Graphics[__] from the previous \
slide to check if the picture plt2 was an Image or Graphics?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "MatchQ[plt2, _Graphics]", "info" -> 
                    "Correct", "index" -> 1, "correct" -> True|>["statement"],
                     "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "MatchQ[plt2, _Graphics]", "info" -> 
                    "Correct", "index" -> 1, "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "MatchQ[plt2, _Graphics]", "info" -> 
                    "Correct", "index" -> 1, "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "MatchQ[plt2, _Graphics]", "info" -> 
                    "Correct", "index" -> 1, "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "MatchQ[plt2, _Graphics]", "info" -> 
                    "Correct", "index" -> 1, "correct" -> True|>["info"], 
                    "Text", FontColor -> If[
                    <|
                    "statement" -> "MatchQ[plt2, _Graphics]", "info" -> 
                    "Correct", "index" -> 1, "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "MatchQ[Graphics[plt2], _]", "info" -> 
                    "You want to edit the test pattern, not the expression \
being tested.", "index" -> 2, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "MatchQ[Graphics[plt2], _]", "info" -> 
                    "You want to edit the test pattern, not the expression \
being tested.", "index" -> 2, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "MatchQ[Graphics[plt2], _]", "info" -> 
                    "You want to edit the test pattern, not the expression \
being tested.", "index" -> 2, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "MatchQ[Graphics[plt2], _]", "info" -> 
                    "You want to edit the test pattern, not the expression \
being tested.", "index" -> 2, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "MatchQ[Graphics[plt2], _]", "info" -> 
                    "You want to edit the test pattern, not the expression \
being tested.", "index" -> 2, "correct" -> False|>["info"], "Text", FontColor -> 
                    If[
                    <|
                    "statement" -> "MatchQ[Graphics[plt2], _]", "info" -> 
                    "You want to edit the test pattern, not the expression \
being tested.", "index" -> 2, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1143.5, {229.70702178955077`, 240.55565460205077`}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"82f697d7-12de-4342-b82f-\
eaac2e63af44"]], "Text",
 CellTags->"CYU",ExpressionUUID->"54613259-e0f2-4ba9-87ba-0f61f6af7389"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Expressions That Are Part of a List", "Section",ExpressionUUID->"f6393400-acdc-4d04-b82a-a29ea8e7f3f9"],

Cell[TextData[{
 "When you want to look at a list of expressions and check which ones in \
particular match a pattern, ",
 ButtonBox["Cases",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Cases.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Cases.html"],
 " can be used:"
}], "Text",ExpressionUUID->"68727f71-c41c-4ec9-a9fd-32a56e1c5d4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", 
     RowBox[{"f", "[", "a", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}], ",", "_"}], "]"}]], "Input",
 CellLabel->
  "In[312]:=",ExpressionUUID->"b0ce073b-8395-4249-9550-7e2608f656a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "Out[312]=",ExpressionUUID->"9f87242f-7e1a-449d-9ce8-892cc785b5a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", 
     RowBox[{"f", "[", "a", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}], ",", "_f"}], "]"}]], "Input",\

 CellLabel->
  "In[313]:=",ExpressionUUID->"7c8432a4-cac4-4bec-a82c-7fc25a963059"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "Out[313]=",ExpressionUUID->"a8ebbfce-bffd-4ee3-905d-de57189b000f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", 
     RowBox[{"f", "[", "a", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"e1", ",", "e2"}], "]"}]}], "}"}], ",", 
   RowBox[{"f", "[", "_", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[314]:=",ExpressionUUID->"ce051f7a-5ca4-4faf-b485-451baf9b210c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"f", "[", "a", "]"}], "}"}]], "Output",
 CellLabel->
  "Out[314]=",ExpressionUUID->"2d4c9e1a-9fb1-4abc-ad60-075a4fe6d4dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ls", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"10", ",", "10"}], "]"}]}]], "Input",
 CellLabel->
  "In[315]:=",ExpressionUUID->"33234129-6750-412c-8cf4-084b0dded22b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "10", ",", "8", ",", "1", ",", "2", ",", "3", ",", "10", ",", "4",
    ",", "4", ",", "1"}], "}"}]], "Output",
 CellLabel->
  "Out[315]=",ExpressionUUID->"3932b9cf-b272-4de6-8263-1eb8d7dc8624"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ls", ",", 
   RowBox[{"n_Integer", "/;", 
    RowBox[{"n", ">", "5"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[316]:=",ExpressionUUID->"eaff2d86-768f-47d4-99dd-699a29128f9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "8", ",", "10"}], "}"}]], "Output",
 CellLabel->
  "Out[316]=",ExpressionUUID->"2e0cd754-0af4-47dc-8a71-b8ea08302905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"15", ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[317]:=",ExpressionUUID->"c321a0df-4007-4800-9889-ad455cd1e01b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "10", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[317]=",ExpressionUUID->"3f8a7bbf-ea45-4f01-ab2b-87e459bd24f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"mat", ",", 
     RowBox[{"ls_List", "/;", 
      RowBox[{
       RowBox[{"Total", "[", "ls", "]"}], ">", "20"}]}]}], "]"}], ":>", 
   RowBox[{"Total", "[", "ls", "]"}]}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[320]:=",ExpressionUUID->"afe6d472-efa5-4a0f-b5fa-20788d4bf3a7"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "9", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "9", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "14", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "4", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "10", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "13", ",", "5"}], "}"}]}], "}"}], "\[RuleDelayed]", 
   RowBox[{"Total", "[", "ls", "]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[320]//MatrixForm=",ExpressionUUID->"f69a1f54-1f20-40e8-be93-\
2a918aefeb21"]
}, Open  ]],

Cell["\<\
Cases can not only find the matches, but also perform some computation with \
them and return the result instead of the matches themselves. Here, Cases \
returns matching lists as well as the total of the elements in each matching \
list:\
\>", "Text",ExpressionUUID->"77163736-69b6-4317-bca1-f383b77fd451"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"mat", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"ls_List", "/;", 
       RowBox[{
        RowBox[{"Total", "[", "ls", "]"}], ">", "20"}]}], ")"}], 
     "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"ls", ",", 
       RowBox[{"Total", "[", "ls", "]"}]}], "}"}]}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[322]:=",ExpressionUUID->"67efac6d-e4ef-468c-ac11-84bf235fcd8f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"8", ",", "9", ",", "8"}], "}"}], "25"},
     {
      RowBox[{"{", 
       RowBox[{"9", ",", "9", ",", "3"}], "}"}], "21"},
     {
      RowBox[{"{", 
       RowBox[{"10", ",", "9", ",", "4"}], "}"}], "23"},
     {
      RowBox[{"{", 
       RowBox[{"10", ",", "10", ",", "4"}], "}"}], "24"},
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "14", ",", "12"}], "}"}], "30"},
     {
      RowBox[{"{", 
       RowBox[{"9", ",", "4", ",", "12"}], "}"}], "25"},
     {
      RowBox[{"{", 
       RowBox[{"14", ",", "10", ",", "4"}], "}"}], "28"},
     {
      RowBox[{"{", 
       RowBox[{"10", ",", "13", ",", "5"}], "}"}], "28"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[322]//MatrixForm=",ExpressionUUID->"b6dded09-bfd0-42e1-b6c1-\
e5393ef72409"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definitions with Patterns", "Section",ExpressionUUID->"5f16e31a-c1b1-47bc-860a-c47bc8f54c05"],

Cell["\<\
Earlier examples illustrated how a function could be defined using a pattern \
and SetDelayed. The use of patterns provides a great deal of flexibility in \
controlling the evaluation of a function according to the input provided to \
it. \
\>", "Text",ExpressionUUID->"38442438-e6ca-4d00-9e17-f891344b68f5"],

Cell["\<\
For all but the simplest of function definitions, this is one of the best \
approaches for defining functions in Wolfram Language.\
\>", "Text",ExpressionUUID->"7de6a501-248e-433a-8464-1eaccc597f1b"],

Cell["\<\
Here is a function that evaluates differently for odd and even integer inputs:\
\>", "Text",ExpressionUUID->"9929a14e-0b35-4e9d-ba97-6b621e992aa1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun", "[", 
   RowBox[{"n_", "?", "EvenQ"}], "]"}], ":=", 
  RowBox[{"n", "/", "2"}]}]], "Input",
 CellLabel->
  "In[323]:=",ExpressionUUID->"67f4f048-370b-462c-8047-a288a11b572a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun", "[", 
   RowBox[{"n_", "?", "OddQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"3", " ", "n"}], "+", "1"}]}]], "Input",
 CellLabel->
  "In[324]:=",ExpressionUUID->"c53bf6b4-2bfb-49ed-9c7c-2d3643346015"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "[", "1", "]"}]], "Input",
 CellLabel->
  "In[325]:=",ExpressionUUID->"3f56bf5f-52f8-4435-b931-6204980c37e4"],

Cell[BoxData["4"], "Output",
 CellLabel->
  "Out[325]=",ExpressionUUID->"e2785560-3d11-444c-8b59-c0a25983ac55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "[", "2", "]"}]], "Input",
 CellLabel->
  "In[326]:=",ExpressionUUID->"fb1f8d2b-b006-4c29-9bb0-6db351c10fc7"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[326]=",ExpressionUUID->"0b1934a6-e585-4c89-b77f-6da40ad4a3f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "fun"}]], "Input",
 CellLabel->
  "In[327]:=",ExpressionUUID->"e652e441-51fd-4f1e-8cd4-8ea59e922724"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fun\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"fun", "[", 
                    RowBox[{"n_", "?", "EvenQ"}], "]"}], ":=", 
                    FractionBox["n", "2"]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fun", "[", 
                    RowBox[{"n_", "?", "OddQ"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"3", " ", "n"}], "+", "1"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`fun\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fun\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`fun", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`fun, {$CellContext`fun[
         PatternTest[
          Pattern[$CellContext`n, 
           Blank[]], EvenQ]] :> $CellContext`n/2, $CellContext`fun[
         PatternTest[
          Pattern[$CellContext`n, 
           Blank[]], OddQ]] :> 3 $CellContext`n + 1}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`fun"|>, 
   False]]], "Output",
 CellLabel->
  "Out[327]=",ExpressionUUID->"bfd5fe7c-e0cf-448a-a15c-ec2c1156eb91"]
}, Open  ]],

Cell[BoxData["Pi"], "Input",
 CellLabel->
  "In[328]:=",ExpressionUUID->"b3027b96-ddf4-47d3-a845-a8286f2d74d9"],

Cell[BoxData[
 RowBox[{"\[Pi]\[Pi]", ">", "<", "\[IndentingNewLine]", 
  RowBox[{
  "AQWIE\:2206\[Section]\[CapitalOmega]\:02dc\[CapitalOmega]\[Section]v", 
   RowBox[{
   "\[Sqrt]", 
    "\[CCedilla]\[CCedilla]\[Section]\[CapitalOmega]\:02dc\[SZ]\:2206\:02d9\
\[Dagger]\[OE]"}], 
   RowBox[{"\[Sum]", 
    RowBox[{"\[Yen]\[OE]", 
     RowBox[{"\[Sum]", 
      RowBox[{
      "\.b4\[RegisteredTrademark]\[Dagger]\[Yen]\[DoubleDot]\:02c6\[OSlash]\
\[Pi]", 
       RowBox[{"\[OpenCurlyDoubleQuote]", 
        RowBox[{"\[OpenCurlyQuote]", 
         RowBox[{"\[OpenCurlyQuote]", 
          RowBox[{"\[OpenCurlyDoubleQuote]", 
           RowBox[{"\[OpenCurlyDoubleQuote]", 
            StyleBox[
             RowBox[{
             "\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]\[Pi]", 
              StyleBox["asd",
               FontSlant->"Italic"], 
              "PiPiPi"}]]}]}]}]}]}]}]}]}]}]}]}]], "Input",
 CellLabel->
  "In[329]:=",ExpressionUUID->"dc5da472-4f29-4d1d-9414-ea92210263c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]\[OSlash]\:02c6\[OSlash]\[OSlash]\[OSlash]\[OSlash]", 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->
  "In[329]:=",ExpressionUUID->"e08c233a-72eb-4c33-96f2-a32ea53230f2"],

Cell[BoxData["\[Pi]\[OSlash]\:02c6\[OSlash]\[OSlash]\[OSlash]\[OSlash]"], \
"Output",
 CellLabel->
  "Out[329]=",ExpressionUUID->"1839b458-33c7-452f-9cca-9f05ab87a848"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"eb581de9-f4e3-4156-a70c-8fffcd5643d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controlling Evaluation Using Patterns", "Section",ExpressionUUID->"358cabc5-369c-4ed0-8435-71940d3a3f84"],

Cell["\<\
It is important to realize that definitions may not cover all possible inputs \
and therefore fail to perform the expected evaluation:\
\>", "Text",ExpressionUUID->"0d5f96a1-2a17-4983-ae23-f60b07dbe7b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "[", "\"\<foo\>\"", "]"}]], "Input",
 CellLabel->
  "In[330]:=",ExpressionUUID->"4447c2a1-7d40-42ee-ac6b-973c6e84a977"],

Cell[BoxData[
 RowBox[{"fun", "[", "\<\"foo\"\>", "]"}]], "Output",
 CellLabel->
  "Out[330]=",ExpressionUUID->"513d4728-39c4-4021-91d6-71d89fa16b7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "[", "x", "]"}]], "Input",
 CellLabel->
  "In[331]:=",ExpressionUUID->"2258699e-7125-4998-b18a-825c5e853142"],

Cell[BoxData[
 RowBox[{"fun", "[", "x", "]"}]], "Output",
 CellLabel->
  "Out[331]=",ExpressionUUID->"7513d405-541d-4e4f-a7ac-3bd39a9f8466"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "[", "]"}]], "Input",
 CellLabel->
  "In[332]:=",ExpressionUUID->"8d84393a-2101-4775-a8b5-5a5d84d712b5"],

Cell[BoxData[
 RowBox[{"fun", "[", "]"}]], "Output",
 CellLabel->
  "Out[332]=",ExpressionUUID->"6092b767-e0a2-4637-b6c4-6fb974ec3603"]
}, Open  ]],

Cell["\<\
So it is good to have a default definition that can catch unexpected input:\
\>", "Text",ExpressionUUID->"946ab2d1-5f82-49a2-9953-bddd70fe2ef6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fun", "[", "___", "]"}], ":=", 
  "\"\<Not a valid input\>\""}], "\[IndentingNewLine]", 
 RowBox[{"fun", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQegFEXSgHlI9oBff/0Nv3imH88znRHDnXpG9FAQTz319OQFkuQoGUFB
CaJkRaIJkKiABJWcRVByzjm/tG/fg6m/qyZ19/Ts7jMgsDU67HR3dX/VPTPV
NTW9b69MbVi9ZtEiRYo0LSX+qV6j5d+bNKnR6pn/EolnGzStU6tBRvrjDZpl
1MpoclfqOSJzh9hfTSlSpJj4zMvLA30/fPgwdOz4BqSlpUFqahrUEJ8N69eH
gYMGwfIVKyA3NxcikSjJHj16BGrWqg0NGzWAnJxcu41IHkyYOJHqTps6FSIi
b9euXdRezVo14fDRwxB1WNu2baN83Pft2+foEBXtHoP0tHSoX78B1T9+7BjU
SE8nuWnTpnr8vLwIbN+xE+q+Vgcy0jMgKyuT+O+99x7xZ8+aRfXdvu3duxfq
N6gnZNPh+PHjlDdq1Chqd8niJR4/EvHrYP18kY5EBTPq5El8LI9GI/4YYt2o
8+mUK2MsZKOGcfd35jOf+UnDx7ZlOVEeiURgzerVMHTYMGjRsqVjI1Np7927
N2RlZwmmLT9w4EAq/+mnnzydOrRrTzbu0KFDlLdb2N+MGmnw5ltvOXrZcjk5
2ZCWmgrNWzQP8Js1bgIZGRm2/RW2EtnpgnM8M5P0dfm49+rVi3RYv349tduo
YSOqm5OTQ+VRZwxxXPr3H0Cya9aspjK0vzVE24td++vwaYyiedL4RZw9L8BX
9widQ1dW58v9jzX+zGc+889yfsQvl+15nssWemC9HTt3wMcffwK169QW9jIN
xo0bZ/NF2YoflpOPPHz4cEpv37GdZHr3ft9pMwo7d+0k+9mzZ09PJ+TkZOeQ
LWzbuk2A37RZUypDPtpf9GdbtGzh6yz1ZaTjw86cOQv27d9H/Lbt23r8iDTe
qDvKTp0+neqr/q+5/6SvO+cZ+F4daYz986Py5f4nOv7MZz7zz0K++xn1y6N5
vm+dp5VN+moS2aquXbvaLLHn5OZA48aNyedEf3PixIlkjxctWujpgfGHGmnp
0LNHD+qTqwP6vyjbuk3rAL9p0yaQnp5B/OPHjxG3fr36vm4Rv/9DhgyFtBrp
sGTJYsjMzBL10qFxk8aBccBx/uSTT6it+fPnU75rfxcvXhy3/0qZxMfP/EiU
5kV/bCNGvtz/wo4/85nP/LOJL/naYp8xYzq0adsGZnw7g+Rtex5xfPQ8WLVq
FaSm14AuXbracQ+HZ9uwVIpBtG/fDurVqyd822yvjV07d5KN8/1fzLfjD6mp
qcL/be33C3lRtL/NoGZqOqWPHztOMQK01ehLu310+R06diT+nj17KN2+fXuK
VRw4cMAZJ38s3xa6p4m5YMeOHcQbOXIkyS52/F+Xb+q/fa4iAX6edmynpTYi
8rn0+6+PP/OZz/xk4ksMkb9p8xZ6dm/auAls3bpV4kQpBoDvtdKFnZs48UtP
RyzbLGTRNnbp8hb5ocOHDoNI1Ge67996CPtr98MuQ38Zea3btHJYrr5of5uS
H+vHf+33dN3efhsi+K7P4c+YPoPYjYQPTu2Keejj4SOghpgnMC4szzezZs2y
3yc2bOjkR2HUSHvuQPsr8+X50Z/3nHGORJX+e+cG94jdhtx/fb6NeOdKHX/m
M5/5ycP33vNFfb+6X79+ZI/w/VWvXu/CZ599BoM+HARNmzWjNQjNxOfu3bul
+nZbnTp09Gzk2rVrlZiIHf8V/m+PnrZ81O5HthP/bd3Gj/+6n7b9TaP0sWO2
/a1bvz7UrVMHmjdvDh8N+oje56EM6rryp5VeH48fPSZ84g5Up1XL12HQ4I8o
ZoL2vFbtWrBa6Beluc/23VNFvhv/9fWI+Gk3zhONKu8u5f7L5yxPOR/y+c5T
+m8af+Yzn/lJwnftsMwQfuGkSZPIR0S7VMNZ+1Bb2C30fw86axrypDZRp6lT
p5Lc66+/7vnbUaft3Y7/+17Pd6W1G3mQnevYX4w/aPq3aNYc0mvWpPqZmcfJ
znbo0IFiHMig9RBCv86dO8PC+Qv8+s4nxh4GffghxaaRUbt2bejRvTssX75C
GqMIjBo9ivq4dMlShe+eFzeWE3zfqfZf58v9d9O0jkXqv2n8mc985icH31RX
fi93YN9+WLlyJa3TxViB31ZUk4/C6DFfkJ2b+OVErX92rCOi6x+Jz7fLIoEy
bHP//v1w5PARj+8xJY7Lx3W/WTnZvypf738s/m/Rf+Yzn/lnNl+2zUqcIiL5
3q4e0rHsT+N3MJYuXQq1a9WCunXrkk20YyhRrw11vXPEY/wafGU8lZ35zGc+
809fvht3duu7cWSMQ6O/7adtZtSJT1Oa1i/kejFfjAXMnDnT+y6ILa/OGbaf
H/XjLb+QHxgD7Cvzmc985p8BfGVNcTRP8cOjrh5OfVkXL4acmwdjxo2FKVOm
wIYNGzw5asubTyL+Z0RN/1K+veZO7T/zmc985p8J/Lw8SS5Qptfz9fPsuqt3
XsTXK0+VVXWLSPEW5jOf+cxPYn7E9Zejni4RKZbs18uT9MoD9fvNrn72XBF1
2/HWQET8tXB59t+2IIYz3zCf+cxnfjLys/KB9swC+zMb9wI7nS3tmVKeLOvW
dfOM7eT7eaZ2mM985jM/Wfle+oSh/ISl5GVpbSh7vpqfKdXNlHSRZZjPfOYz
P1n5elnAZhcE7bmeL+dlSjJunr57fdD0Yz7zmc/8ZOJ7PCUflHz9WPajZYYp
LTOz9D7kA/OZz3zmJy1ftvXyPJAptSGz9HnC9c91W5+p+e36p9w285nPfOYn
Kz9L4mXlq+lsg7ypzYDu+aqs7rPL/WU+85nP/GTkx2IE/GVNTo59ZOplhnQs
GeYzn/nMT0a+7ntna2xPVrbtJ8x6BHha25l6m8xnPvOZn6R8uV4sWdPu6iH3
RdY9y6SXQUfmM5/5zE9Wvpd3IsjONtTx5gGJoR+bPuU2TXMO85nPfOYnE19e
XyzHOOR0ptx2frAtpW6+Kq/3QW+f+cxnPvOTlq/VM/rnQkcTX25LztP74X3m
B2WYz3zmMz9Z+V572jwgx5e9ecDRI1tqQ9ZZ52Ua0tmaHsxnPvOZn6x8L0/X
y6BnWFzE1cPXU0175U4f5TmG+cxnPvOTmW/b++D3Nbxd+p5yVr5WZuqH1Ea2
pq9pHmA+85nP/GTkm+R0HcJkMw35nk8uyWTlB9tz/XvmM5/5zE9Wvlyuxz1c
rl5fZujzgd6mbvPl+ImuH/OZz3zmJxM/S7PDOsurm++3Re04PrkeA1H6dsIv
D5snmM985jM/Wfm67c6WypV2nblBri+34cWW5b5JOiu7FE9hPvOZz/xk5usy
7no38r0N36+T5WRd9b7I+dlSH3QfnPnMZz7zk5EvH7t6+L65r4ec76VPBBlZ
DkPWXdZJ15P5zGc+85OVb0qb5ExtyD64N1/kq7L63GCaF5jPfOYzPxn5mWH6
aGuFlTlAWyuXXWDWXdZTjl1nS3own/nMZz7zg7bc08XEcfSQ82V7ruup73Kf
TzlflB3KyYOjkYLk7D/zmc/804LvfUrrkfX2FL9ayG3Yugu+nbsQlq1a69kw
Vw7r7juWDZ3efBvGT56qzB3Zkoy7zk7nT5gyleruPXI8lC+Pg+LvG+axCZOn
UXu7jx73+Fv3HoAy5cpC2bLnws5Dx4z9X752A3R79z2o37gJLFi6/GfzC9v/
RMaf+cxn/tnB1zlynivnHn83fxHcfmclKFKkiLeXKFECqlZ/Brbs2u9xNu3c
Q2UZteuqemh9MfHr1GtAdddt2xngm+LZ8rHXz3yf57a3XswZMv/T0WMo//X2
7QP9/2nDZihTtiykiPLy550PIyd8+bP5he1/rPFnPvOZf3bx3V33wXUbv/jH
VVCmTBlIKVoU/nr//fBml+7Q9PXWcOONN5Mdu/DCi4XMSqqzcddeyksX9jez
wOyPu3k6v/ZrDT37K/MzC7S5RhozvUzea9erL9pLEfZ3Z4D/0iuv0vyxZdc+
pf/v9/+AdOj09juQGbV+Eb+w/Q8bf+Yzn/lnH1+XlfVx903Cnl566aVkkz4d
NTZg01t36EBlT1WrbsuH+L9yHVl3eUd/NYX81Z2BMQr0Xc935aW9jmN/N0j2
3K1zJDsKW3bvV2MoYm/WshXp//1Pq38xv7D9N40/85nP/LOTr+Rr+rj+dt8P
B5M9avr664qca78P50bh3r/dB6VKl4Y1m7cLe73H8X/rKPqt374LmrVuC7fd
Vkk835eDas/8EwYMHqLwazvxggU//ES+64UXXQwX/e+lUOu1+rB05WqFv/vg
MajXqAlcd/0NULJkSbij0l3QvvObcDx6wtPPjz/s9PuVbxgLsW/ZuQ9uuuVW
KFu+PNnsitdeS+nv5i2C2YuWws233gKfjPxC6f+eI5lws5Bp0/ENyvtp/Sb4
i5DrPeBDeLdPP7j99juhZKlScIv4HPPV5Jj8sPEPXB+x5mPpOCtfvT7i9Z/5
zGf+qeXLfrfbdrZWt5bwY12bKPPo+x8GHTbu3AtFUoT/W8ePP+w8eBSuv/56
auc68Ym2t8y555Kde6PLOx6vrhN/uPqaimRT/yF86htuuJHy/ueSS2Dz7n3U
JtpYbCdF1L/51tug+rPPQ7ly5Wy/u85rnq9fW4sn63OO3P8dBw7DC/9+RbCv
oTpP/KMKpRf/sBKmzJhJeb369lf6v/PAEcp/+dVUylskZDF9+RVXQAmh/xNP
VSU7jnkpKSkwf8kPofyw8dfn2Xjjb3rWka8d5jOf+acHX69nYt50y81QtGhR
OJydF/DHvbYlPfT4A8rUSK9JeW906erl7Tl8HK6peC3Z6tmLljj+an2S++8L
L4DNu/Z6urzZpRvlP//Sy5Set3gZ+ZSvt2nv8Q9m5UF54buWLlUajuWdUPxf
731egXl85f43ceIPP67d4JW79ve9PgOU/u9A+5uC9rcGpReJOQrlcO6Yv2S5
x+oo+o359Zo0icvXx990XcQaf11WPv+J9J/5zGf+qeFTzEJep2ZYs4bvqC4T
/pzOefCRh+GBhx+Bvz/4EDz44CPw4EOPwIzZ84T9tf1fjD+4vD9edSVcetll
yvss3Md9NUX4hUWg5/t9KV27QQPyiT8YOkLR4Xi+BZdUqAAXX3xJQD851oJM
jB9jHMS1v5heu22HN25Z2ljp/W/SsjXZyuVrN3r5k75x7K/j/7r7Dsf/fcX1
f5evJF5V4d/L445r9VDuyWpPx+Xr/dP7Gqv/3rVxQjvv0lpF5jOf+acHH4/d
dJbUTqbUVkXho6INzpTKUPbaa/8k/Nfr4BrxfF3+vPPIbn42djxslPxflN21
/4j3fi5Tahs/123ZSWX//s+r1CbGH9B+zft+udofsWPMAmW37jtIsus274BO
XbrDP6pVg0r33AsV/3S9ty5uzcZtVK822d8Ue/2ZPO4x+u++f/txzUaPT/5v
CtrfAYqs7/+mUt7C5bb/26ptB38cHUZRocejjz8el6+Pv5vW62XnB8+lsZ18
Py+R/jOf+cw/dXzfRhvKhd1+UthNtCmrNmxR5w5pb9zidbKb02fNo/USdhzW
tr/uerR//usFTwe33uZd+6nsmeeeJ74br0V/0eW7vH+98G8q27BtF8xftsKL
915xxZXw3IsvQq26r9lxVrGv3ryN5pzaTjzDW8+m8U39b9KyJc0l6P+6/Enf
fEvt9urTX+n/jv2H7PmjRiq17fq/9D5Om0uLpAj7W/mJuHx9/OW8sPHPNvTN
NJcn0n/mM5/5p4avlwVstjju2v1dsjH1Gzezdcr3dXHbu+mmW8gP3LbvkGd/
0534L+7/feGF8H/X/Untg9Bv6szZJNv5nW7Ulhuv/Wz02ACn4p//DGWEzcV0
A6ELyn0wdLii03Mv2jZ69aZtTvyhkfr9C41v6n/T5rb/u8Lxf1F+mqNnY2Gb
Zb1WrF5Ptvrl/9jxh4XL7fdvrTt08uTcPaVoCjz2+BNx+fr46/Opafyz8tXz
mSXV13fmM5/5pwff4yn5oOTvP55N9rNYsWLw+RfjFT8a6zR7vQ3Z3ocfq0xp
d/1ZhmR/q1a3Ywcfjxzt1TsWOUExY6w7ado3lEf+r0jfePNfYH9Wrlf/U2GP
Mf9RYb+Q/89//Yvam7lgsSeDNrdMmXNt+4v+b4H9Po/iv8L+ZuljmA/G/rvv
335Y68cfNmzfTfyb/nKL0v82HTt7/i+m3fUP7no0ecwxzo32Nx4/8Bso2rE+
/rKMnpb5ifaf+cxn/qnhy7ZengcypTZwHzl+orC/xckGVX36GeET94QWbdrB
nXffTf5fqVKlYdWmLVSH1j/Q+7fXvHbwO70YI8Y48ivCVrV94w244657nNhv
DciMgmMv7fdlZcuWgxtuvBlatW8vbFs61StRoiR9Dw/1G/jRUKp7TcWK0OHN
rtCydTuaI1DGtr9bqT2KP6T4/q8+pqb+N2v+euD9G+4Vr72O2sL1vp3ffgde
fPkV0ov8X+f922LP/nb023c+cf0Zxn/j8U3j754zfZ52n4/0udb0e66J9p/5
zGf+qeNnSbysfDUt77i2Ctd8oR1x33PhMf79h7Vbtnu6ufGHmnXrKe3OXbIM
HnviSShZohSV45qKeo0aw5GcPE/OjRd8/d1MuOfev3mMu++5l/6Wjjce0ZPQ
XNj/UqXstnB9HMYGXhPt0fu3TbY+derb7/M2bN/l6REWN3fLm7VoTXZ25bpN
Sv9XbdoKf7ntdq//uB5j5NgJdPyf1DRqY+mKVZRuJ/xiefyxXdQR+x+PHzb+
8rWgn9PAtZMPAX6i/Wc+85l/avixGAF/2ZHZezQT5ixeCouW/QgHMnMDbent
6vqivd20a1+AbeLj+60dh48G5xenj7jOF33bQ1l5CfNNMoXp/+5Dx2iOyYr6
c19h+v9L+XL/mc985p/ZfN33ztbYnqxs20+Y9QjwtLYz9TaZz3zmMz9J+XK9
WLKm3dVD7ouse5ZJL4OOzGc+85mfrHwv70SQnW2o480DEkM/Nn3KbZrmHOYz
n/nMTya+vL5YjnHI6Uy57fxgW0rdfFVe74PePvOZz3zmJy1fq2f0z09YRr7c
lpyn98P7zA/KMJ/5zGd+svK99vS/lybFl715wNEjW2pD1lnnZRrS2ZoezGc+
85mfrHwvT9fLoGdYXMTVw9dTTXvlJ9TfdM5kPvOZz/wk59v2Pvh9DW+Xvqec
la+VmfohtZGt6WuaB5jPfOYzPxn5JjldhzDZTEO+55NLMln5wfZc/575zGc+
85OVL5frcQ+Xq9eXGfp8oLep23w5fqLrx3zmM5/5ycTP0uywzvLq5vttUTvu
33PPV/VQ+nbCLw+bJ5jPfOYzP1n5uu3OlsqVdp25Qa4vt+HFluW+SToruxRP
YT7zmc/8ZObrMu56N/K9Dd+vk+VkXfW+yPnZUh90H5z5zGc+85ORLx+7evi+
ua+HnO+lTwQZWQ5D1l3WSdeT+cxnPvOTlW9Km+RMbcg+uDdf5Kuy+txgmheY
z3zmMz8Z+Zlh+mhrhZU5QFsrl11g1l3WU45dZ0t6MJ/5zGc+84O23NPFxHH0
kPNle67rqe9yn5nPfOYzPxn5S7//Hr7Hfdky53Op/Un7UmcXx0vtvCVCbplX
/r1TX5XBnWSWOcdLsd5Svx4ylqHMUuYzn/nMT1o+gAXg/msfBraQ7IQ3S08E
MpjPfOYzPxn5CUAsy5MprC6WdBSzLvOZz3zmJxk/tD0rzFDHqecWxqyeQH+Y
z3zmM/8s5ytCBnnLlLKMhQG5UDErJMF85jOf+UnEt/SDmIbd1HpYeawcK3jE
fOYzn/lJxg+vbanHBv2Mc0OcDqj9Nckyn/nMZ36S8EP1CKlXCKZl+eWKhJXI
ODCf+cxn/lnO12tbxtyEdPNeE+pV4zTFfOYzn/nJyg+KWuF5gcYT1c6famK1
wHzmM5/5ycm3DIcmXVRVrKBYeLsxN+Yzn/nMT1a+1n4CkoXrWXAuYD7zmc/8
ZOeHt2MFSSFzQyKt+WXh8wrzmc985icH3zIXJ2DZ9R5YoYWWlw6GT5jPfOYz
P1n58VqL8b3pkAI9W7X0gdmE+cxnPvOTlu/Hka1gJVO9gG23AnX8MrOOihTz
mc985icp36xUrAzLoIdWppTbBxs2boBvpn8Da9esofTs2bNg7fq1CfNnzUL5
daH8rKwsmDJ5Mhw9etTI9w8TOSmxMn5e/5nPfOYz31zRUiRzcnIgNT0d0nFP
S4OMjAx4o1MnGDlyJGzcsMHYnhVo2U8tWfY9pIl2mrdoATO/mwnRvHxIE232
6NHTyNfVj0ajkFYzA3r26EEZJ06ehMWLF8GBffs9yUWLF0MNwUC7rvOtQE7s
/ut8k6x/GL//zGc+85kfbnnVQrS/aamp0Lt3b5gsfMpx48ZBJ2F/01LTIF3Y
wRU/rghVyZT+ZPjH0LBhAzgp7KZbuG7tOti3f294Py1V/3Xr1sH+vfsonZ2b
Q/Z89qxZnkBBwQn4fulSstVmfbRRUD/i8o0yoXWZz3zmMz8+X2fhlpOTS/Zt
1uzZiij6vjVr1oLmzVsIe1egNROcAdytT9++8G73nlquPI+YZ46weUO2v4ZR
Cmz0XexAsco3Rdplfvyhj8E3Fof338SP2Tbzmc/8M5evZXv2De2vJvbdd9+K
snTyR91tgzju07sP1K5TBzq/0QmmTZtG+ejvtm3dGurWrQt1RFlrcYwxYLR1
PXu+S/Fa3CZP/Rp69OgBc+bMgVatWkGt2rUofeDgAY/fo2dP8sWR+3qLlpAq
/HP0qdu0ag2HDx2CvXv2QivR/o5t2zy9UI833+wMtWvXhnfe6Qbz58+n9pC/
c8dO0mfRokXQ9e2uYl6pSewfli3z6p84cQImjBsPrVq2hAyh01ud34TVq1eH
jl+s8yQLxfxr/PHm0hgFzGc+889QvuXXd+MPs2fPCYhlZmWSbZ7u2Ngd27ZD
HWFfe/XqRbbsi7FjKQ779ddfU/nyH5ZD586doEOH9rBs+XLYs3sP5bd8/XUY
NWokHX8x+guKNXd84w1YsGABjB8/Hl4TbX7yyacet1VLW/7YsWOweOFCioWM
+HgEtZ8XjcI2YXdRr42bNpL8hAkTKD161GhYsmQxDB76Eem1YN5CKt+8ZYso
T4X69erBjOkz6P1eu47toVGjRmAJu4tz4pQpX0OtWrVg1sxZsGrlKujbry/F
rY8ePaJOn6bRVyZPC7xRt8AkrYy/nY5zNpnPfOaf+XwDJitH8n+DIGjWvDl8
MOhDOh48eDC0bduWfEV3+/zzz8mOuVs/jD+820thoD0dOWoUtTnqi9FkC921
C4gZNmyY8G8bwknLbpfs9chRdJzj6DfLe9cm5oHt2ylv08ZNpEvt2nWE/EiF
ifHsNm3a0PGWzZtJ/tsZ33rlq1etprw1jm/fv39/aNm6JeTn51O6IL8Atgi7
nZObGxy0wm6W9mkoCqQSmmCZz3zmnzF8Q0GuYn81FU6epFjCSPRdRX66sJso
+9FHH8GgQYPgQ/GJeehrHj58mKr2Ffa357vvKujXyf+17eno0aOhSZMmimJz
5s2ldiNo6yxV3rW/s2f588N2YX8xJrFR2N+dO7YTf9WqVcowz5w5U+iWDjmR
XGF/t9j2Wthhd4tQu6l2nEJsP/zwA/nljRs1hqFDh8LixYshmpenjaHp/FiB
LHm4Y5/GuBcE85nP/LOCbylutnuI9g3Xnc2ZPSdQf+fOnWTblixZQnlow9Bm
YWx28uRJ9PnZZ5/R8//xY8eoDtrfXr3U929oT3E9G/K/EPa3RYuWio4LhQ3M
qJEOubkRSreU7K8bn541a7Ynv538X9v+bt26lezs2rXy+mKL4stYD9cKb95s
xx+2SfHiXGFbsXzegvle3r59+6lf3Xt0pzV5zZo1g8OSnx57i3fWzeNvasHU
EvOZz/wzma+VOfbcXv8r/Ms5s5Ri9A/f7NRZ+L+14ciRw5Q3cMAAyjspdQTr
7967R/jKdl7fvv3gXeH/ytNDS8X/HSXsbwtlPpm/cD7Zx9yI7f9S/NeJJ+Tk
ZlMZvstzN9v+psOmTRtpbUbNWjXhywkTlV6if47tYHubhd+LfbTf19nMiLD1
sv976NBByMrJ9vq/ceNG57lgFvycTe6/ZSrR51MlXy9jPvOZf3bw1c19vh8+
fAR8v2wZve/6XNi+Vq1bQS1h11avXuPJ/rRyFWRkpMGQIUNgw4b18OOPP0Lb
9u0oznry5Ani9KX4rxt/sMm2/+vHH3BNg6wn+r+pqWnC/7Xtb0vBHunYazT1
aK87v9kZVgldCgqikv9rv38bMWIE1MzIgOnfzBB6baB3etinr6fZ7wU3b7Hj
v7L/G4lEyIbPn7+A0t26dYdGjRvDqpUrYd/+/TBh4gSHsVnRVRlNZXKMtaot
fAtIaOcrOGczn/nMP1P5uhTa34waaeQfYqwhQzx3v/HGG/D555/Bxk2bAvIL
hX1u164d2bMawj717NETDhw44JX369cPern216naqpXv/+L7txYtffuLHVy0
YCHxI3kRT360a3/Ff/PmzYWG9RuQPdwvbKP3/k3ohxu+g/v000/pPSDGUlo2
bw5fTvrK429x7C/6v25/0P6mptfw/N/9og/vdHuH+o+cxqItXBMdc/2KegJi
ZFtSkS4b+xphPvOZfxbwDc2odt4y5ofVyc7OgWh+8PtnprpWSEFh+Li+uCA/
3zhf+W0AZGZm/iJ+fkG+aCPLoEGIbqeo/8xnPvPPYH7MHCtGWZhClvqvERzW
E+Yzn/nMTy6+ZekcS01KbQY1iqOjVzF89mA+85nP/GTl64wAKIFNqRKnfqCY
+cxnPvOTkB8U0+25pWTr8lasQknICrRrfzKf+cxnfrLylRZC6oc1m+hm6YlA
BvOZz3zmJyM/AYj0+xqF1cWSjmLWZT7zmc/8JOOHtmeFGeo49dzCmNUT6A/z
mc985p/lfEXIIG+ZUpaxMCAXKmaFJJjPfOYzP4n4ln4Q07CbWg8rj5VjBY+Y
z3zmMz/J+OG1LfXYoJ9xbojTAbW/JlnmM5/5zE8Sfqge5np79uym34mYM2eu
/RsQMZj+umYt9mwlMg4hehtz4/OPZR53fvvz9+H/3v1n/unFP3Y80/57gWdY
/7HNY87flD3Txt/W/fhpcf4tNWlIqG3i37Jp1LgRFClSxNtTxP7kk1Wlc6N+
xlG+UPxE6ofxJ46fCOeccw5cV/Fa7zdDTyW/sP0/WXBCjHcBjTnudvoEFJw8
ofzGyG/FT6hSkvP983KSzkth+Ph3sYuJ6/Haa+3r8UzpP84Xd955JxQtWpT+
rtWp5serH4uPvlel24O6nyp+4dqyAnlDhw4he3ttxYrw/vvvw6LFi+m32Ny/
XxZfO3+qiaVOGN/LE53D3ygaM24cjB0/FsaJT/c3i8Ja7Ny5sz1npKTA7l27
fzG/cFvh+o/jas9vKfae4h7b813JEiV+U/6p7j/+fXw8h7hPnjL5dx//RPj4
t/bovKT4vkj588rDA/f/DT7++OO4/E7O9VhUXI+7xPVYWH7htl+v/9lZWVCi
eHG6Hus1bHDK+faHX7ZgwXzv2sG/FR6rRfy9heLi3sFxr9+g/q/CT2zz5Vfj
tT5mnLBdY+k3KmLJ6vPA45UfJ91nz5vri1iSREy1EtU5nC+nli5dCtdcczV0
7PgG/U3MXbt3x0QcPnwI3nvvPZg0edKvwveOf4P+b9myhf4uMv6NePztO7S5
5cuXh9Yi/XqrVtCuffvflB88/G37j79vheewQ4cOUL7suaecHyoXg79v3z5I
Ebb34osvod/obt2mLTz68KNQqnQpuke6desWk3/40BF4733T9fj7X3/x+DO+
/QZ69uwJ+/fu/d2vvypVnqLfLO/4Rif4/LPP47b7jdD9XaH7vj37fxV+Yfs/
e85s6Cyu9Y7tO8IfypWNp4FyfNVVV9P1dcJ7fjfNFPE0CM6FifLlbemSpVC9
erXfjW9u8dfnHzp8mO7n++9/4Hfhn8r+4/N8+bLlfjEf//bzkSNH4kr/kv7v
37uPzsujjz6qyHz33XeUf8UVV/ymfHOLsbezkf/kk0/CDz8s/9348WXM0nit
/6FcObO5lzb8TYqMjHR48aWXoYTw3YsXKw7PPvcsPPvP5+C5Z5+Dxo393zfG
39589tlnYdu27YHW0I+rUSNVIbVu3Qrat+9AcZkhQ4ZC1aefJn/igQcegC8n
TFA013uK9veZ6s+E9h6fS0hPoSPq5B7Xr19fquPXRd2GjxgBnTu/CVdffbXo
3z/pd0PRZ/7Tn66FmrVqw86dO5TBOnjgIDRt2gRuuulGuOyyCvDE40/YLGL+
EwYN/siom4kfTNnbYcf+/o3sb/BkTZs2FZ4TfVuwYCFUeeIfFE/89NPPYP36
dfBPocONN95Mv0Ot89etW0vjf+edleDCCy+EW265FeqJsTl48KBR368mTYbK
lR+Diy+6GG6/83bv/GM/kX/kiB//OXnSolhVlaeqwCWXXAqVKlWCps2awqFD
h2P2H2Oo5cqVN/IDV3qIb9KnTx96Ni5RojisWr3K0FY4P/w+CvLR/qYIzqOP
PqxI4m9klyxZCsoKP15+47JgwQL/WnTGDD/r1/ef4WV+29atxb3R3rk3Bot7
o7q4Ny6CB8R1gLFjU//XrVsnzmlr55xeAH+59RZq/+DBA6BuFqxZvZr4y5ev
oPjzZ8J3fOXVV+HSSy+DP//5zzB2zBhPulGjhuJass+1dy+J84/3oGnUxo0b
b8sa7j887tTpjYDu+PszderWhb/85Ra4/PLLoXq1p+HLL78MHX/38Mknq4g+
/BDQwRVo1KhxgI+6LV2yJKD7f2rUgBEjPqZY5f8JG/BPzwb0gop/+jP95g/+
7qWqikW/C1m58uPi/Ih74/bbvfvfZbq/0SbrdpKu9bKgNRZoG+O8t9xyC+34
/gpj1zc7adz/UaWKV61Bg/pkK5Yu/T7Q7LUVr4FS4rqkbCf/nnvuhgqXVyBd
sd2HH34YLrjgfC+eNn/hPMO42hvGH6pXrx64g9w0/sbxLTf7et56y83U5tXX
XGMI31hw7rnnQqlSpei+vUb4+Sh748030Jxz5ZVXUhp/c9Pd8P0v2mmMJ+Pv
Lbdt2xbOP/88krv++hvE+agM/fr2UwfV4Zr45qTl2d/777/fOA4DPviAylF3
jMcUK15cHJcmnSteU5HOGZYfwnvQaffDDz8Sz85Facxvve1WePHFF6BixYok
d9VVV0IkN8/j2/IfUtk1YuwwTvBUtWqULi5Yj4p+Yl9RT5TPy48Km/QYlV93
7Z/E3J1B9xPGUC44/wLYLT2z6h0+4V6TIbbVtOnn/+8PPujFyvH3VxTJnzH+
YRvGH5DxsPB/5Yr4Gy7Ix2diufqsmd/R9fiXW28VNuZWmu/s6/FqI/+ee+6B
Cn/8X7IX/r1xgX9vOL/N4tbE3zTEeAid01tvE+f0RTr/9jm9CvKc3090+z93
7jwqw98vf+mlF+kYr/X77vsrzbFjyP7aFZ5//nnvPsK9bPnyJI++men+Q1+K
ZKX775abb/Lev9StW0+pNWXKZDFnlaRr9bnnnoNqT1WjfmBsvVOnTqHnALcq
Tz0p7K/r/wbXGLi64/2P+pQ/7zw6P6NHfaEKis22ASWhRPESzr0tbMCNN4ba
ANwGKvdGR+feSKF7o/Jj9r1xyLk35PHHd7blAvGHMGtmH1WocDlcdNFFoVUa
NGhA9xnaRv3KvUbc36WFjZDnsbvvudexV9cLf2095aP/0LJlS8rH3840jiv4
9jfsFtGzMV2mTBm46mr/epdlcOzx+sXfUEKf4zxxnoqeUxRWrPhR6BSF4iVL
0NzsbvhbSqjj++/28vLwubd4sWLw8ssvG/n+Z9hzS3D8Dx8+Yvu/D9xv7OeH
A237i3EwXOsyyLke/vXCC1SOsUm8Hr786iuPsHnzRmjSpAnslN77oA+Edhjr
Dhs2zOOjL4vjdoHwvY4ePebJ165dW4xXCqxbI/+2NECnjh2pjYbCZ3LXmeDv
rw4VbeK1gb9jFdZ/XO9RDp/JpP7rR3GGTMx5fT1bsnLlyoBYYcc/jO/a3z/+
bwWae5s0aUrPwmg30HbucP2kGPzSYlyvpusxyMc23Lkcn2WwJD+/wL43xHVa
q1YtpcqmTZvpnO7etcvLts/pi3T+h3rn1P53zry5lI/jjed37Nix9HtjVCqu
I7QPYf3vP3CAZ38Tvf/eEHYUz/9DjzwM0WjEk9kr5mN8t4F6rFmz2pPH3y1D
/71o0XPo9yTDzn9Vcd379jec76b7DRhAegTnDrQBZeiatm2ARe9TzzmnmLAB
yyGvIF9cUyWFDfiLJ4924g9i7NAm6vcGzjPy767r5x99jT9Iz3p+HNn0jGcf
/rHCZcSyAh20qAG0v0Uc+6uWAVQUz8Xoo8mbe43htSzzly1bRrbwkYce0lTx
/1265Ht4+pnqCl/XWebjViZwvftbmTLnkk/i9h+fKx8WvpS7od9SpnQpD1Gn
dl26D1asWKHw0efD53kTP9YWNv5HvPjD/eooOGIfOP7vJMe+znP8GvRvcMNn
I0z3798/Jh9jA8OGDVfneMHYuWMH5VUXz2Iyf9yY8dT/oUOHev3H67G08L0v
ueQSce+7a+Ts/ucX2Lb1/PPPD+0/3vPKO4nApRjsv8/wz//WrVul+yE4/jh3
op8l7/ic+Nxzz9MzI95/8fj79+731j7gM8MfK1Qgm49pfG51f7s11vmXr0f9
/N97r31vHBD3hkzGewPzH3lI9btN1z++cx42bKh9Tps3V9hz586111+I+WLx
4sUJ3f/uv2jD0Hajrx+L72YMHTyU7NFNN90krRu2t77OfDlYyOj8vn36kK3E
3/QNO/8451H8IYH7H7cBA+y5Y9To0aqUhfa3rHi2v9nLQ/vj2iBs4jYxH5Qu
Xdrj79i5wznfzyh8XItBc553b+g62fFf2dcwblq9CsL+Xuj5v1bgPmjQ0La/
3y9d4mc7BxWFf+7ZX6eia3/R55W3aDRK+le6485QhZYKRrVQ/9cK8PGArnd8
3gvewOT/3nb7bV4a4zmy/b+jUiUx9v788f7775Hu73Tp6uVt3LTRtpXi3jHx
1W4kYpTB938l+yv38QP0f4UdmPL1FMrFOCNes3Pm2fZ32tRptv3t109pF+MR
vXv3hieeeIJ8ffvZ0F7flkY+qi2HNhGvuZLi3GVl+b+fl5pag+p8N+MbL2/T
5k32Oqyy59Jz2NNVq9GzZLVq+FmVxh8Zx3H9u6H/6BP8l3xNmu4lrf+FOf+e
nhs3weKFC8jOLqRP99je7VhKbP6+fXupr489/KgigfbRjXVtxGe6GOc/lj9w
j/NsiD6vXNG+N4pApUp3BPp/8NBBOqdVnnicnrNTpHX6+LuxMn/e3DmUX7du
XSM/Vv8VGxZn/L+e8jXZ+MsuuxR2796t9B83jN1hW3fffTdUfbqqfa3Q/jTc
efvtZAcwph1UyGY8JfzfZSt0/zf8/Lu6fzE6uGa2jLhu77hNsgGPPQYPS+cX
x7yUuBfc9vKFDS0j/A1ck5CV7f8uZJp7b3zzTej5t7RnPVnGCuTYBxXEHP8/
F1+kl3jj2cjxf5fo/i8ArRkuIfmPuNE1liJfY3YJvofBa+fOuyoZ1ccN4+ee
/yudTysg6qfc5z3TJYP2947bbvVqPF65MjwsfGBXFueC0t7YA+wR19JFl1wM
pUqWpN9f7tbtHZpj6Lr8Ihhbko/CLW9w/A8eOUzvee7/231G2Q8d/xdjaLjN
F7YE0/Mc+zt92lRKD+jfz2t34aJF5IcWK1Ycnv/X8/TOAe02xijRT6nh2l+H
0uXNt6gNfLfQq/f78Oor/6F7Cp8P8/B3qZ3x//HHH0nuIuH/pqen056RnuZ8
pkNqhp2Xk5tr7r24Jv9QPmT9QyxbnOD5/znjH8bHtVd47T72yKMB/mJxbeI4
dOzYMSbf8wcM/L+ibyLax+deudIJ8YyR4thfudqiRQvhAnFOzylWDJ57Hs/p
CP+cCnn87W+Zb/u/KdCmbZtC93/gACn+4JUFxx+fg3GtOt5b+L7XNP74vIF6
VK1ala6V1IwMSHWul7QM+5oZO2Zs6Pmviv4vrX9I7PwP0HWXtrLnloFbxDXu
1njs8crwkPt+1QJ6j1y6TGmpNbw33nTujdvoXdnL/7HvDYw527/Zbj7/tv9b
PlAW6Kf0suJ/hf2l+G/IBdysSTOyFWPGfBFoC+1eqZKlFS1c/7egIF/ho272
HF9J4csyS9z4r6KrrruaLFMa7e9VaqHzUQb939tu99IYN8d3Hi4fdfHmPpG1
e88eWmN02WWXkf+Ivv3f7r0PJk780gca9dGuQksT1eocPnTIe/9mkvnAs79T
KB/XQdj2dz6lp02b7scfHD72pXjxYnbcTOKvX7/B8ZV8+4v9t2PIReCGG2+k
9wpXXH4FxZrwOwjylpsdoWsP12D8nP6jr43rz9Q65vNv3Jx8XAdA6zhC+Bjn
xO/N43d2jh05CkePHYUj4thNK9+PDOHv3eevP9MFVq78iWzKv198KWb/0f7i
u15T37xnQ+HvykXKvSFtdE6LlaD1DHIF5ZxK/LmO/9u2dRsjP1b/B/QPsWFS
XYxHn1/+PHG9lPDeFZrOf+c3OlGscbS73iIBvixjxx+Wh9QNpgcM6O/oPkqR
wQ+MP9x2q/wMXNnwDFxaade9N/A9HY7/lVdcSesQ6N6Icf177zqUyc58Ybu5
uMbK93+DMr169bK/W1Lff7+Jsfx27drRXF5C+Ioyz48/FCh8y7nG7nCuMdO8
qdtfw1kKbKWl613vHcUfbr3Vy8Wxx3cFrgT64riuwN06dbK/v7TKeceTCN8y
FksZhvF31z/c98D9xpZd/3ey4//iujvP/gLaXzv+0E9cd+QbnLSE31tMjIM6
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
zGc+85ON//8JYWvA
     "], {{0, 226.}, {352., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{72., 72.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{352., 226.},
   PlotRange->{{0, 352.}, {0, 226.}}], "]"}]}], "Input",
 CellLabel->
  "In[378]:=",ExpressionUUID->"805fb583-7b4a-452a-b712-0d3a07a478de"],

Cell[BoxData["\<\"Not a valid input\"\>"], "Output",
 CellLabel->
  "Out[379]=",ExpressionUUID->"43362ebf-9246-4950-9d4b-2e2994f14713"]
}, Open  ]],

Cell["asd asd", "ChatInput",ExpressionUUID->"8c795f60-9cc6-40ee-b06b-e0b2247c6f9b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fun", "[", "img_Image", "]"}], ":=", 
  RowBox[{"Binarize", "[", "img", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"?", "fun"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "fun", "]"}]}], "Input",
 CellLabel->
  "In[375]:=",ExpressionUUID->"6c2546ef-e8a6-4989-beb6-96782d896af5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fun\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"fun", "[", "img_Image", "]"}], ":=", 
                    RowBox[{"Binarize", "[", "img", "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"fun", "[", "___", "]"}], ":=", 
                    "\"Not a valid input\""}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`fun\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {1.7156982421875, 13.2843017578125}}]}, 
              Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fun\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`fun", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`fun, {$CellContext`fun[
         Pattern[$CellContext`img, 
          Blank[Image]]] :> Binarize[$CellContext`img], $CellContext`fun[
         BlankNullSequence[]] :> "Not a valid input"}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`fun"|>, 
   False]]], "Output",
 CellLabel->
  "Out[376]=",ExpressionUUID->"c671f574-281b-4ec0-995c-753fee06497e"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "Which of the following gets the error message \"Oops not enough \
inputs\" when the function myFun is defined as: myfun[a_String, b__] := \
\"Hello \"~~a~~ToString[b] and myfun[_] := \"Oops not enough inputs\"?", 
             "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "myfun[\"abc\", \"b\"]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 1, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "myfun[\"abc\", \"b\"]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 1, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> "myfun[\"abc\", \"b\"]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 1, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "myfun[\"abc\", \"b\"]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 1, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "myfun[\"abc\", \"b\"]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 1, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "myfun[\"abc\", \"b\"]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 1, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "myfun[\"abc\", b]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 2, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "myfun[\"abc\", b]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 2, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> "myfun[\"abc\", b]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 2, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "myfun[\"abc\", b]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 2, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "myfun[\"abc\", b]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 2, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "myfun[\"abc\", b]", "info" -> 
                    "This returns \"Hello abcb\".", "index" -> 2, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "myfun[\"abc\"]", "info" -> "Correct", 
                    "index" -> 3, "correct" -> True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "myfun[\"abc\"]", "info" -> "Correct", 
                    "index" -> 3, "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "myfun[\"abc\"]", "info" -> "Correct", 
                    "index" -> 3, "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "myfun[\"abc\"]", "info" -> "Correct", 
                    "index" -> 3, "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "myfun[\"abc\"]", "info" -> "Correct", 
                    "index" -> 3, "correct" -> True|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> "myfun[\"abc\"]", "info" -> "Correct", 
                    "index" -> 3, "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 4 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "myfun[\"abc\", \"ddd\", \"ee\"]", "info" -> 
                    "This returns StringExpression[\"Hello abc\", \
ToString[\"ddd\",\"ee\"]] and an error message.", "index" -> 4, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "myfun[\"abc\", \"ddd\", \"ee\"]", "info" -> 
                    "This returns StringExpression[\"Hello abc\", \
ToString[\"ddd\",\"ee\"]] and an error message.", "index" -> 4, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> "myfun[\"abc\", \"ddd\", \"ee\"]", "info" -> 
                    "This returns StringExpression[\"Hello abc\", \
ToString[\"ddd\",\"ee\"]] and an error message.", "index" -> 4, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "myfun[\"abc\", \"ddd\", \"ee\"]", "info" -> 
                    "This returns StringExpression[\"Hello abc\", \
ToString[\"ddd\",\"ee\"]] and an error message.", "index" -> 4, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "myfun[\"abc\", \"ddd\", \"ee\"]", "info" -> 
                    "This returns StringExpression[\"Hello abc\", \
ToString[\"ddd\",\"ee\"]] and an error message.", "index" -> 4, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "myfun[\"abc\", \"ddd\", \"ee\"]", "info" -> 
                    "This returns StringExpression[\"Hello abc\", \
ToString[\"ddd\",\"ee\"]] and an error message.", "index" -> 4, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1150.5, {182.06352996826172`, 192.91216278076172`}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"def89be0-d641-4129-a331-\
eb38575f56f6"]], "Text",
 CellTags->"CYU",ExpressionUUID->"64df4596-bb93-451f-960f-4e8b71d3e9db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", "3"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"a", "^", "2"}]}]}], "Input",
 CellLabel->
  "In[357]:=",ExpressionUUID->"36554b1e-08c7-4348-8781-04061a159845"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellLabel->
  "In[359]:=",ExpressionUUID->"36eead5d-b950-440f-aec3-817d4be95ea0"],

Cell[BoxData["9"], "Output",
 CellLabel->
  "Out[359]=",ExpressionUUID->"6f4bbdab-58d7-4ed2-b405-de844139372e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "1", "]"}]], "Input",
 CellLabel->
  "In[360]:=",ExpressionUUID->"d75696c6-813c-4e02-bad0-5ce3cc96653c"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[360]=",ExpressionUUID->"1959832f-9519-4a45-9aaf-88b958ee9d42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",ExpressionUUID->"f7410692-b1e7-4f1d-b0a8-7accb4df59df"],

Cell[TextData[ButtonBox["Immediate and Delayed Definitions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://reference.wolfram.com/language/tutorial/\
TransformationRulesAndDefinitions.html#29979"], None},
 ButtonNote->
  "https://reference.wolfram.com/language/tutorial/\
TransformationRulesAndDefinitions.html#29979"]], "Item",ExpressionUUID->\
"5c4cbc4c-b7a7-4c0a-a307-70237040c581"],

Cell[TextData[ButtonBox["Patterns and Transformation Rules",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://reference.wolfram.com/language/tutorial/\
PatternsAndTransformationRules.html"], None},
 ButtonNote->
  "https://reference.wolfram.com/language/tutorial/\
PatternsAndTransformationRules.html"]], "Item",ExpressionUUID->"b44574e4-f11f-\
4d22-9072-be5ae76c909f"],

Cell[TextData[ButtonBox["Transformation Rules and Definitions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://reference.wolfram.com/language/tutorial/\
TransformationRulesAndDefinitions.html"], None},
 ButtonNote->
  "https://reference.wolfram.com/language/tutorial/\
TransformationRulesAndDefinitions.html"]], "Item",ExpressionUUID->"48bfe2b3-\
4b74-4b16-abaa-728f963c5b0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Section",ExpressionUUID->"f21f24a2-3cd1-4233-9bc3-24447a24faca"],

Cell["Check for matching patterns.", "ItemNumbered",
 CellTags->{
  "Exercises", 
   "Pattern Matching"},ExpressionUUID->"e6f03e9a-8939-49e4-a49e-db2be7d7981b"],

Cell["Here is a list of expressions:", "Text",
 CellTags->{
  "Exercises", 
   "Pattern Matching"},ExpressionUUID->"65b6d0e0-fd5b-4d27-98bc-2e856f85b997"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exprs", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"h", "[", "]"}], ",", 
     RowBox[{"h", "[", "a", "]"}], ",", 
     RowBox[{"h", "[", "b", "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"a", ",", "a"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"h", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[361]:=",ExpressionUUID->"18cddd51-65ab-4865-a5f7-d4b1ea142631"],

Cell[TextData[{
 "For each of the following patterns, decide which expressions match the \
pattern, then use ",
 ButtonBox["Cases",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Cases.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Cases.html"],
 " to check your answers:"
}], "Text",
 CellTags->{
  "Exercises", 
   "Pattern Matching"},ExpressionUUID->"4a2b4de5-b9c5-422b-ab82-25ab2b0fc27b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat1", "=", "_"}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[381]:=",ExpressionUUID->"195c5378-e3fb-4735-ad8f-04c36b89970f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat2", "=", "_h"}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[382]:=",ExpressionUUID->"6daf12d9-4890-491b-9e90-4d445ffabf32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat3", "=", "x_"}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[427]:=",ExpressionUUID->"f018c842-ffd7-41ef-8d8a-e81a8d6b9eb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat4", "=", "x_h"}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[428]:=",ExpressionUUID->"ca407bce-9680-4fc1-8487-890a76900097"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat5", "=", 
   RowBox[{"h", "[", "___", "]"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[429]:=",ExpressionUUID->"1335fca8-918f-4578-962f-83592c18e36e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat6", "=", 
   RowBox[{"h", "[", 
    RowBox[{"b_", ",", "b_"}], "]"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[430]:=",ExpressionUUID->"df9a12c5-3deb-45be-b8e4-daa149eb2d04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pat7", "=", 
   RowBox[{"h", "[", "a_", "]"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[431]:=",ExpressionUUID->"60d746e6-ed54-4da0-a5c2-4a87b550a799"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pat8", "=", 
   RowBox[{"h", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"exprs", ",", "pat1"}], "]"}]}], "Input",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "In[383]:=",ExpressionUUID->"770d8de1-98ca-4473-b506-c96d814a59b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"h", "[", "]"}], ",", 
   RowBox[{"h", "[", "3", "]"}], ",", 
   RowBox[{"h", "[", "b", "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"3", ",", "b"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"3", ",", "3"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"3", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"h", "[", 
     RowBox[{"3", ",", "b"}], "]"}], "]"}]}], "}"}]], "Output",
 CellTags->{"Exercises", "Pattern Matching"},
 CellLabel->
  "Out[384]=",ExpressionUUID->"2404787f-8fdd-4120-8635-072f2072df3e"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "HintButton"], 
          TextCell[#, "HintButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "?", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Hint"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat1"}], "]"}]], "Input"]]}}, {}]], 
     Spacings -> 2, Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], 
     BaseStyle -> "Text"], StandardForm],
   ImageSizeCache->{1150.5, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"a28b9ed2-5274-4c3f-a5dd-\
310217ff0a5b"]], "Text",
 CellTags->"CYU",ExpressionUUID->"b4c6be44-e825-4308-a377-3295fd0d4a59"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "SolutionButton"], 
          TextCell[#, "SolutionButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "\[LightBulb]", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Solution"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat1"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat2"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat3"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat4"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat5"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat6"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat7"}], "]"}]], "Input"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Cases", "[", 
              RowBox[{"exprs", ",", "pat8"}], "]"}]], "Input"]]}}, {}]], 
     Spacings -> 2, Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], 
     BaseStyle -> "Text"], StandardForm],
   ImageSizeCache->{1150.5, {166.87078857421875`, 177.71942138671875`}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"7891a346-5270-4904-8dfb-\
e6689cdd3e32"]], "Text",
 CellTags->"CYU",ExpressionUUID->"8bed64ee-2383-4174-aa49-75646c7cd18f"],

Cell[CellGroupData[{

Cell[BoxData["s_func"], "Input",
 CellLabel->
  "In[385]:=",ExpressionUUID->"354027eb-27a3-4032-8466-82a40689f814"],

Cell[BoxData["s_func"], "Output",
 CellLabel->
  "Out[385]=",ExpressionUUID->"dbd176ca-35c9-4ad6-88c9-0114a77b093a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"func", "[", "x", "]"}], ",", " ", "func_"}], "]"}]], "Input",
 CellLabel->
  "In[393]:=",ExpressionUUID->"40d38bbc-8b24-4802-8243-f5e4daff9c2f"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[393]=",ExpressionUUID->"0389870f-2e3a-4a5b-803d-7083860b4050"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"_", "?", "\[IndentingNewLine]", "MatchQ"}], "[", 
  RowBox[{"2", ",", " ", 
   RowBox[{"x_", "?", "PrimeQ"}]}], "]"}]], "Input",
 CellLabel->
  "In[391]:=",ExpressionUUID->"f9b5f62e-fa17-457a-841f-1386977ff4f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"_", "?", "MatchQ"}], "[", 
  RowBox[{"2", ",", 
   RowBox[{"x_", "?", "PrimeQ"}]}], "]"}]], "Output",
 CellLabel->
  "Out[391]=",ExpressionUUID->"eafc1a66-a993-460f-8341-6b5e9c675969"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s_", "?", "PrimeQ"}]], "Input",
 CellLabel->
  "In[387]:=",ExpressionUUID->"cf48e506-d275-4f46-8e45-3cde913f919d"],

Cell[BoxData[
 RowBox[{"s_", "?", "PrimeQ"}]], "Output",
 CellLabel->
  "Out[387]=",ExpressionUUID->"4591f513-c3dd-40ea-a405-ed1543bd4621"]
}, Open  ]],

Cell["Check for patterns in tick data.", "ItemNumbered",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"464201b6-8233-46b4-b632-21dbd73a34ed"],

Cell["\<\
The following reads in closing stock prices for Amazon for the last six \
months:\
\>", "Text",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"4b310bd5-1fd0-4a63-95ec-d5a2d1b4edee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"amzData", "=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<AMZN\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DatePlus", "[", 
        RowBox[{"Today", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "\"\<Month\>\""}], "}"}]}], "]"}], ",", 
       "Today"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Tick Data"},
 CellLabel->
  "In[394]:=",ExpressionUUID->"329295cc-7447-49ee-968b-16643dec93e2"],

Cell[TextData[{
 "The data is returned as a ",
 ButtonBox["TimeSeries",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/TimeSeries.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/TimeSeries.html"],
 ". The following gives the length of the TImeSeries, i.e. the number of data \
points obtained:"
}], "Text",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"f4a4b215-199d-4599-9f9c-90987fd64e39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amzData", "[", "\"\<PathLength\>\"", "]"}]], "Input",
 CellTags->{"Exercises", "Tick Data"},
 CellLabel->
  "In[395]:=",ExpressionUUID->"2f8ae74b-f81e-46c3-bd8a-6d4b2202d3e8"],

Cell[BoxData["127"], "Output",
 CellTags->{"Exercises", "Tick Data"},
 CellLabel->
  "Out[395]=",ExpressionUUID->"5ccb15dd-f78a-4fd0-b825-8b30298f7d85"]
}, Open  ]],

Cell["Here is a quick plot of the time series data:", "Text",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"0bb403b3-663f-4bfc-a26a-4fa3dc81a743"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "amzData", "]"}]], "Input",
 CellTags->{"Exercises", "Tick Data"},
 CellLabel->
  "In[396]:=",ExpressionUUID->"dbcb838d-255c-4378-a6c4-adf9afc4f4cb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], LineBox[CompressedData["

1:eJxVlUloU1EUhp8jDqBvIc7WV1FwQIkNunJ4ba0xbWNf0qQZmrRRbJ2qphtx
bpx2aqviuDFaKU5IEIdqqT50oTgRUSgOaCrOE3Eojgvrf/63sFAeH/+95577
n3NPsuev8FR1VRSlrvP/37fzTx2c9zG38xt/P2+h3vnV84S18EJwrEY4vSYM
TuwVjtb/qv7HKVPYzOoAR2fmM14XrG9YbPFD6JlWYd2eD117k894R8DJ6lmy
fnoOON0grLcXgtUWYW2rfRHyfUnd3gKO9S8AK8pYsLJDOFrdBLY1W7qyGPk+
L2D8M9DNqbP/041zwgnHW+jxZ7O5/h042dtB/Sc4bScfmAdWK4S10yXgxBNh
vc8gcKrnHPG3UZN8JwvHr67HfW3lc5jPD/F3K3ncC/Gzm5Pn3QNrk5yshwv7
jYCT/h6EHt/kpF9rwclTTsZPgfUJhfTrFTjmIzefByfqCtkflYifOl7IenUF
Kw+Ezdt/FqD+niLrfmBzXRHvNx2cabL0AFi7V8T7XAQbv7l+wFNwenUx9Ydg
9Wgx83FUIf+7xVZ/gWM/yO05kv8oF/sxG2w77GI9HOLvLRf9DYMbOlzst81g
c+Rc6t3Ff+dc1l/ixW9QVzI4P/mF3NYITg8vYf5BsOooob5Z8q8lKwbiKUMN
ci/Jd5bBep7A+uhyg+9zmuS73+Ia6NogN+vxAWzkunl+reS71E3/VXl/e9w8
Lyrv74rb6l+ZBzM8jD9c5sEij+WX9MMuD+sr/ae0Um9rkX5+7WF9voLNqlLu
n4b+z9SXst9mgLVLwmaHCjZekLNeYn+8n5f1q5P5sN1Lf2Re6Be8jD9a8m8X
TrsHS/59fTzvssyzKT7qBvToWR/9OiD+PvXxvDbph15losfGYH0mp4x+e2W+
Rcr4Pg6Kv4+53lEr/vbws79XSv42/3/zVg/5ef+Y5L/Fz3ocEn+7BRhf5qdt
YoDv97zk7yc3D5R5vDFAP4rF/5PU69fIvBgf5PnbxF9vkPojyX9DkO9N5lf6
WJD3lXjq/SDr3yrzzh1i/qtk3q0NWe9D5l1TiO/zOeatLRWi37lLkP+vEOP1
AGdWlXP9I6zXGsvZDyOgG3eo26+B49/Lme8KcDI7zPdciv16Iky/poJjNy19
NzjxLWz1NziVFSHflvydEet9gxuuRxhvEtabnyOM9xucGVbB+l2Q35dYBf3+
A05/qmC9ypCvOqSS/XEarOdX8r4FS5Hvskr6tROc2Ee9I1oDPwdG6Vdejf4X
NBA03w==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxVlUloU1EUhp8jDqBvIc7WV1FwQIkNunJ4ba0xbWNf0qQZmrRRbJ2qphtx
bpx2aqviuDFaKU5IEIdqqT50oTgRUSgOaCrOE3Eojgvrf/63sFAeH/+95577
n3NPsuev8FR1VRSlrvP/37fzTx2c9zG38xt/P2+h3vnV84S18EJwrEY4vSYM
TuwVjtb/qv7HKVPYzOoAR2fmM14XrG9YbPFD6JlWYd2eD117k894R8DJ6lmy
fnoOON0grLcXgtUWYW2rfRHyfUnd3gKO9S8AK8pYsLJDOFrdBLY1W7qyGPk+
L2D8M9DNqbP/041zwgnHW+jxZ7O5/h042dtB/Sc4bScfmAdWK4S10yXgxBNh
vc8gcKrnHPG3UZN8JwvHr67HfW3lc5jPD/F3K3ncC/Gzm5Pn3QNrk5yshwv7
jYCT/h6EHt/kpF9rwclTTsZPgfUJhfTrFTjmIzefByfqCtkflYifOl7IenUF
Kw+Ezdt/FqD+niLrfmBzXRHvNx2cabL0AFi7V8T7XAQbv7l+wFNwenUx9Ydg
9Wgx83FUIf+7xVZ/gWM/yO05kv8oF/sxG2w77GI9HOLvLRf9DYMbOlzst81g
c+Rc6t3Ff+dc1l/ixW9QVzI4P/mF3NYITg8vYf5BsOooob5Z8q8lKwbiKUMN
ci/Jd5bBep7A+uhyg+9zmuS73+Ia6NogN+vxAWzkunl+reS71E3/VXl/e9w8
Lyrv74rb6l+ZBzM8jD9c5sEij+WX9MMuD+sr/ae0Um9rkX5+7WF9voLNqlLu
n4b+z9SXst9mgLVLwmaHCjZekLNeYn+8n5f1q5P5sN1Lf2Re6Be8jD9a8m8X
TrsHS/59fTzvssyzKT7qBvToWR/9OiD+PvXxvDbph15losfGYH0mp4x+e2W+
Rcr4Pg6Kv4+53lEr/vbws79XSv42/3/zVg/5ef+Y5L/Fz3ocEn+7BRhf5qdt
YoDv97zk7yc3D5R5vDFAP4rF/5PU69fIvBgf5PnbxF9vkPojyX9DkO9N5lf6
WJD3lXjq/SDr3yrzzh1i/qtk3q0NWe9D5l1TiO/zOeatLRWi37lLkP+vEOP1
AGdWlXP9I6zXGsvZDyOgG3eo26+B49/Lme8KcDI7zPdciv16Iky/poJjNy19
NzjxLWz1NziVFSHflvydEet9gxuuRxhvEtabnyOM9xucGVbB+l2Q35dYBf3+
A05/qmC9ypCvOqSS/XEarOdX8r4FS5Hvskr6tROc2Ee9I1oDPwdG6Vdejf4X
NBA03w==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.9269664*^9, 3.9426912*^9}, {
             157.35278235541483`, 227.02999877929688`}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.9269664*^9, 157.35278235541483`}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
                DateString[
                 Part[#, 1], "DateShort"], 
                Part[#, 2]}& )[{
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}]& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.9269664*^9, 3.9426912*^9}, {157.35278235541483`,
             227.02999877929688`}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {3.9269664*^9, 157.35278235541483`}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
               DateString[
                Part[#, 1], "DateShort"], 
               Part[#, 2]}& )[{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}]& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxVlUloU1EUhp8jDqBvIc7WV1FwQIkNunJ4ba0xbWNf0qQZmrRRbJ2qphtx
bpx2aqviuDFaKU5IEIdqqT50oTgRUSgOaCrOE3Eojgvrf/63sFAeH/+95577
n3NPsuev8FR1VRSlrvP/37fzTx2c9zG38xt/P2+h3vnV84S18EJwrEY4vSYM
TuwVjtb/qv7HKVPYzOoAR2fmM14XrG9YbPFD6JlWYd2eD117k894R8DJ6lmy
fnoOON0grLcXgtUWYW2rfRHyfUnd3gKO9S8AK8pYsLJDOFrdBLY1W7qyGPk+
L2D8M9DNqbP/041zwgnHW+jxZ7O5/h042dtB/Sc4bScfmAdWK4S10yXgxBNh
vc8gcKrnHPG3UZN8JwvHr67HfW3lc5jPD/F3K3ncC/Gzm5Pn3QNrk5yshwv7
jYCT/h6EHt/kpF9rwclTTsZPgfUJhfTrFTjmIzefByfqCtkflYifOl7IenUF
Kw+Ezdt/FqD+niLrfmBzXRHvNx2cabL0AFi7V8T7XAQbv7l+wFNwenUx9Ydg
9Wgx83FUIf+7xVZ/gWM/yO05kv8oF/sxG2w77GI9HOLvLRf9DYMbOlzst81g
c+Rc6t3Ff+dc1l/ixW9QVzI4P/mF3NYITg8vYf5BsOooob5Z8q8lKwbiKUMN
ci/Jd5bBep7A+uhyg+9zmuS73+Ia6NogN+vxAWzkunl+reS71E3/VXl/e9w8
Lyrv74rb6l+ZBzM8jD9c5sEij+WX9MMuD+sr/ae0Um9rkX5+7WF9voLNqlLu
n4b+z9SXst9mgLVLwmaHCjZekLNeYn+8n5f1q5P5sN1Lf2Re6Be8jD9a8m8X
TrsHS/59fTzvssyzKT7qBvToWR/9OiD+PvXxvDbph15losfGYH0mp4x+e2W+
Rcr4Pg6Kv4+53lEr/vbws79XSv42/3/zVg/5ef+Y5L/Fz3ocEn+7BRhf5qdt
YoDv97zk7yc3D5R5vDFAP4rF/5PU69fIvBgf5PnbxF9vkPojyX9DkO9N5lf6
WJD3lXjq/SDr3yrzzh1i/qtk3q0NWe9D5l1TiO/zOeatLRWi37lLkP+vEOP1
AGdWlXP9I6zXGsvZDyOgG3eo26+B49/Lme8KcDI7zPdciv16Iky/poJjNy19
NzjxLWz1NziVFSHflvydEet9gxuuRxhvEtabnyOM9xucGVbB+l2Q35dYBf3+
A05/qmC9ypCvOqSS/XEarOdX8r4FS5Hvskr6tROc2Ee9I1oDPwdG6Vdejf4X
NBA03w==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.9269664*^9, 3.9426912*^9}, {157.35278235541483`, 
         227.02999877929688`}}, "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.9269664*^9, 157.35278235541483`}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> (({
            DateString[
             Part[#, 1], "DateShort"], 
            Part[#, 2]}& )[{
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}]& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.9269664*^9, 157.35278235541483`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9235104*^9, 
        FormBox[
         StyleBox["\"May 2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9287808*^9, 
        FormBox[
         StyleBox["\"Jul 2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9341376*^9, 
        FormBox[
         StyleBox["\"Sep 2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.939408*^9, 
        FormBox[
         StyleBox["\"Nov 2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         StyleBox["\"Jan 2025\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9235104*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9261888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9287808*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9287808*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9314592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9341376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9341376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9367296*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.939408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.939408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.942*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.9235104*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9287808*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9341376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.939408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9235104*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9261888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9287808*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9287808*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9314592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9341376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9341376*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9367296*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.939408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.939408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.942*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
        DateString[
         Part[#, 1], "DateShort"], 
        Part[#, 2]}& )[{
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}]& )}},
  PlotRange->{{3.9269664*^9, 3.9426912*^9}, {157.35278235541483`, 
   227.02999877929688`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellTags->{"Exercises", "Tick Data"},
 CellLabel->
  "Out[396]=",ExpressionUUID->"92e52197-e9e3-4c91-a138-d784ad8123f2"]
}, Open  ]],

Cell["\<\
Here are the values or the closing stock prices for each day:\
\>", "Text",ExpressionUUID->"1e045069-1c63-4de5-8ef4-78a355870909"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prices", "=", 
  RowBox[{"amzData", "[", "\"\<Values\>\"", "]"}]}]], "Input",
 CellLabel->
  "In[397]:=",ExpressionUUID->"3e69f10d-04a0-4634-8de2-07cd8ffbdd4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.06\"", ShowStringCharacters -> False], 
        187.05999755859375`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.05999755859375`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.23\"", ShowStringCharacters -> False], 
        187.22999572753906`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.22999572753906`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.89\"", ShowStringCharacters -> False], 
        186.88999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.88999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"183.83\"", ShowStringCharacters -> False], 
        183.8300018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 183.8300018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"183.66\"", ShowStringCharacters -> False], 
        183.66000366210938`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 183.66000366210938`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"184.06\"", ShowStringCharacters -> False], 
        184.05999755859375`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 184.05999755859375`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"182.81\"", ShowStringCharacters -> False], 
        182.80999755859375`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 182.80999755859375`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.10\"", ShowStringCharacters -> False], 
        186.10000610351562`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.10000610351562`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"189.08\"", ShowStringCharacters -> False], 
        189.0800018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 189.0800018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"185.57\"", ShowStringCharacters -> False], 
        185.57000732421875`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 185.57000732421875`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.34\"", ShowStringCharacters -> False], 
        186.33999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.33999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"193.61\"", ShowStringCharacters -> False], 
        193.61000061035156`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 193.61000061035156`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"197.85\"", ShowStringCharacters -> False], 
        197.85000610351562`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 197.85000610351562`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"193.25\"", ShowStringCharacters -> False], 193.25, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 193.25, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"197.20\"", ShowStringCharacters -> False], 
        197.1999969482422, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 197.1999969482422, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"200.00\"", ShowStringCharacters -> False], 200., 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 200., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"197.59\"", ShowStringCharacters -> False], 
        197.58999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 197.58999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"200.00\"", ShowStringCharacters -> False], 200., 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 200., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"199.29\"", ShowStringCharacters -> False], 
        199.2899932861328, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 199.2899932861328, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"199.34\"", ShowStringCharacters -> False], 
        199.33999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 199.33999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"199.79\"", ShowStringCharacters -> False], 
        199.7899932861328, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 199.7899932861328, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"195.05\"", ShowStringCharacters -> False], 
        195.0500030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 195.0500030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"194.49\"", ShowStringCharacters -> False], 
        194.49000549316406`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 194.49000549316406`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"192.72\"", ShowStringCharacters -> False], 
        192.72000122070312`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 192.72000122070312`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"193.02\"", ShowStringCharacters -> False], 
        193.02000427246094`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 193.02000427246094`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.93\"", ShowStringCharacters -> False], 
        187.92999267578125`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.92999267578125`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"183.75\"", ShowStringCharacters -> False], 183.75, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 183.75, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"183.13\"", ShowStringCharacters -> False], 
        183.1300048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 183.1300048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"182.55\"", ShowStringCharacters -> False], 
        182.5500030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 182.5500030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.41\"", ShowStringCharacters -> False], 
        186.41000366210938`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.41000366210938`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"180.83\"", ShowStringCharacters -> False], 
        180.8300018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 180.8300018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"179.85\"", ShowStringCharacters -> False], 
        179.85000610351562`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 179.85000610351562`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"182.50\"", ShowStringCharacters -> False], 182.5, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 182.5, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"183.20\"", ShowStringCharacters -> False], 
        183.1999969482422, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 183.1999969482422, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"181.71\"", ShowStringCharacters -> False], 
        181.7100067138672, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 181.7100067138672, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.98\"", ShowStringCharacters -> False], 
        186.97999572753906`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.97999572753906`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"184.07\"", ShowStringCharacters -> False], 
        184.07000732421875`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 184.07000732421875`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"167.90\"", ShowStringCharacters -> False], 
        167.89999389648438`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 167.89999389648438`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"161.02\"", ShowStringCharacters -> False], 
        161.02000427246094`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 161.02000427246094`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"161.93\"", ShowStringCharacters -> False], 
        161.92999267578125`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 161.92999267578125`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"162.77\"", ShowStringCharacters -> False], 
        162.77000427246094`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 162.77000427246094`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"165.80\"", ShowStringCharacters -> False], 
        165.8000030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 165.8000030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"166.94\"", ShowStringCharacters -> False], 
        166.94000244140625`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 166.94000244140625`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"166.80\"", ShowStringCharacters -> False], 
        166.8000030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 166.8000030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"170.23\"", ShowStringCharacters -> False], 
        170.22999572753906`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 170.22999572753906`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"170.10\"", ShowStringCharacters -> False], 
        170.10000610351562`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 170.10000610351562`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"177.59\"", ShowStringCharacters -> False], 
        177.58999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 177.58999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"177.06\"", ShowStringCharacters -> False], 
        177.05999755859375`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 177.05999755859375`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"178.22\"", ShowStringCharacters -> False], 
        178.22000122070312`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 178.22000122070312`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"178.88\"", ShowStringCharacters -> False], 
        178.8800048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 178.8800048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"180.11\"", ShowStringCharacters -> False], 
        180.11000061035156`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 180.11000061035156`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"176.13\"", ShowStringCharacters -> False], 
        176.1300048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 176.1300048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"177.04\"", ShowStringCharacters -> False], 
        177.0399932861328, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 177.0399932861328, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"175.50\"", ShowStringCharacters -> False], 175.5, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 175.5, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"173.12\"", ShowStringCharacters -> False], 
        173.1199951171875, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 173.1199951171875, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"170.80\"", ShowStringCharacters -> False], 
        170.8000030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 170.8000030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"172.12\"", ShowStringCharacters -> False], 
        172.1199951171875, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 172.1199951171875, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"178.50\"", ShowStringCharacters -> False], 178.5, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 178.5, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"176.25\"", ShowStringCharacters -> False], 176.25, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 176.25, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"173.33\"", ShowStringCharacters -> False], 
        173.3300018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 173.3300018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"177.89\"", ShowStringCharacters -> False], 
        177.88999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 177.88999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"171.39\"", ShowStringCharacters -> False], 
        171.38999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 171.38999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"175.40\"", ShowStringCharacters -> False], 
        175.39999389648438`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 175.39999389648438`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"179.55\"", ShowStringCharacters -> False], 
        179.5500030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 179.5500030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"184.52\"", ShowStringCharacters -> False], 
        184.52000427246094`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 184.52000427246094`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.00\"", ShowStringCharacters -> False], 187., 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.49\"", ShowStringCharacters -> False], 
        186.49000549316406`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.49000549316406`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"184.89\"", ShowStringCharacters -> False], 
        184.88999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 184.88999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.88\"", ShowStringCharacters -> False], 
        186.8800048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.8800048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.43\"", ShowStringCharacters -> False], 
        186.42999267578125`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.42999267578125`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"189.87\"", ShowStringCharacters -> False], 
        189.8699951171875, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 189.8699951171875, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"191.60\"", ShowStringCharacters -> False], 
        191.60000610351562`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 191.60000610351562`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"193.88\"", ShowStringCharacters -> False], 
        193.8800048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 193.8800048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"193.96\"", ShowStringCharacters -> False], 
        193.9600067138672, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 193.9600067138672, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"192.53\"", ShowStringCharacters -> False], 
        192.52999877929688`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 192.52999877929688`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"191.16\"", ShowStringCharacters -> False], 
        191.16000366210938`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 191.16000366210938`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.97\"", ShowStringCharacters -> False], 
        187.97000122070312`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.97000122070312`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.33\"", ShowStringCharacters -> False], 
        186.3300018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.3300018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"185.13\"", ShowStringCharacters -> False], 
        185.1300048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 185.1300048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"184.76\"", ShowStringCharacters -> False], 
        184.75999450683594`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 184.75999450683594`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"181.96\"", ShowStringCharacters -> False], 
        181.9600067138672, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 181.9600067138672, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.51\"", ShowStringCharacters -> False], 
        186.50999450683594`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.50999450683594`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"180.80\"", ShowStringCharacters -> False], 
        180.8000030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 180.8000030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"182.72\"", ShowStringCharacters -> False], 
        182.72000122070312`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 182.72000122070312`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"185.17\"", ShowStringCharacters -> False], 
        185.1699981689453, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 185.1699981689453, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.65\"", ShowStringCharacters -> False], 
        186.64999389648438`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.64999389648438`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"188.82\"", ShowStringCharacters -> False], 
        188.82000732421875`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 188.82000732421875`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.54\"", ShowStringCharacters -> False], 
        187.5399932861328, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.5399932861328, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.69\"", ShowStringCharacters -> False], 
        187.69000244140625`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.69000244140625`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.89\"", ShowStringCharacters -> False], 
        186.88999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.88999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.53\"", ShowStringCharacters -> False], 
        187.52999877929688`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.52999877929688`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"188.99\"", ShowStringCharacters -> False], 
        188.99000549316406`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 188.99000549316406`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"189.07\"", ShowStringCharacters -> False], 
        189.07000732421875`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 189.07000732421875`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"189.70\"", ShowStringCharacters -> False], 
        189.6999969482422, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 189.6999969482422, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"184.71\"", ShowStringCharacters -> False], 
        184.7100067138672, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 184.7100067138672, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.38\"", ShowStringCharacters -> False], 
        186.3800048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.3800048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"187.83\"", ShowStringCharacters -> False], 
        187.8300018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 187.8300018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"188.39\"", ShowStringCharacters -> False], 
        188.38999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 188.38999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"190.83\"", ShowStringCharacters -> False], 
        190.8300018310547, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 190.8300018310547, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"192.73\"", ShowStringCharacters -> False], 
        192.72999572753906`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 192.72999572753906`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"186.40\"", ShowStringCharacters -> False], 
        186.39999389648438`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 186.39999389648438`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"197.93\"", ShowStringCharacters -> False], 
        197.92999267578125`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 197.92999267578125`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"195.78\"", ShowStringCharacters -> False], 
        195.77999877929688`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 195.77999877929688`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"199.50\"", ShowStringCharacters -> False], 199.5, 
        AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 199.5, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"207.09\"", ShowStringCharacters -> False], 
        207.08999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 207.08999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"210.05\"", ShowStringCharacters -> False], 
        210.0500030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 210.0500030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"208.18\"", ShowStringCharacters -> False], 
        208.17999267578125`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 208.17999267578125`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"206.84\"", ShowStringCharacters -> False], 
        206.83999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 206.83999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"208.91\"", ShowStringCharacters -> False], 
        208.91000366210938`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 208.91000366210938`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"214.10\"", ShowStringCharacters -> False], 
        214.10000610351562`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 214.10000610351562`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"211.48\"", ShowStringCharacters -> False], 
        211.47999572753906`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 211.47999572753906`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"202.61\"", ShowStringCharacters -> False], 
        202.61000061035156`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 202.61000061035156`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"201.70\"", ShowStringCharacters -> False], 
        201.6999969482422, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 201.6999969482422, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"204.61\"", ShowStringCharacters -> False], 
        204.61000061035156`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 204.61000061035156`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"202.88\"", ShowStringCharacters -> False], 
        202.8800048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 202.8800048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"198.38\"", ShowStringCharacters -> False], 
        198.3800048828125, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 198.3800048828125, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"197.12\"", ShowStringCharacters -> False], 
        197.1199951171875, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 197.1199951171875, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"201.45\"", ShowStringCharacters -> False], 
        201.4499969482422, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 201.4499969482422, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"207.86\"", ShowStringCharacters -> False], 
        207.86000061035156`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 207.86000061035156`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"205.74\"", ShowStringCharacters -> False], 
        205.74000549316406`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 205.74000549316406`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"207.89\"", ShowStringCharacters -> False], 
        207.88999938964844`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 207.88999938964844`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"210.71\"", ShowStringCharacters -> False], 
        210.7100067138672, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 210.7100067138672, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"213.44\"", ShowStringCharacters -> False], 
        213.44000244140625`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 213.44000244140625`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"218.16\"", ShowStringCharacters -> False], 
        218.16000366210938`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 218.16000366210938`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"220.55\"", ShowStringCharacters -> False], 
        220.5500030517578, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 220.5500030517578, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"227.03\"", ShowStringCharacters -> False], 
        227.02999877929688`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 227.02999877929688`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"226.09\"", ShowStringCharacters -> False], 
        226.08999633789062`, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 226.08999633789062`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"]}], "}"}]], "Output",
 CellLabel->
  "Out[397]=",ExpressionUUID->"2d2a52ba-9b2c-42c0-ab42-be4538cc4804"]
}, Open  ]],

Cell["In this exercise, you will analyze price patterns.", "Text",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"95d7c5dc-c6ac-4435-abd5-f4f6f420af29"],

Cell["How often did the price increase, decrease, stay the same?", "Text",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"2b446d4e-edc0-479a-8cdf-431ca2eef1af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{"prices", ",", "1"}], "]"}], "-", 
    RowBox[{"Drop", "[", 
     RowBox[{"prices", ",", 
      RowBox[{"-", "1"}]}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltas", "=", 
   RowBox[{"Differences", "[", "prices", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"deltas", ",", 
   RowBox[{"_", "?", "Positive"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"deltas", ",", 
   RowBox[{"_", "?", "Negative"}]}], "]"}]}], "Input",
 CellLabel->
  "In[405]:=",ExpressionUUID->"d86b1dc2-4bae-4c33-8711-b85c98e6646c"],

Cell[BoxData["69"], "Output",
 CellLabel->
  "Out[407]=",ExpressionUUID->"6a5bbb9a-3173-46d4-acb1-5db61b414ff9"],

Cell[BoxData["57"], "Output",
 CellLabel->
  "Out[408]=",ExpressionUUID->"76b9f0ea-3505-4788-bd24-1a6a85c8e1d3"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "HintButton"], 
          TextCell[#, "HintButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "?", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Hint"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           TextData[{
             StyleBox[
             "Try to get a list of the successive price differences. How \
would you test an increase or a decrease? How about when there is no change? \
Can you now use ", FontWeight -> "Plain"], 
             StyleBox[
              ButtonBox["Count", BaseStyle -> "Hyperlink", ButtonData -> {
                 URL["https://reference.wolfram.com/language/ref/Count.html"],
                  None}, ButtonNote -> 
               "https://reference.wolfram.com/language/ref/Count.html"], 
              FontWeight -> "Plain"], 
             StyleBox[
             " to find the number of times your test is satisfied?", 
              FontWeight -> "Plain"]}], "Text"]]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1150.5, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"eb42e461-f62b-4eca-bb73-\
117dbfc8db80"]], "Text",
 CellTags->"CYU",ExpressionUUID->"e93fa68a-d6b2-44a8-b6fb-b60ce531d3fb"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = True}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "SolutionButton"], 
          TextCell[#, "SolutionButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "\[LightBulb]", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Solution"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
          "The price changes are the successive differences in price:", 
           "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{
              RowBox[{
                RowBox[{
                  RowBox[{"Drop", "[", 
                    RowBox[{"prices", ",", "1"}], "]"}], "-", 
                  RowBox[{"Drop", "[", 
                    RowBox[{"prices", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], ";"}], " "}]], "Input", 
           CellLabel -> "In[34]:="]]}, {
         RawBoxes[
          Cell[
          "Fortunately, there is a built-in function that does this:", 
           "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{
              RowBox[{"deltas", "=", 
                RowBox[{"Differences", "[", "prices", "]"}]}], ";"}]], 
           "Input", CellLabel -> "In[35]:="]]}, {
         RawBoxes[
          Cell[
          "A price increase is a positive delta, so you can count how many of \
the deltas are positive:", "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Count", "[", 
              RowBox[{"deltas", ",", 
                RowBox[{"_", "?", "Positive"}]}], "]"}]], "Input", CellLabel -> 
           "In[36]:="]]}, {
         RawBoxes[
          Cell["Negative:", "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Count", "[", 
              RowBox[{"deltas", ",", 
                RowBox[{"_", "?", "Negative"}]}], "]"}]], "Input", CellLabel -> 
           "In[37]:="]]}, {
         RawBoxes[
          Cell["Level:", "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Count", "[", 
              RowBox[{"deltas", ",", "0.0"}], "]"}]], "Input", CellLabel -> 
           "In[38]:="]]}}, {}]], Spacings -> 2, Alignment -> {Left, Baseline},
      ItemSize -> Scaled[1], BaseStyle -> "Text"], StandardForm],
   ImageSizeCache->{1150.5, {209.80947875976562`, 220.65811157226562`}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"d1d923f5-3c22-40a6-b20e-\
b6fec5bd706c"]], "Text",
 CellTags->"CYU",ExpressionUUID->"3b953712-fcaf-4972-b470-d25aa5be9bd9"],

Cell["\<\
How often was an uptick followed by another uptick, a downtick, a level tick?\
\
\>", "Text",
 CellTags->{
  "Exercises", 
   "Tick Data"},ExpressionUUID->"031861ba-dc17-4d6c-96a1-9e3d67d85c19"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "HintButton"], 
          TextCell[#, "HintButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "?", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Hint"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           TextData[{
             StyleBox[
              ButtonBox[
              "Partition", BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://reference.wolfram.com/language/ref/Partition.html"],
                  None}, ButtonNote -> 
               "https://reference.wolfram.com/language/ref/Partition.html"], 
              FontWeight -> "Plain"], 
             StyleBox[
             " can break up a list. But can you get it to create overlapping \
sublists? If yes, then use Count on the list of lists.", FontWeight -> 
              "Plain"], 
             " To analyze successive deltas, form overlapping pairs of \
deltas. Now you can search for patterns, such as two positive deltas in a \
row. Or a positive one followed by a negative one. Or a positive followed by \
no change (i.e. 0.0)."}], "Text"]]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1150.5, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"f6d1eb9b-0a58-48f8-a1fa-\
95e9cea922d0"]], "Text",
 CellTags->"CYU",ExpressionUUID->"9cfb37dd-6aa2-4350-858e-b256b90a6ed4"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "SolutionButton"], 
          TextCell[#, "SolutionButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "\[LightBulb]", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Solution"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
          "To analyze successive deltas, form overlapping pairs of deltas:", 
           "Text", CounterAssignments -> {{"ExLabel", 1}}]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{
              RowBox[{"dpairs", "=", 
                RowBox[{"Partition", "[", 
                  RowBox[{"deltas", ",", "2", ",", "1"}], "]"}]}], ";"}]], 
           "Input", CellLabel -> "In[39]:="]]}, {
         RawBoxes[
          Cell[
          "Now you can search for patterns, such as two positive deltas in a \
row:", "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Count", "[", 
              RowBox[{"dpairs", ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"_", "?", "Positive"}], ",", 
                    RowBox[{"_", "?", "Positive"}]}], "}"}]}], "]"}]], 
           "Input", CellLabel -> "In[40]:="]]}, {
         RawBoxes[
          Cell[
          "Or a positive one followed by a negative one, etc.:", "Text"]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Count", "[", 
              RowBox[{"dpairs", ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"_", "?", "Positive"}], ",", 
                    RowBox[{"_", "?", "Negative"}]}], "}"}]}], "]"}]], 
           "Input", CellLabel -> "In[41]:="]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"Count", "[", 
              RowBox[{"dpairs", ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"_", "?", "Positive"}], ",", "0.0"}], "}"}]}], 
              "]"}]], "Input", CellLabel -> "In[42]:="]]}}, {}]], Spacings -> 
     2, Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{1150.5, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"cd4925a8-c0ef-4fa9-b219-\
6916be4cf875"]], "Text",
 CellTags->"CYU",ExpressionUUID->"de85ff0b-765b-4ee1-80f5-8f865e552de6"]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->True,
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
PageWidth->Automatic,
WindowSize->{1286, 949},
WindowMargins->{{Automatic, 463}, {113, Automatic}},
WindowTitle->"Assignments, Rules and Patterns",
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       Cell[
        BoxData[
         TagBox[
          GridBox[{{
             ButtonBox[
              TagBox[
               TooltipBox[
                GraphicsBox[{
                  Thickness[0.022727272727272728`], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 40.099998474121094`}, {44., 
                    40.099998474121094`}, {44., 31.999998092651367`}, {0., 
                    31.999998092651367`}, {0., 40.099998474121094`}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 24.099998474121094`}, {44., 
                    24.099998474121094`}, {44., 15.999998092651367`}, {0., 
                    15.999998092651367`}, {0., 24.099998474121094`}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 8.099998474121094}, {44., 
                    8.099998474121094}, {44., 0.}, {0., 0.}, {0., 
                    8.099998474121094}}}]}}, {
                 ImageSize -> {Automatic, 27}, 
                  ImagePadding -> {{0, 0}, {3, 3}}, AspectRatio -> Automatic, 
                  ImageSize -> {44., 41.}, 
                  PlotRange -> {{0., 44.}, {0., 40.099998474121094`}}}], 
                "\"Table of Contents\"", TooltipStyle -> "TextStyling"], 
               Annotation[#, WolframUTools`Private`tooltip$218919, 
                "Tooltip"]& ], BaseStyle -> "Hyperlink", Evaluator -> 
              Automatic, Method -> "Preemptive", ButtonNote -> 
              "DEV210-WolframLanguageProgrammingFundamentals-TableOfContents.\
nb", ButtonFunction :> If[FileNameTake[
                  Directory[], {2, 2}] == "wolframcloud", 
                SystemOpen[
                "https://www.wolframcloud.com/obj/online-courses/Published/\
DEV210/DEV210-WolframLanguageProgrammingFundamentals-TableOfContents.nb"], 
                SystemOpen[
                 FileNameJoin[{
                   NotebookDirectory[], 
                   "DEV210-WolframLanguageProgrammingFundamentals-\
TableOfContents.nb"}]]]], 
             Cell[
              BoxData[
               ButtonBox[
               "Wolfram Language Programming Fundamentals", Tooltip -> 
                "Wolfram Language Programming Fundamentals: Wolfram U Course",
                 BaseStyle -> {
                 "Hyperlink", "DockedTitle", FontColor -> GrayLevel[1]}, 
                ButtonData -> {
                  URL[
                  "https://www.wolfram.com/wolfram-u/courses/programming-\
applications/programming-fundamentals-dev210"], None}, ButtonNote -> 
                "https://www.wolfram.com/wolfram-u/courses/programming-\
applications/programming-fundamentals-dev210"]], "DockedTitle"]}}, BaseStyle -> 
           "DockedTitle", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.75}}, "Rows" -> {{0}}}], 
          "TextGrid"]], "DockedTitle", CellMargins -> {{0, 0}, {0, 0}}, 
        StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
        CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
        CellFrameMargins -> {{20, 20}, {15, 15}}, LineSpacing -> {1, 4}, 
        LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Title", 
        CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
          "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
          "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
          "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
        1100, MenuCommandKey :> First[{"1"}], FontFamily -> "Source Sans Pro",
         FontSize -> 34, FontTracking -> -0.5, FontColor -> GrayLevel[1], 
        Background -> RGBColor[
          Rational[22, 255], 
          Rational[8, 51], 
          Rational[21, 85]], Alignment -> {Left, Center}], 
       PaneBox[
        TemplateBox[{
          TagBox[
           TooltipBox[
            GraphicsBox[{
              Thickness[0.0022222222222222222`], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                0}}}, CompressedData["
1:eJxtlTFo20AUhtUGAoVsgUC3dvEcEBQ8xciOQsAgpZ4sbCHrUpEh0EHQ2ZOh
kM1LtBkKmrIFAtkEgUBBQ8AQ8ObJEMiWKZAhL/p/YZ2wwZy+e/+9+9+7s/w9
/P3z15ZhGJ/keyrfz0bxCaKboCXjWTQ5+Rhb5nT0MWb5zhH4X8FB1LDB1wXL
0yHGjPGog3U511+0Mf9Izi3olyPkMQueJU8Fj5OFhfkXbX2Wv5G7Hei/hPR3
iPx7IeYX5EZIX/R7R33XQfw+pF+NZT8Hef4znjr0XebTOIhWDuYfyNsu9pvT
z1eNxVct3qzFbZf9Knjf7GksTzWeubqfexd5b0t/1KfUGyeI/y34Id/heSuN
xddGlifyk9rEpV581Pimxqliv7g+UVV/cg4K868u5sdc/8x6/jC+YP3nqlq/
1EP9FfvRZ3zCfK6q9nOWHCv022S8pZDnxcG4W/bvAByPdO4FZN6niV+Ni2JY
ZTkfD/669H/lYf+Y+8/IU9Yz9dg31j/xoMsYj6mfc33A+JL5u161f/K786r9
lXtKPfovH+63TV72dc40Fn8b+TJJqA+Gm7jUy+9YYznHQS3foOpXzntQq4/6
8v43qU80Xp83uOz/Wt8sz5/5Guy3PUB/d7X91vejx/wZ3x8J61nZ4Nsh6+T7
aM77gPdnlj8PMR93WLePMW1D963gcbSyoDN5v1oW/fn0Y2G/PuNZm3l9+uL7
+YL6mO/L1GddNvvIuHkE/qH9P2j/F++mXnJA
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxtVD1IHFEQfkQIBFLYCjYhIARswlWCmKfn3+np7dnZSXj73hUHEWwtrkqV
QhCE7bYSAnap0r3K6hVWgp1wIAgphICQzrmdb3LzQhaW4dv5n/lm333+clDO
GGNe0fsRkp4j7weWZcdm+GFrIuvqsMHGjDYn0rbawHaD9R+AzTr7vR6w3e81
1t+FiYzpLfD3Bo/8wir7HQe2P7GIFxDP8vexB/7E8S+ARyscdznDxtyXuf5b
mftvCraQYm9Zf+10fXVVOV1/TEOX99dxun/bajk9n5jmnZ6fMbOO8/B8BVP/
HY3p2dX+tIeujk917en8NOd9XR/F7+n6aa+F7o/sC4430/R/kxb7iAc87HMd
Z8BXfbYfN3jgr6G3XmPK9w9+BL7sc32LIY9/HHT+mK6Crk/4I/XX1RvhZw/x
Brp/4ed0PszfmLpdxBF+7mgs/KdK3P8w7X+bv98CJ9zDGPuKGyyf4H8p9wB+
xTbbvxf+tTE/YLuGvCXb/VhleV6iftxLbPDIP+Be/og98JLXOKbTDJP02p/u
xev41GfI87eCrs+YQu6zzfbDoPujyEH3T/cnevwvKtkv7qGW/8O2xtP51+K/
o/3p6er45L+n89fVnNyD6Ht5/bGn+6O5Ffx9Fvm/Fno+dfWz0PO7Sb8KPV/a
M/i+lOEj/1xqLPsTf9mvxJf9T/P/5QfshT9c/5RfBv09Od2/8FPmI/yV+Qm/
Zb4Z/18AiE9a0w==
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxtkz1LA0EQhlcFQbAQUqVTAqkPFlIJuUvQemMXsDgEF+8DFAKCYJFKEOxS
bZcqlV0qweJ+wBWBgGAXEALW16ZwvXkXd4IHy96z887szNzcydXtxfWeEGLH
rq5du6J+Qrm8Cem1G3o81rPwd5+ab8ZFuWEsxFHicyhbCe1zsExIV4D7pDef
8Fewi4jiXyJeu+ZYa+iHEenuwAb2excP/o+4X/Z8tvkxXpSHyudYnyuq96Hm
QI6Uf18gJ7An4Lny812UpeL1rJRfbyArxfshBn6/Yr0Pbrj8BtAxdt/Dsfte
22yVA4r7kf7Hf/ELxkX5ynhqzBY/p36+tv+pX4/tT+rXa/sD/dr1B/alQt9T
8nuD/tTlC3sHPIZ/AP2QsRDHjMd6jXl9yXyO9Szj9veM+lZhHhdkN82Izr8y
Og/BFfQjzNsGPI8or4McOugbYJrHqWnmqKeHvHOKU/ZI18qh61O+7Zx2De4g
3uiM9gnjWD8hPv+fa/4BI1HiVA==
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxtlL9Lw0AUx68KguAgCEIRhKIIboVMTl7qoiD2qovdgmC2mExCt4Dg5CAI
4m2BgiA4FJwKHQJOQoaAU8HBP6BDoZObZ9/38F3pwXF88n7ce9/jpXYRn14u
CiEqZh+YvSCmS3o3V9KcZTFSknGmh0d/ZxCuJ/NYiPSQ+89yGj43OEvPa1D8
Ldn10Ke4e7D2yf4IbvsU10W+Hfj3cJ+Ycl4MbD5JXMCeg79w/5uk72NbH1jE
nE1/sWtXc9msfdJlN5rH//7SYemdORyE4QxfR7xeo1fE+zH6ROgT+brwn+C+
HuXTVZ/q6SNeQs93cAr7h80PfUvkX2lwNv4OZ7qqOJfFsUJdsHcUvy/TGvYB
uK94vXXvU/F+hPhWvN+6N1Fcj0z/KK6XWS2uZxAutbjelu17WLbvNctPWtv4
hLMQ55iH9gn8Hc6L7YTOuybFb9n5adJZS6ifNdS/Cfse+t+w+WC389eBXquI
f1D0fTkh/V/BFcxnDv9xzPU18xBzfc37xBQ/QvyLw87/4Rfi3/f7
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxtlD9IHEEUxgeLVEcqm2sEmzSBIEyaEPBmr7p/6l4MQSHIonHhmrh7abTT
xkaxCsHpNgRsLLUJhLCVEFhFCAREi0BADFxx4Sq7jPe+h2/kBpbhNzPvzfe+
2ZnJ5bVXq2NKqUX33fWuZbbTNa7ftBdVMxxZB5eHHMXbQ86L3YD6j0M2WgfU
f+F4Q3xEHB8Yij/xOLM/RrJrFcr/zePMfvbY6B3WV5F6ldaIf0d82sL8AtZb
xDex/3WF9E2DnxiKfw6OUc9T1HsEvZOsJyAuY/5DQPkegwfgTyn8qlH+1kh2
O1Yl3/s/i/kcfs/zeuR/AzY4n7cp9SWsX8F+A+jvYL4Ap5wfvJH69W6RHpyX
899j9z947CJGssL5OU5G8X3+Q4/z4tjjKP7+gE8SqTeKzxJZTxT/SmS9eXGV
SD+M/pPA74DibhLfz14i/Vaqz/nh7wD5S1XJfJ7M7j8JJZ8XrZDG/2F+I5T7
ZdZi/i/4ayj1TumfoaxHqd+hrHdKD0LpR2ZvQ+mXa23pZxQ/aku/mfk8mPm8
HvK+tci3l0o2+tLjvBjH/YnapOtFl/zoQd9SV/rh/s8ujR/MSc7sxYzP5Rla
957vY4s4Rvx108+/2CQ9rzlfg3TVOL5B/Uu8f6UGxT/j96BOPMHrwXz/dR0+
83tQI+7z/avRvuL9/Q8PwFRN
                 "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQQJaX6FDmBWgyeIPnCmB4WfkLYMTX4PmL9g5kyo
/Dmo/AFPCP0AzHcw/gxV/wbKN/aCyP8ohNrjBTGHsQhizjMon7MIQkd6Q8T5
YPLeEHOEiyB0sQ/EHJEiCM3ji8o/g8bv8YOYKwg1T80fqg9q3mZ/iPs4oPZL
BkD4DGC+gXFwAET9F6j/KwMg9MtCaDgFQMy5DQsPqPzJQoj+y1DzdkDVP4Oq
XwzmXzjzBqq+E4V/4IwPVj4ifpDiDwD9RnX7
                 "]}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxtk7FKBDEQhqPdwTU24oIIhyIKIsiCIBYmUbY80EKwWwVTKribQhQ5sbEQ
wTJd4OB68RDLa4V7AV/AWvAFzO78wWTZwDJ8yT9/JpNN7+zy6HyWMbbnviq6
wdNhwV20Jsko3tfM03S/irm6q9mNmifTW/BEku6moPknSfnXNQ/MScxqNWI3
Inb5ItzP7S9I9wj+5aR/8ftzihb+I04+44it+WzlqgsUf67a+F8/08jvNHgO
9b2hnoWovlwt4XxTTrpl5H9Dv4Z+JYJ0G8jngvy3wAP0Z9v7C/LbhX9XIg/+
StL8Afy/0O9Oib4dkl+/wfOa8v19JRr5qG8RbFBfT1MdBdZXdFz/ug7Pl6tN
rDPUn+qwH9bs6LBfTqHjfmY67Lerv8HHEVtz2soM952ri7KN/f3y9CHiXI0i
ZuyjDM/n2f2vorEuQ3YKSX7v8PP3NS4p0ntydUNP782aV++P/GfouxnND4s2
rt/3H69t4mk=
                 "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQQHzriUOIBpHx8Q7WBsDeYvmCnpC+Ebg/kJac+g
fG2o/Ew/CF8Zpt8fQsuA+UAQAKElwHwD4+AAiDliUPPUAiD6hVHUL5gpWAIR
3+wPUccHVZ/mDxHnhtrH4w/RxwHVf8APIs4C1V/sBzGPEeYfqPyfYqh6Xwj9
oxhqvi9E/gtUnsEXIv6uGCLe4wOht0DlG9wh/JoSVD5SeAIAy/FP8g==
                 "]}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}}}, CompressedData["
1:eJxtlLFLHEEUxicKVvkHbARBhECKgwUrwdk7ESSHzHlVSLMILgYEr9m9TXdi
e12aDFhsJYIiiE1CmgUhCG5xIAhiYyFB8TgUKzvHm++5b5ZbWGZ/8968ee+b
Nzu9trW6Pi6E+GDeNfOOieEjvYO2tJ8LknEn3JNvYxAeOSzE7xJnJT5r2zgn
4B7iZ4h3OeQsz6X1u4b/M/xvYP/o2/EW66Vvxztwx7frHig+/Pu0vmr3GyC/
0OGK91O9jamedupP9VPMOctnhtzLu4pzR+uqw+Es4s/GqM+38T6Bu8jvM7iO
eiqIN+nb9XMx1yPL5yke9KrFXF/pfYm5/tJrUn7gbw4HYehwqr+P5KL+3WgU
F+e973Cqjx2W3t8Sn0Zu/ueIn4EvIl5vqq8irofpj4jrZfoD6yX0vgd3qB8o
PvR+RHzbH8TG3+FUTyrOvbyurH4D2H8ovl+qNez/wX8Uz7fiXShej5lXvN6K
96y4Hql+UVwv8zS4nkE40eB6E9N5ENN5lfmX1g07b/uh4Kk25mvIr83t5isZ
xUX8rsPS23HY6OawEK2E12f2TXj9Ziax+veh31fYr6BPE/H+Qf8V+B/Cfxnc
hX0JvIn1NewvHTb5OUz3/Z1x37N8MbEj3fdlMN33Orju83ypf6meor8Digfe
gJ3+py3sT/cvofxwX7YdpvMgpvMqsyj9/4f8CjTreeM=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxtlT9oE1Ecx19VnEoXFwsOunQsgTd1qXeXxCnDRboEOhxSD8RAlYCYu1Aq
QqcOgosHRQKF4FCEEigtOqQIXbyhkMUgiFAoCBmEQCGL+Gt+3x+8X8hBePm8
7+/v+3P34Mnm46c3jTFz9Nuk3w0zeaL4V+LRuB3Hq9ejZ78o7uV7zFk2YfoH
XnzI+obo4Ar8l7zrsZ2tgDsTjuIl0X2Odzdhv9xnfUHiBTx/K+H5uMj2JuG4
tZLLnm2Utb4YunyeV0KO86/JejPkcQzOoF+BT+D/d8IF24f9nybP/w457wX0
Efgn/MfgPuxNlfl7k/PcrrLdqWJjjhX38oOZ/CHLqjz/OZnFYu/Z/UTnyxKd
753iKN5J3Hp7eStx+4niV1jPIdbnBfQB1ucZ4p2F7L8B+wPYR+Bd6OvgOvxr
yO8ppvqm9bLLtP8lNx79K7r5PWvBdTmPgdsP6QGPb3H+Br67PjQDbkt+n/Mf
yn3w2f8b4o08tvsh8TzOP1RMfaVav5e6/lG8zDruSzvzYV9DPSH0jo/+Ux7n
A+wH4jXAL2F/GbD/65Tz8P2K4i3wZZHt36Tov+Qy3eOyywV7J9T6I+z3NvQG
7kMKfh+6+Qu2G7r1nec57J+nPD+Q8wR9KOcH/iPwGuzH4Arql/tXVEzvJ8Wy
3tNM9eI+zLdmsdjT09L+Vyoe7f9UPReqXupT9UPvD9kP9JND7+M+niFeD/6n
sO/A/it4B/qJ7Df8j5B/RTE9iqnPssu0/zgPh9AreD9/Au8GbPcRnMt9wnm0
eN9vgbs4/3XRwWs47/x9kf2S748x97le211lfQ7nm79f6vv2H6WjrZs=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{37.099998474121094`, 33.400001525878906`}, {42., 
                25.}, {42., 33.900001525878906`}, {36.900001525878906`, 
                41.400001525878906`}, {37.099998474121094`, 
                33.400001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{31.899999618530273`, 56.900001525878906`}, {25.5, 
                48.599998474121094`}, {35.5, 45.599998474121094`}, {41.5, 
                53.70000076293945}, {31.899999618530273`, 
                56.900001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{26.100000381469727`, 40.400001525878906`}, {
                24.899999618530273`, 29.300003051757812`}, {35.20000076293945,
                 33.80000305175781}, {35., 43.29999923706055}, {
                26.100000381469727`, 40.400001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{43., 52.599998474121094`}, {37.099998474121094`, 
                44.5}, {43., 35.900001525878906`}, {48.900001525878906`, 
                44.5}, {43., 52.599998474121094`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{53.79999923706055, 69.20000076293945}, {
                43.900001525878906`, 65.70000076293945}, {43.900001525878906`,
                 55.5}, {53.5, 58.70000076293945}, {53.79999923706055, 
                69.20000076293945}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{51., 43.29999923706055}, {50.79999923706055, 
                33.80000305175781}, {61., 29.300003051757812`}, {
                59.900001525878906`, 40.400001525878906`}, {51., 
                43.29999923706055}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{54.099998474121094`, 56.900001525878906`}, {44.5, 
                53.70000076293945}, {50.400001525878906`, 
                45.599998474121094`}, {60.5, 48.599998474121094`}, {
                54.099998474121094`, 56.900001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{42., 55.5}, {42., 65.70000076293945}, {
                32.20000076293945, 69.20000076293945}, {32.5, 
                58.70000076293945}, {42., 55.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{40.20000076293945, 68.29999923706055}, {
                35.599998474121094`, 74.29999923706055}, {26.700000762939453`,
                 78.20000076293945}, {31.799999237060547`, 
                71.29999923706055}, {40.20000076293945, 
                68.29999923706055}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{30.5, 61.099998474121094`}, {30.299999237060547`, 
                70.20000076293945}, {25.100000381469727`, 
                77.10000038146973}, {26.100000381469727`, 67.4000015258789}, {
                30.5, 61.099998474121094`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{28.799999237060547`, 56.}, {21.5, 
                53.29999923706055}, {15.100000381469727`, 
                46.099998474121094`}, {23.299999237060547`, 
                48.900001525878906`}, {28.799999237060547`, 56.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{30.100000381469727`, 58.5}, {24.799999237060547`, 
                66.}, {13.800000190734863`, 63.599998474121094`}, {
                21.299999237060547`, 55.20000076293945}, {30.100000381469727`,
                 58.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{32.70000076293945, 44.5}, {23.899999618530273`, 
                47.099998474121094`}, {15.5, 44.20000076293945}, {
                25.100000381469727`, 42.099998474121094`}, {32.70000076293945,
                 44.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{43.900001525878906`, 25.}, {48.900001525878906`, 
                33.400001525878906`}, {49., 41.400001525878906`}, {
                43.900001525878906`, 33.900001525878906`}, {
                43.900001525878906`, 25.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJRKA0BIg5gKiHUAYnfMHOmHYh2MDbWA4sbG+uD6AUz
Ix2gfCUQfeAMjyuYn5YmBlXvCjVHDKoewp81UxQiXwzhmxiLQuRnoslvRtN/
E8V8oHovZPuB6gOR3Qe0PwTN/SHI/lsw8ydEPYNCOIQv6QvhO0RA6AZXZP6B
M2eskflA83SQ9aOHH9A8TxB94QxPMNS9/lBzwe5ISHvmB6INjD8HQMx/EwTh
G0P5PQFQc7yR5YHucEXWf+CMjwuy+Q1paVbI9oOciuwfYHgYQ/U7IssDw88M
zD/rA9NvAfWvC0R9mgqEf8AVqt4YYj+PN7L8hTM6Acj6L5x5E4BiPsL/jhD/
CgejhrdCGEb4AQAnYISO
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQOxsIhDkA6I21ZmAOYPzkQRKeluUU4gFU0+IBo
Y2PjSCjfFZXPYIvMT0hL0wfRZ874gPUfOHNGDNn8BTNnCkLkc8Kg8hwg2sTY
OAxqHgOInjHzZyjUvG/2YP5NFD7QHbZQ/X/A/LNnbKD6NZHphLRndmA+1B0O
xsUuyPbA/MNgYPzZHmxejxuavDeyfqCJQcjmHzjDA3YXg/FmG4h9amB+Q1qa
LTLfxPhyKFQflP85FBIeO0Mg4aETBvVfCHL4oMQPANLHWh4=
                 "], CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQYHQhyA5IyZM0MdkPhAYAeiHYw3Q/jGm21B9IKZ
kkFg/tkz2iA6IU3NG8w/c0YGos/BDcrnIYbvYGyMxv/sCuabGHND7YfwZ8zk
hPCLXaHqOaD6IfyMNC6ou12hNNS8zS6o5uPnJ6QtQ+EvmDnTHtl/B86c0UL2
PxBwIIcPjN+Q9gyFb2D8OQSZb2I8ORRFP8OCUIj9aQIOYO/eDIX6TxSiXjgM
Ki/lAPauWxjEPT4GIDot7Vk4VL0thH8sAmJugysyf8HMSB9kPtC8QGT9C2be
DHYAe9cHar4ONH1IhkHkK6H+eICSXjLSlqHwwekJADolewo=
                 "]}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{48.70000076293945, 75.10000038146973}, {43., 
                84.79999923706055}, {37.29999923706055, 75.10000038146973}, {
                43., 67.9000015258789}, {48.70000076293945, 
                75.10000038146973}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{53.29999923706055, 44.5}, {60.79999923706055, 
                42.099998474121094`}, {70.5, 44.20000076293945}, {
                62.099998474121094`, 47.099998474121094`}, {53.29999923706055,
                 44.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{54.20000076293945, 71.29999923706055}, {
                59.29999923706055, 78.10000038146973}, {50.400001525878906`, 
                74.29999923706055}, {45.70000076293945, 68.29999923706055}, {
                54.20000076293945, 71.29999923706055}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{57.20000076293945, 56.}, {62.70000076293945, 
                48.900001525878906`}, {70.9000015258789, 
                46.099998474121094`}, {64.5, 53.29999923706055}, {
                57.20000076293945, 56.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{64.69999694824219, 55.20000076293945}, {
                72.19999694824219, 63.599998474121094`}, {61.20000076293945, 
                66.}, {55.900001525878906`, 58.5}, {64.69999694824219, 
                55.20000076293945}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{55.5, 61.099998474121094`}, {59.900001525878906`, 
                67.4000015258789}, {60.900001525878906`, 77.10000038146973}, {
                55.70000076293945, 70.20000076293945}, {55.5, 
                61.099998474121094`}}}]}}, {
             ImageSize -> 170, AspectRatio -> Automatic, 
              ImageSize -> {450., 102.}, 
              PlotRange -> {{0., 450.}, {0., 102.}}}], 
            "\"Wolfram U: Learning Resources for the Computational \
Universe\"", TooltipStyle -> "TextStyling"], 
           Annotation[#, 
            "Wolfram U: Learning Resources for the Computational Universe", 
            "Tooltip"]& ], "https://www.wolfram.com/wolfram-u/"}, 
         "HyperlinkURL"], ImageSize -> Full, Alignment -> {Right, Center}]}}, 
     GridBoxAlignment -> {"Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> {"Columns" -> {
         Scaled[0.75], 
         Scaled[0.25]}}, 
     GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
    "Grid"]], "DockedTitle", CellMargins -> {{0, 0}, {0, 0}}, 
  StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
  CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
  CellFrameMargins -> {{20, 20}, {15, 15}}, LineSpacing -> {1, 4}, 
  LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Title", 
  CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
    "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
    "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
    "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey :> 
  First[{"1"}], FontFamily -> "Source Sans Pro", FontSize -> 34, 
  FontTracking -> -0.5, FontColor -> GrayLevel[1], Background -> RGBColor[
    Rational[22, 255], 
    Rational[8, 51], 
    Rational[21, 85]]],
ShowCellBracket->True,
TaggingRules->{
 "WolframUNotebook" -> True, 
  "PresenterSettings" -> {"ShowNavigationBar" -> True}, "ShowNavigationBar" -> 
  True},
ShowCellTags->False,
TrackCellChangeTimes->False,
Magnification:>1.5 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       StyleData["Title"], CellMargins -> {{27, Inherited}, {10, 30}}, 
       FontSize -> 40, FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["DockedTitle", StyleDefinitions -> StyleData["Title"]], 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{20, 20}, {15, 15}}, FontSize -> 34, FontColor -> 
       GrayLevel[1], Background -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Subtitle"], CellMargins -> {{27, Inherited}, {0, 20}}, 
       FontSize -> 34, FontWeight -> 400, FontColor -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Subsubtitle"], CellMargins -> {{27, Inherited}, {0, 2}}, 
       FontSize -> 20, FontWeight -> "Thin", FontSlant -> "Italic", FontColor -> 
       RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Chapter"], FontSize -> 31, FontColor -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Section"], CellMargins -> {{27, Inherited}, {8, 25}}, 
       CellFrameMargins -> {{7, 7}, {7, 22}}, CellFrameColor -> 
       GrayLevel[0.8], FontColor -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Subsection"], CellMargins -> {{50, 3.}, {5., 10.}}, 
       FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Subsubsection"], CellMargins -> {{50, 3.}, {8., 12.}}, 
       CounterAssignments -> {{"Subsubsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}, {
         "ItemRomanNumbered", 0}}, FontSize -> 15, FontWeight -> "Bold", 
       FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> GrayLevel[
         Rational[4, 15]]], 
      Cell[
       StyleData["Subsubsubsection"], CellMargins -> {{50, 3.}, {2., 10.}}, 
       CounterAssignments -> {{"Subsubsubsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}, {
         "ItemRomanNumbered", 0}}, FontWeight -> "Bold", FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Subsubsubsubsection"], CellMargins -> {{50, 3.}, {2., 10.}},
        FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellMargins -> {{27, 0}, {0, 25}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False], 
         
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "TitleGraphic", StyleDefinitions -> StyleData["WolframULogo"]], 
          StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
          CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
          LineSpacing -> {1, 4}, CounterIncrements -> "Title", 
          CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
            "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
            "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
            "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, 
          FontTracking -> -0.5], 
         Cell[
          StyleData[
          "TitleGraphic", "SlideShow", StyleDefinitions -> 
           StyleData["TitleGraphic"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
           StyleData["TitleGraphic", "SlideShow"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["TitleGraphic", "SlideShow"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["TitleGraphic", "SlideShow"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Content", "Section"], 
      Cell[
       StyleData["Author"], CellMargins -> {{27, Inherited}, {0, 2}}, 
       FontWeight -> "Thin", FontSlant -> "Italic"], 
      Cell[
       StyleData["Affiliation"], CellMargins -> {{27, Inherited}, {0, 2}}, 
       FontWeight -> "Thin", FontSlant -> "Italic"], 
      Cell[
       StyleData["Text"], CellMargins -> {{50, 10.}, {7., 8.}}, FontColor -> 
       GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData[
       "OpenCollapsedSection", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{27, Inherited}, {8, 10}}, MenuSortingValue -> 10000, 
       FontSize -> 11], 
      Cell[
       StyleData["CodeText"], CellMargins -> {{50, 10.}, {3., 15.}}], 
      Cell[
       StyleData["Item"], CellDingbat -> 
       StyleBox["\[FilledSmallCircle]", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["Subitem"], CellDingbat -> 
       StyleBox["\[FilledSmallCircle]", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["Subsubitem"], CellDingbat -> 
       StyleBox["\[FilledSmallCircle]", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], 
       StyleKeyMapping -> {
        "Tab" -> "Subsubsubitem", "*" -> "Subsubsubitem", "Backspace" -> 
         "Subitem", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Subitem"}, 
       FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["Subsubsubitem"], CellDingbat -> 
       StyleBox[
        "\[FilledSmallCircle]", Alignment -> Baseline, FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], 
       CellMargins -> {{153, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
       StyleKeyMapping -> {
        "Backspace" -> 
         "Subsubitem", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Subsubitem"}, 
       CellGroupingRules -> {"ItemGrouping", 100}, CellFrameLabelMargins -> 4,
        CounterIncrements -> "Subsubsubitem", MenuSortingValue -> 1630, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["ItemNumbered"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubitemNumbered"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubitemNumbered"], 
       StyleKeyMapping -> {
        "Tab" -> "SubsubsubitemNumbered", "Backspace" -> 
         "SubitemNumbered", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "SubitemNumbered"}, 
       FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubsubitemNumbered"], CellDingbat -> Cell[
         TextData[{
           CounterBox["ItemNumbered"], ".", 
           CounterBox["SubitemNumbered"], ".", 
           CounterBox["SubsubitemNumbered"], ".", 
           CounterBox["SubsubsubitemNumbered"], "."}], FontWeight -> "Bold"], 
       CellMargins -> {{153, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
       StyleKeyMapping -> {
        "Backspace" -> 
         "SubsubitemNumbered", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> 
         "SubsubitemNumbered"}, CellGroupingRules -> {"ItemGrouping", 100}, 
       CellFrameLabelMargins -> 4, CounterIncrements -> 
       "SubsubsubitemNumbered", MenuSortingValue -> 1630, FontFamily -> 
       "Source Sans Pro", FontSize -> 12], 
      Cell[
       StyleData["ItemParagraph"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubitemParagraph"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubitemParagraph"], 
       StyleKeyMapping -> {
        "Tab" -> "SubsubsubitemParagraph", "Backspace" -> 
         "SubitemParagraph", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "SubitemParagraph"}, 
       FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubsubitemParagraph"], 
       CellMargins -> {{153, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
       StyleKeyMapping -> {
        "Backspace" -> 
         "SubsubitemParagraph", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> 
         "SubsubitemParagraph"}, CellGroupingRules -> {"ItemGrouping", 100}, 
       CellFrameLabelMargins -> 4, CounterIncrements -> "Subsubsubitem", 
       MenuSortingValue -> 1630, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontColor -> GrayLevel[0.2]], 
      Cell[
       StyleData[
       "ItemRomanNumbered", StyleDefinitions -> StyleData["ItemNumbered"]], 
       CellDingbat -> Cell[
         TextData[{
           CounterBox["ItemRomanNumbered", CounterFunction -> RomanNumeral], 
           "."}], FontWeight -> Bold], CounterIncrements -> 
       "ItemRomanNumbered"], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.8],
        FontFamily -> "Source Sans Pro", FontColor -> GrayLevel[0.360784], 
       Background -> GrayLevel[0.964706]], 
      Cell[
       StyleData["AuthorNote", StyleDefinitions -> StyleData["Text"]], 
       CellDingbat -> 
       StyleBox[
        "Author note:", "Text", FontSlant -> "Italic", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], Alignment -> Baseline], FontSlant -> "Italic",
        FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["HintHeader", StyleDefinitions -> StyleData["Text"]], 
       ShowGroupOpener -> True, GroupOpenerInsideFrame -> False, 
       CellGroupingRules -> {"SectionGrouping", 80}, PageBreakBelow -> False, 
       FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Hint", StyleDefinitions -> StyleData["Text"]], CellFrame -> 
       True, Background -> RGBColor[
         Rational[173, 255], 
         Rational[433, 510], 
         Rational[421, 510]]], 
      Cell[
       StyleData["ExperimentalInput", StyleDefinitions -> StyleData["Input"]],
        Editable -> True, CellFrame -> True, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       CellFrameColor -> RGBColor[
         Rational[91, 255], 
         Rational[178, 255], 
         Rational[166, 255]], CellFrameLabels -> {{
          Cell[
           BoxData[
            RotationBox["Experimental", BoxRotation -> 1.5708]], "Text", 
           FontSize -> 10, FontColor -> RGBColor[
             Rational[91, 255], 
             Rational[178, 255], 
             Rational[166, 255]]], None}, {None, None}}], 
      Cell[
       StyleData["WolframLanguageLogo"], FontColor -> 
       RGBColor[0.09, 0.16, 0.25]], 
      Cell[
       StyleData["Link"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["HyperLink"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["FunctionLink"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["HyperlinkActionNew"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["HyperlinkActive"], FontColor -> RGBColor[
         Rational[91, 255], 
         Rational[178, 255], 
         Rational[166, 255]]], 
      Cell[
       StyleData["CYUButton", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], FrameBoxOptions -> {Background -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]]}], 
      Cell[
       StyleData["HintButton", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], FrameBoxOptions -> {Background -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]]}], 
      Cell[
       StyleData["SolutionButton", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], FrameBoxOptions -> {Background -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]]}], 
      Cell[
       StyleData["CYUButtonActive", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], 
       FrameBoxOptions -> {
        Background -> RGBColor[1, 0.4, 0], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[1, 0.4, 0]}], 
      Cell[
       StyleData["HintButtonActive", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], 
       FrameBoxOptions -> {
        Background -> RGBColor[1, 0.4, 0], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[1, 0.4, 0]}], 
      Cell[
       StyleData[
       "SolutionButtonActive", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], 
       FrameBoxOptions -> {
        Background -> RGBColor[1, 0.4, 0], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[1, 0.4, 0]}]}, Closed]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X ARM (64-bit) (July 16, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"9eb62619-e744-430e-aa3e-ab4f3fda0b45"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "CYU"->{
  Cell[77389, 2145, 6409, 117, 355, "Text",ExpressionUUID->"15103e3c-0980-4f18-a5c1-9bde27105aee",
   CellTags->"CYU"],
  Cell[153890, 4215, 18332, 343, 704, "Text",ExpressionUUID->"8436c709-9cb7-4366-abf5-5ced428b4299",
   CellTags->"CYU"],
  Cell[180518, 4831, 9164, 180, 364, "Text",ExpressionUUID->"9da70bbb-2584-4613-b6b6-77098b99a6a8",
   CellTags->"CYU"],
  Cell[191277, 5068, 6058, 118, 290, "Text",ExpressionUUID->"758e8553-7111-4aac-bdf3-26a2e1c3a42d",
   CellTags->"CYU"],
  Cell[248601, 6404, 9222, 176, 492, "Text",ExpressionUUID->"54613259-e0f2-4ba9-87ba-0f61f6af7389",
   CellTags->"CYU"],
  Cell[320550, 8053, 9535, 181, 397, "Text",ExpressionUUID->"64df4596-bb93-451f-960f-4e8b71d3e9db",
   CellTags->"CYU"],
  Cell[336300, 8439, 1620, 39, 99, "Text",ExpressionUUID->"b4c6be44-e825-4308-a377-3295fd0d4a59",
   CellTags->"CYU"],
  Cell[337923, 8480, 2758, 74, 367, "Text",ExpressionUUID->"8bed64ee-2383-4174-aa49-75646c7cd18f",
   CellTags->"CYU"],
  Cell[424980, 10674, 2216, 50, 99, "Text",ExpressionUUID->"e93fa68a-d6b2-44a8-b6fb-b60ce531d3fb",
   CellTags->"CYU"],
  Cell[427199, 10726, 3356, 88, 452, "Text",ExpressionUUID->"3b953712-fcaf-4972-b470-d25aa5be9bd9",
   CellTags->"CYU"],
  Cell[430765, 10824, 2360, 53, 99, "Text",ExpressionUUID->"9cfb37dd-6aa2-4350-858e-b256b90a6ed4",
   CellTags->"CYU"],
  Cell[433128, 10879, 3244, 82, 99, "Text",ExpressionUUID->"de85ff0b-765b-4ee1-80f5-8f865e552de6",
   CellTags->"CYU"]},
 "RuleDelayed"->{
  Cell[151054, 4124, 916, 25, 83, "Text",ExpressionUUID->"b560344a-06a4-475f-ad9f-097075ee1879",
   CellTags->"RuleDelayed"]},
 "_?"->{
  Cell[242498, 6189, 342, 9, 83, "Text",ExpressionUUID->"4bdfe91d-c6f3-4531-93db-1d90cfe45b02",
   CellTags->{"_?", "PatternTest"}],
  Cell[242843, 6200, 317, 11, 74, "Program",ExpressionUUID->"b1f2bc58-318a-4717-9147-220acdb4e679",
   CellTags->{"_?", "PatternTest"}],
  Cell[246490, 6327, 308, 10, 72, "Program",ExpressionUUID->"cd0dc113-b859-4654-b52a-622c234ee8a5",
   CellTags->{"_?", "PatternTest"}]},
 "PatternTest"->{
  Cell[242498, 6189, 342, 9, 83, "Text",ExpressionUUID->"4bdfe91d-c6f3-4531-93db-1d90cfe45b02",
   CellTags->{"_?", "PatternTest"}],
  Cell[242843, 6200, 317, 11, 74, "Program",ExpressionUUID->"b1f2bc58-318a-4717-9147-220acdb4e679",
   CellTags->{"_?", "PatternTest"}],
  Cell[246490, 6327, 308, 10, 72, "Program",ExpressionUUID->"cd0dc113-b859-4654-b52a-622c234ee8a5",
   CellTags->{"_?", "PatternTest"}]},
 "Exercises"->{
  Cell[332342, 8309, 160, 3, 46, "ItemNumbered",ExpressionUUID->"e6f03e9a-8939-49e4-a49e-db2be7d7981b",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[332505, 8314, 154, 3, 50, "Text",ExpressionUUID->"65b6d0e0-fd5b-4d27-98bc-2e856f85b997",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[332662, 8319, 672, 19, 44, "Input",ExpressionUUID->"18cddd51-65ab-4865-a5f7-d4b1ea142631",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[333337, 8340, 465, 12, 50, "Text",ExpressionUUID->"4a2b4de5-b9c5-422b-ab82-25ab2b0fc27b",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[333805, 8354, 199, 5, 44, "Input",ExpressionUUID->"195c5378-e3fb-4735-ad8f-04c36b89970f",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334007, 8361, 200, 5, 44, "Input",ExpressionUUID->"6daf12d9-4890-491b-9e90-4d445ffabf32",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334210, 8368, 200, 5, 44, "Input",ExpressionUUID->"f018c842-ffd7-41ef-8d8a-e81a8d6b9eb8",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334413, 8375, 201, 5, 44, "Input",ExpressionUUID->"ca407bce-9680-4fc1-8487-890a76900097",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334617, 8382, 230, 6, 44, "Input",ExpressionUUID->"1335fca8-918f-4578-962f-83592c18e36e",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334850, 8390, 255, 7, 44, "Input",ExpressionUUID->"df9a12c5-3deb-45be-b8e4-daa149eb2d04",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[335108, 8399, 229, 6, 44, "Input",ExpressionUUID->"60d746e6-ed54-4da0-a5c2-4a87b550a799",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[335362, 8409, 319, 8, 74, "Input",ExpressionUUID->"770d8de1-98ca-4473-b506-c96d814a59b3",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[335684, 8419, 601, 17, 50, "Output",ExpressionUUID->"2404787f-8fdd-4120-8635-072f2072df3e",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[342137, 8613, 157, 3, 46, "ItemNumbered",ExpressionUUID->"464201b6-8233-46b4-b632-21dbd73a34ed",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[342297, 8618, 206, 6, 50, "Text",ExpressionUUID->"4b310bd5-1fd0-4a63-95ec-d5a2d1b4edee",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[342506, 8626, 510, 15, 44, "Input",ExpressionUUID->"329295cc-7447-49ee-968b-16643dec93e2",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343019, 8643, 479, 12, 83, "Text",ExpressionUUID->"f4a4b215-199d-4599-9f9c-90987fd64e39",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343523, 8659, 199, 4, 44, "Input",ExpressionUUID->"2f8ae74b-f81e-46c3-bd8a-6d4b2202d3e8",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343725, 8665, 152, 3, 50, "Output",ExpressionUUID->"5ccb15dd-f78a-4fd0-b825-8b30298f7d85",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343892, 8671, 162, 3, 50, "Text",ExpressionUUID->"0bb403b3-663f-4bfc-a26a-4fa3dc81a743",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[344079, 8678, 193, 4, 44, "Input",ExpressionUUID->"dbcb838d-255c-4378-a6c4-adf9afc4f4cb",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[344275, 8684, 17629, 401, 366, "Output",ExpressionUUID->"92e52197-e9e3-4c91-a138-d784ad8123f2",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[423688, 10631, 167, 3, 50, "Text",ExpressionUUID->"95d7c5dc-c6ac-4435-abd5-f4f6f420af29",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[423858, 10636, 175, 3, 50, "Text",ExpressionUUID->"2b446d4e-edc0-479a-8cdf-431ca2eef1af",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[430558, 10816, 204, 6, 50, "Text",ExpressionUUID->"031861ba-dc17-4d6c-96a1-9e3d67d85c19",
   CellTags->{"Exercises", "Tick Data"}]},
 "Pattern Matching"->{
  Cell[332342, 8309, 160, 3, 46, "ItemNumbered",ExpressionUUID->"e6f03e9a-8939-49e4-a49e-db2be7d7981b",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[332505, 8314, 154, 3, 50, "Text",ExpressionUUID->"65b6d0e0-fd5b-4d27-98bc-2e856f85b997",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[332662, 8319, 672, 19, 44, "Input",ExpressionUUID->"18cddd51-65ab-4865-a5f7-d4b1ea142631",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[333337, 8340, 465, 12, 50, "Text",ExpressionUUID->"4a2b4de5-b9c5-422b-ab82-25ab2b0fc27b",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[333805, 8354, 199, 5, 44, "Input",ExpressionUUID->"195c5378-e3fb-4735-ad8f-04c36b89970f",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334007, 8361, 200, 5, 44, "Input",ExpressionUUID->"6daf12d9-4890-491b-9e90-4d445ffabf32",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334210, 8368, 200, 5, 44, "Input",ExpressionUUID->"f018c842-ffd7-41ef-8d8a-e81a8d6b9eb8",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334413, 8375, 201, 5, 44, "Input",ExpressionUUID->"ca407bce-9680-4fc1-8487-890a76900097",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334617, 8382, 230, 6, 44, "Input",ExpressionUUID->"1335fca8-918f-4578-962f-83592c18e36e",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[334850, 8390, 255, 7, 44, "Input",ExpressionUUID->"df9a12c5-3deb-45be-b8e4-daa149eb2d04",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[335108, 8399, 229, 6, 44, "Input",ExpressionUUID->"60d746e6-ed54-4da0-a5c2-4a87b550a799",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[335362, 8409, 319, 8, 74, "Input",ExpressionUUID->"770d8de1-98ca-4473-b506-c96d814a59b3",
   CellTags->{"Exercises", "Pattern Matching"}],
  Cell[335684, 8419, 601, 17, 50, "Output",ExpressionUUID->"2404787f-8fdd-4120-8635-072f2072df3e",
   CellTags->{"Exercises", "Pattern Matching"}]},
 "Tick Data"->{
  Cell[342137, 8613, 157, 3, 46, "ItemNumbered",ExpressionUUID->"464201b6-8233-46b4-b632-21dbd73a34ed",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[342297, 8618, 206, 6, 50, "Text",ExpressionUUID->"4b310bd5-1fd0-4a63-95ec-d5a2d1b4edee",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[342506, 8626, 510, 15, 44, "Input",ExpressionUUID->"329295cc-7447-49ee-968b-16643dec93e2",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343019, 8643, 479, 12, 83, "Text",ExpressionUUID->"f4a4b215-199d-4599-9f9c-90987fd64e39",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343523, 8659, 199, 4, 44, "Input",ExpressionUUID->"2f8ae74b-f81e-46c3-bd8a-6d4b2202d3e8",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343725, 8665, 152, 3, 50, "Output",ExpressionUUID->"5ccb15dd-f78a-4fd0-b825-8b30298f7d85",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[343892, 8671, 162, 3, 50, "Text",ExpressionUUID->"0bb403b3-663f-4bfc-a26a-4fa3dc81a743",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[344079, 8678, 193, 4, 44, "Input",ExpressionUUID->"dbcb838d-255c-4378-a6c4-adf9afc4f4cb",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[344275, 8684, 17629, 401, 366, "Output",ExpressionUUID->"92e52197-e9e3-4c91-a138-d784ad8123f2",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[423688, 10631, 167, 3, 50, "Text",ExpressionUUID->"95d7c5dc-c6ac-4435-abd5-f4f6f420af29",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[423858, 10636, 175, 3, 50, "Text",ExpressionUUID->"2b446d4e-edc0-479a-8cdf-431ca2eef1af",
   CellTags->{"Exercises", "Tick Data"}],
  Cell[430558, 10816, 204, 6, 50, "Text",ExpressionUUID->"031861ba-dc17-4d6c-96a1-9e3d67d85c19",
   CellTags->{"Exercises", "Tick Data"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"CYU", 482715, 11930},
 {"RuleDelayed", 484180, 11955},
 {"_?", 484316, 11958},
 {"PatternTest", 484742, 11965},
 {"Exercises", 485166, 11972},
 {"Pattern Matching", 488778, 12023},
 {"Tick Data", 490702, 12050}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[625, 23, 106, 0, 94, "Subtitle",ExpressionUUID->"beafe8fb-250e-4ed5-af7b-a7667178a427"],
Cell[CellGroupData[{
Cell[756, 27, 93, 0, 136, "Section",ExpressionUUID->"c88abc12-172e-4f40-b4ac-722ef0f5b92a"],
Cell[852, 29, 207, 3, 76, "Item",ExpressionUUID->"265e4368-8c79-486b-a14b-a07095c33d3b"],
Cell[1062, 34, 128, 0, 46, "Item",ExpressionUUID->"c1ae1d4a-18d2-4a6e-b496-67ef1788b420"],
Cell[1193, 36, 161, 3, 46, "Item",ExpressionUUID->"bb7bdcca-ff01-4a5b-9f52-b47c0b685e96"],
Cell[CellGroupData[{
Cell[1379, 43, 88, 0, 60, "Subsection",ExpressionUUID->"e53e344c-3a6c-40fe-9f49-35bef152641a"],
Cell[1470, 45, 128, 0, 46, "Item",ExpressionUUID->"f223a17a-b8a0-40d8-a17f-c612be6cfc6f"],
Cell[1601, 47, 107, 0, 46, "Item",ExpressionUUID->"4867178f-c9da-4493-84d4-00633eadfcb6"],
Cell[1711, 49, 106, 0, 46, "Item",ExpressionUUID->"bcac4b35-fe92-4bfe-bf75-a5d36b1771bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854, 54, 82, 0, 60, "Subsection",ExpressionUUID->"aeea3c0a-5991-47a5-b870-76e97bc81bb5"],
Cell[1939, 56, 117, 0, 46, "Item",ExpressionUUID->"835de748-1c4f-4ef9-a0e6-d9c93a1c3a00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2093, 61, 85, 0, 60, "Subsection",ExpressionUUID->"18c66b57-a328-4b5f-9c31-6377df5096bd"],
Cell[2181, 63, 86, 0, 46, "Item",ExpressionUUID->"b6191536-1720-431d-974a-05ebaf4657cd"],
Cell[2270, 65, 85, 0, 46, "Item",ExpressionUUID->"b5ed7fea-215d-45c2-a260-881400fa2e96"],
Cell[2358, 67, 91, 0, 46, "Item",ExpressionUUID->"3bbdde1a-0fd3-4d80-97be-503674565ada"],
Cell[2452, 69, 91, 0, 46, "Item",ExpressionUUID->"2fff5cf5-1d4e-4209-9209-e568ac4a09f9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2592, 75, 94, 0, 136, "Section",ExpressionUUID->"b19de9d8-daa4-4bc1-afe2-b0770e3aa256"],
Cell[2689, 77, 164, 3, 50, "Text",ExpressionUUID->"aff71f32-74ee-4a64-98e3-91336695fddf"],
Cell[CellGroupData[{
Cell[2878, 84, 107, 0, 60, "Subsection",ExpressionUUID->"e564f91f-ea27-44da-852c-20a10caf3b1a"],
Cell[2988, 86, 248, 4, 83, "Text",ExpressionUUID->"595460d3-642f-4a38-9005-4c4798931138"],
Cell[CellGroupData[{
Cell[3261, 94, 134, 3, 44, "Input",ExpressionUUID->"52d8f228-0d1f-40ed-9906-cb7431df2039"],
Cell[3398, 99, 111, 2, 50, "Output",ExpressionUUID->"d70127e1-983b-4e31-9b39-e49e4afa920e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3546, 106, 112, 2, 44, "Input",ExpressionUUID->"bc5da8a7-c96e-4070-837a-5d4fd21ae416"],
Cell[3661, 110, 111, 2, 50, "Output",ExpressionUUID->"baaf521e-f4df-492b-8dcf-93596c7d018d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3809, 117, 157, 4, 44, "Input",ExpressionUUID->"3a162ee5-f85c-4ac2-8ba6-7fc0a1152633"],
Cell[3969, 123, 112, 2, 50, "Output",ExpressionUUID->"a363df60-bfb8-4439-bbf2-b113c55cbae6"]
}, Open  ]],
Cell[4096, 128, 460, 12, 83, "Text",ExpressionUUID->"d153c28d-c2b5-46de-b689-632461ba7de1"],
Cell[CellGroupData[{
Cell[4581, 144, 129, 3, 44, "Input",ExpressionUUID->"094e687d-24b9-4019-811b-37d9f9acdc15"],
Cell[4713, 149, 9875, 250, 270, "Output",ExpressionUUID->"802cbf52-f836-4069-9d42-c87f70bc3e94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14625, 404, 134, 3, 44, "Input",ExpressionUUID->"78308fac-eb6d-4fbf-a304-f707be67582c"],
Cell[14762, 409, 111, 2, 50, "Output",ExpressionUUID->"a3c6a8be-7991-4cd9-9c6a-b44e4777e3cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14910, 416, 129, 3, 44, "Input",ExpressionUUID->"17663035-cb86-4971-a401-45234f3de57a"],
Cell[15042, 421, 9875, 250, 270, "Output",ExpressionUUID->"0a957fb0-f6d9-4d65-8a38-4e5acc1e9ed8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24966, 677, 109, 0, 60, "Subsection",ExpressionUUID->"2482bda2-dda9-4c8c-ab7d-06bcd601563d"],
Cell[25078, 679, 129, 0, 50, "Text",ExpressionUUID->"c3f9640b-ea2a-476f-99d9-74b17368c35e"],
Cell[CellGroupData[{
Cell[25232, 683, 239, 7, 44, "Input",ExpressionUUID->"707203b7-d1e5-4009-96c2-189e64e119d0"],
Cell[25474, 692, 167, 4, 50, "Output",ExpressionUUID->"7b47b68b-9629-4973-af9e-c63b5d1fdd80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25678, 701, 127, 3, 44, "Input",ExpressionUUID->"bd609708-ab96-4fca-a2c5-da28eb3907bf"],
Cell[25808, 706, 10010, 254, 270, "Output",ExpressionUUID->"010190c7-0e6f-41c3-9a1f-e822003745e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35867, 966, 101, 0, 60, "Subsection",ExpressionUUID->"2ea54558-2a85-46c0-8ee2-5d550dbe4b52"],
Cell[35971, 968, 128, 0, 50, "Text",ExpressionUUID->"8c50394c-2b64-4821-821f-9fe37d2fa60b"],
Cell[CellGroupData[{
Cell[36124, 972, 226, 7, 44, "Input",ExpressionUUID->"0923827d-3486-4a39-a5f6-587dd68edaa7"],
Cell[36353, 981, 156, 4, 50, "Output",ExpressionUUID->"022ec679-4d32-4a36-b357-263a62f32e1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36546, 990, 450, 12, 44, "Input",ExpressionUUID->"dc7411dc-fa91-496a-9abb-e2eefaa95ed6"],
Cell[36999, 1004, 418, 11, 50, "Output",ExpressionUUID->"bed6efb1-0c8c-4e9f-a1c7-73cb16d32119"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37454, 1020, 148, 3, 44, "Input",ExpressionUUID->"e5ae1526-8c2c-4ea9-99a5-98d6842667c8"],
Cell[37605, 1025, 683, 19, 115, "Output",ExpressionUUID->"4b27633c-06dc-42b2-a464-966d11d28bad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38325, 1049, 188, 5, 44, "Input",ExpressionUUID->"777b4fed-440a-42c6-a8e6-61c0b97d9ba3"],
Cell[38516, 1056, 192, 5, 50, "Output",ExpressionUUID->"7808bd6c-4b8c-4682-95da-c9b0b4c40297"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38745, 1066, 364, 11, 74, "Input",ExpressionUUID->"2e24e400-0449-4a98-9dfd-699d47435500"],
Cell[39112, 1079, 659, 19, 115, "Output",ExpressionUUID->"6b782e33-f60d-49e7-b28a-9ad19cc9ceb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39808, 1103, 364, 11, 74, "Input",ExpressionUUID->"9ec57af2-3ec2-4565-90f9-84d32d6fc32e"],
Cell[40175, 1116, 643, 19, 115, "Output",ExpressionUUID->"67e4fc86-37be-4574-8988-a61dcd6373c8"]
}, Open  ]],
Cell[40833, 1138, 174, 3, 50, "Text",ExpressionUUID->"e0d87556-5547-4d77-82e0-4fe8da6d2d97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41044, 1146, 105, 0, 60, "Subsection",ExpressionUUID->"97758dbe-53e2-4e13-86ca-41ff7e69cb6c"],
Cell[41152, 1148, 119, 0, 50, "Text",ExpressionUUID->"52190be8-0ebb-4a31-b806-75b0722bad27"],
Cell[41274, 1150, 211, 5, 44, "Input",ExpressionUUID->"8678d18a-8d23-4194-8c68-7282cef3bd3a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41534, 1161, 107, 0, 136, "Section",ExpressionUUID->"b974041b-077c-4f24-b973-49d22843e3c1"],
Cell[41644, 1163, 244, 4, 83, "Text",ExpressionUUID->"bf1d32ad-19b9-4a07-88eb-50bb7bcb5391"],
Cell[41891, 1169, 958, 19, 116, "Text",ExpressionUUID->"84a976ac-092a-4a31-9c10-901f6dcc3ab8"],
Cell[CellGroupData[{
Cell[42874, 1192, 97, 0, 60, "Subsection",ExpressionUUID->"4db4bea7-6f4c-4190-baed-57c785532e85"],
Cell[42974, 1194, 99, 0, 50, "Text",ExpressionUUID->"70268ff2-636b-4ac1-98da-bc5931bbe448"],
Cell[43076, 1196, 381, 11, 72, "Program",ExpressionUUID->"e5ae98bd-1a1b-4e04-b05a-f7bf8af0cdfe"],
Cell[CellGroupData[{
Cell[43482, 1211, 132, 3, 44, "Input",ExpressionUUID->"a8d7fe41-2e16-41d8-ae94-41fe73243360"],
Cell[43617, 1216, 111, 2, 50, "Output",ExpressionUUID->"57d6f969-f488-4095-b6a0-6606d0d655af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43765, 1223, 155, 4, 44, "Input",ExpressionUUID->"4b696d16-c638-4e2f-a0a2-e8fd837d13dc"],
Cell[43923, 1229, 111, 2, 50, "Output",ExpressionUUID->"5d135ca2-b2fb-45d1-842b-b0c28fa0e673"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44083, 1237, 95, 0, 60, "Subsection",ExpressionUUID->"25f889c6-1d83-4752-bcac-3b0ce90e4314"],
Cell[44181, 1239, 99, 0, 50, "Text",ExpressionUUID->"f2b12ab3-056b-42de-b2a1-f0132071b71d"],
Cell[44283, 1241, 387, 11, 72, "Program",ExpressionUUID->"172894ad-b4a5-4605-a9bd-9496c2aa7c12"],
Cell[44673, 1254, 156, 4, 44, "Input",ExpressionUUID->"9f00197a-e0d1-4648-b5e2-0bfc1644d8d5"],
Cell[CellGroupData[{
Cell[44854, 1262, 110, 2, 44, "Input",ExpressionUUID->"9c7d27a3-e246-48a5-96ec-3e1d1960676b"],
Cell[44967, 1266, 134, 3, 50, "Output",ExpressionUUID->"035bdc18-703a-4760-9c1f-9bd0c8f20e14"]
}, Open  ]],
Cell[45116, 1272, 150, 4, 44, "Input",ExpressionUUID->"fd64d9c6-e035-4cbb-9441-283741502b56"],
Cell[CellGroupData[{
Cell[45291, 1280, 110, 2, 44, "Input",ExpressionUUID->"fe1153d7-8c8c-44f6-92dc-90d61f590aaa"],
Cell[45404, 1284, 111, 2, 50, "Output",ExpressionUUID->"272905b4-13a4-4f20-a06b-af6bde4548e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45552, 1291, 152, 3, 44, "Input",ExpressionUUID->"6cdc5c14-fd06-4c8a-9e25-055c6b066d76"],
Cell[45707, 1296, 111, 2, 50, "Output",ExpressionUUID->"6b222655-44b4-4e13-b3c1-0fcab4d98e41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45855, 1303, 110, 2, 44, "Input",ExpressionUUID->"5f7e4bad-121d-45ea-a6b1-28be537a97d8"],
Cell[45968, 1307, 111, 2, 50, "Output",ExpressionUUID->"482c5531-a5da-482c-94d1-9e03472f2f6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46116, 1314, 127, 3, 44, "Input",ExpressionUUID->"c64d7750-f845-404e-bcfd-9f278ac144e5"],
Cell[46246, 1319, 8607, 219, 178, "Output",ExpressionUUID->"d23c811a-77d7-408f-a3d0-26b525d3c386"]
}, Open  ]],
Cell[54868, 1541, 81, 0, 44, "Input",ExpressionUUID->"689ca1d1-4441-433f-928f-5a9b09487674"],
Cell[CellGroupData[{
Cell[54974, 1545, 100, 1, 44, "Input",ExpressionUUID->"f357f946-a50e-48a0-9181-03204bd8e83d"],
Cell[55077, 1548, 8607, 219, 178, "Output",ExpressionUUID->"7e592deb-3864-45d8-a288-91488ac235a5"]
}, Open  ]],
Cell[63699, 1770, 194, 4, 44, "Input",ExpressionUUID->"df745bee-c124-46a3-93de-184118a15903"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63942, 1780, 107, 0, 136, "Section",ExpressionUUID->"e8c1b715-b577-4433-9c86-11af2478baf1"],
Cell[64052, 1782, 131, 0, 50, "Text",ExpressionUUID->"dd4bd3ef-394f-4475-bdaa-626522fcc0ac"],
Cell[64186, 1784, 169, 3, 50, "Text",ExpressionUUID->"a0e4243a-5f65-43a3-acca-f965d204d5cb"],
Cell[CellGroupData[{
Cell[64380, 1791, 167, 4, 44, "Input",ExpressionUUID->"230e6fb7-8005-4d33-a0ed-7f29d7e8a539"],
Cell[64550, 1797, 130, 2, 50, "Output",ExpressionUUID->"a3170780-381e-46dc-bfb4-fa07d64613f2"]
}, Open  ]],
Cell[64695, 1802, 268, 6, 83, "Text",ExpressionUUID->"5a3284e6-95ab-45b0-8f07-363a12dd82e5"],
Cell[64966, 1810, 191, 5, 44, "Input",ExpressionUUID->"3327dcb3-fed1-4d71-92f4-62d31b83526e"],
Cell[CellGroupData[{
Cell[65182, 1819, 229, 6, 44, "Input",ExpressionUUID->"eaab81fa-05c7-47c8-91e4-4fcdf64460f0"],
Cell[65414, 1827, 230, 6, 50, "Output",ExpressionUUID->"9ef9dea6-d0bf-4fa5-8885-a92fdc490fe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65681, 1838, 130, 3, 44, "Input",ExpressionUUID->"a8c1d0ee-0b19-4cd4-9a3a-e794f05552a8"],
Cell[65814, 1843, 9929, 251, 270, "Output",ExpressionUUID->"c1ceb1c3-b0a9-4222-bc82-2d814ec389c1"]
}, Open  ]],
Cell[75758, 2097, 81, 0, 44, "Input",ExpressionUUID->"298a4fae-00ea-48c2-9ee0-3ffbf03a19b0"],
Cell[75842, 2099, 248, 4, 83, "Text",ExpressionUUID->"36fa4596-015e-4c80-8afd-38b556255e13"],
Cell[76093, 2105, 168, 4, 44, "Input",ExpressionUUID->"ec16c55e-914e-4055-ba6e-2bcae45f3b82"],
Cell[76264, 2111, 304, 7, 83, "Text",ExpressionUUID->"f239a27d-b535-41ae-8071-76daf1c70cf1"],
Cell[CellGroupData[{
Cell[76593, 2122, 191, 5, 44, "Input",ExpressionUUID->"e1ebf88f-c90d-44ea-916b-d4cae43b5837"],
Cell[76787, 2129, 228, 6, 50, "Output",ExpressionUUID->"6c603201-2764-4440-a352-e5bf4046a5b3"]
}, Open  ]],
Cell[77030, 2138, 356, 5, 116, "Text",ExpressionUUID->"6d4e3c4b-37b8-43d4-99b4-ffad1ebd34a3"],
Cell[77389, 2145, 6409, 117, 355, "Text",ExpressionUUID->"15103e3c-0980-4f18-a5c1-9bde27105aee",
 CellTags->"CYU"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83835, 2267, 93, 0, 136, "Section",ExpressionUUID->"1bc3d71c-fd28-4228-9a45-c24de01aaeed"],
Cell[83931, 2269, 263, 4, 83, "Text",ExpressionUUID->"18426b0b-9ce7-46cb-99cc-d10ba3fa4681"],
Cell[84197, 2275, 96, 0, 50, "Text",ExpressionUUID->"415fbe74-7b33-4ea3-b021-d98c8800d823"],
Cell[84296, 2277, 387, 11, 72, "Program",ExpressionUUID->"d7a70799-96e1-45fc-9997-fca6b4be1f0c"],
Cell[84686, 2290, 322, 5, 83, "Text",ExpressionUUID->"f6f34197-228f-4684-9b0a-d9cec1b8c65b"],
Cell[85011, 2297, 319, 5, 83, "Text",ExpressionUUID->"549f055d-6aea-40ae-b721-53735445a9df"],
Cell[85333, 2304, 209, 6, 44, "Input",ExpressionUUID->"a999e707-815e-4835-aaf2-2d2322e082bf"],
Cell[85545, 2312, 805, 24, 116, "Text",ExpressionUUID->"31a98917-5376-4b5b-943a-7432551090fc"],
Cell[CellGroupData[{
Cell[86375, 2340, 137, 3, 44, "Input",ExpressionUUID->"c8567424-8f8f-448e-8571-67be7be4ccac"],
Cell[86515, 2345, 132, 3, 65, "Output",ExpressionUUID->"0a583b10-932e-44a0-bb06-e291c34037f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86684, 2353, 137, 3, 44, "Input",ExpressionUUID->"0e58d5ea-1242-4b38-ba61-0bc18925772c"],
Cell[86824, 2358, 155, 4, 66, "Output",ExpressionUUID->"4e41012f-2758-4566-9dc3-a5dc6c216f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87016, 2367, 127, 3, 44, "Input",ExpressionUUID->"37ea41dd-e395-44ae-87cc-ff3de8a71cd2"],
Cell[87146, 2372, 10078, 256, 280, "Output",ExpressionUUID->"c50ea182-3760-4281-ae72-35939681a066"]
}, Open  ]],
Cell[97239, 2631, 206, 3, 83, "Text",ExpressionUUID->"71c4cc76-aba0-4d7e-87cb-3dd0000e2cf0"],
Cell[CellGroupData[{
Cell[97470, 2638, 396, 11, 105, "Input",ExpressionUUID->"3dcee2e5-26c0-4bce-9ad4-e25ecfb40303"],
Cell[97869, 2651, 149, 3, 50, "Output",ExpressionUUID->"37762cb8-e5b7-402c-a9a6-a70cd38b05f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98055, 2659, 128, 3, 44, "Input",ExpressionUUID->"74b908b1-ebd8-4ec2-8643-de1685f79dc7"],
Cell[98186, 2664, 10164, 258, 270, "Output",ExpressionUUID->"661b74ee-80b8-4f3a-bead-44d6ef597a70"]
}, Open  ]],
Cell[108365, 2925, 483, 13, 83, "Text",ExpressionUUID->"222d6044-6fd5-46c3-853d-9b28e4ca1187"],
Cell[108851, 2940, 141, 3, 44, "Input",ExpressionUUID->"1ee639e8-1a9e-4b1b-a37b-19d6f4cfd719"],
Cell[CellGroupData[{
Cell[109017, 2947, 128, 3, 44, "Input",ExpressionUUID->"2172498c-4975-4471-9532-0053bbd976d2"],
Cell[109148, 2952, 10164, 258, 270, "Output",ExpressionUUID->"81f1b340-a6b3-4158-ba13-47fd9fe25729"]
}, Open  ]],
Cell[119327, 3213, 313, 9, 74, "Input",ExpressionUUID->"c55c3e7b-7a46-426b-966f-9aad6f1aa008"],
Cell[119643, 3224, 128, 3, 44, "Input",ExpressionUUID->"b6e56e1e-2d9e-4478-a824-2514198f4fd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119808, 3232, 110, 0, 136, "Section",ExpressionUUID->"2ae6776c-4996-488d-84bd-c9c9ae2025cd"],
Cell[119921, 3234, 377, 5, 116, "Text",ExpressionUUID->"12729dc5-09ef-424f-a862-1177a1799d47"],
Cell[120301, 3241, 558, 17, 105, "Input",ExpressionUUID->"856a81d8-0fe1-49ba-a0de-95ce9ccf34a9"],
Cell[120862, 3260, 158, 3, 50, "Text",ExpressionUUID->"01f03aa9-adac-48fc-a2d9-55e0ca07c780"],
Cell[CellGroupData[{
Cell[121045, 3267, 129, 3, 44, "Input",ExpressionUUID->"48131657-6612-44b9-b83b-31b8a828cc73"],
Cell[121177, 3272, 10702, 268, 373, "Output",ExpressionUUID->"45d76fb0-6437-4bc0-8d64-d94dd4616a05"]
}, Open  ]],
Cell[131894, 3543, 456, 10, 116, "Text",ExpressionUUID->"36e13bb5-b4d9-479a-8cef-06c7cd0c49ac"],
Cell[CellGroupData[{
Cell[132375, 3557, 139, 3, 44, "Input",ExpressionUUID->"eee3d70e-8135-49bc-a66e-9fff1d402dae"],
Cell[132517, 3562, 111, 2, 50, "Output",ExpressionUUID->"ab158bf2-4983-4032-99d8-ff5c116e98ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132665, 3569, 129, 3, 44, "Input",ExpressionUUID->"f8a3bbcd-c89f-425f-b0a9-59aec90174e1"],
Cell[132797, 3574, 10968, 273, 477, "Output",ExpressionUUID->"bac2e6c2-cf2c-44a6-9ffd-c23491440963"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143802, 3852, 171, 4, 44, "Input",ExpressionUUID->"95a7c0be-12cf-4162-98b2-d689ce4905c4"],
Cell[143976, 3858, 1406, 57, 80, "Output",ExpressionUUID->"071b8371-e88e-4dce-b87d-d648f2dae082"]
}, Open  ]],
Cell[145397, 3918, 143, 3, 44, "Input",ExpressionUUID->"4cffd9da-5649-4b08-9bc5-2ebb82c2e675"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145577, 3926, 94, 0, 136, "Section",ExpressionUUID->"2f4095f2-2d40-4f2e-bd1f-2ddd750b5e86"],
Cell[145674, 3928, 262, 4, 83, "Text",ExpressionUUID->"b2ea4e53-1fd2-45fc-b5c0-7758db856d47"],
Cell[145939, 3934, 217, 3, 83, "Text",ExpressionUUID->"44c739cb-4616-43bd-baba-ad6c3db9a493"],
Cell[CellGroupData[{
Cell[146181, 3941, 99, 0, 60, "Subsection",ExpressionUUID->"938a5514-c6d0-4a4a-8747-d92034b60e29"],
Cell[146283, 3943, 161, 3, 50, "Text",ExpressionUUID->"2334a94b-1824-4679-a36b-d43f4d57f237"],
Cell[146447, 3948, 318, 8, 72, "Program",ExpressionUUID->"06d2cab4-a12b-41d1-b77a-ab8478247968"],
Cell[146768, 3958, 116, 0, 50, "Text",ExpressionUUID->"d704ab0f-7a7d-4ccd-9053-a5825da2f2f3"],
Cell[CellGroupData[{
Cell[146909, 3962, 268, 8, 44, "Input",ExpressionUUID->"562ed336-fa0c-413e-91fc-518dbcfc9cad"],
Cell[147180, 3972, 189, 5, 50, "Output",ExpressionUUID->"55925cad-95da-4966-9650-4a77f1be9772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147406, 3982, 238, 7, 44, "Input",ExpressionUUID->"c15acdf3-414e-41dc-b3ed-126baf424829"],
Cell[147647, 3991, 214, 6, 50, "Output",ExpressionUUID->"9f7fe5e7-e34e-4e89-a68f-d5d6dda4e4fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147898, 4002, 163, 4, 44, "Input",ExpressionUUID->"cdffd734-cd9c-4903-88b7-8e9a4a0f68d9"],
Cell[148064, 4008, 193, 5, 50, "Output",ExpressionUUID->"3935fb70-bdba-4395-879c-a37db936e3a0"]
}, Open  ]],
Cell[148272, 4016, 127, 3, 44, "Input",ExpressionUUID->"f3c8ebaa-78a8-45c8-9375-b4d419683820"],
Cell[CellGroupData[{
Cell[148424, 4023, 334, 9, 74, "Input",ExpressionUUID->"315551f6-a0e9-4766-b9ac-f2fca0cbe06b"],
Cell[148761, 4034, 214, 6, 50, "Output",ExpressionUUID->"5de7ff8f-2e26-4fed-ae8a-af1b2e97808b"],
Cell[148978, 4042, 1725, 69, 86, "Output",ExpressionUUID->"e1abd226-3140-4deb-a1e4-67f206d25da3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150752, 4117, 100, 0, 60, "Subsection",ExpressionUUID->"54a4ff42-6759-4910-9d8e-254b21751bc9"],
Cell[150855, 4119, 196, 3, 50, "Text",ExpressionUUID->"4db489c0-90f5-4559-b2b7-1592daa223d0"],
Cell[151054, 4124, 916, 25, 83, "Text",ExpressionUUID->"b560344a-06a4-475f-ad9f-097075ee1879",
 CellTags->"RuleDelayed"],
Cell[151973, 4151, 182, 3, 50, "Text",ExpressionUUID->"00414b69-6a36-4c83-bd3c-584005ff0f77"],
Cell[CellGroupData[{
Cell[152180, 4158, 257, 7, 44, "Input",ExpressionUUID->"07b76b20-a044-4a9e-a350-1650325936bb"],
Cell[152440, 4167, 251, 6, 50, "Output",ExpressionUUID->"a50f9cce-9862-4bda-8cf8-5632784cf7ec"]
}, Open  ]],
Cell[152706, 4176, 196, 4, 50, "Text",ExpressionUUID->"f2d40aca-81fc-4792-9b4c-de30d5e56e43"],
Cell[CellGroupData[{
Cell[152927, 4184, 269, 7, 44, "Input",ExpressionUUID->"66666669-82fe-43df-90c0-1ac160ee6010"],
Cell[153199, 4193, 256, 6, 50, "Output",ExpressionUUID->"6d697d0b-7c38-4198-93b0-19454a940ce3"]
}, Open  ]],
Cell[153470, 4202, 417, 11, 50, "Text",ExpressionUUID->"626329b1-3f14-47c1-a315-c5779df72b73"],
Cell[153890, 4215, 18332, 343, 704, "Text",ExpressionUUID->"8436c709-9cb7-4366-abf5-5ced428b4299",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172271, 4564, 92, 0, 136, "Section",ExpressionUUID->"15c85fc0-703d-4744-bb88-e0e20597d2c1"],
Cell[172366, 4566, 173, 3, 50, "Text",ExpressionUUID->"ae2891f1-199e-40c4-b14e-13825ddc8618"],
Cell[172542, 4571, 491, 13, 72, "Program",ExpressionUUID->"4c1c5d3b-99ac-4620-b2f7-c03fc25959c6"],
Cell[173036, 4586, 314, 7, 83, "Text",ExpressionUUID->"363b6a3b-8693-46e7-afd0-90256049f1c4"],
Cell[CellGroupData[{
Cell[173375, 4597, 98, 0, 60, "Subsection",ExpressionUUID->"3a1aa400-39f4-4a40-97ba-290075b663f6"],
Cell[173476, 4599, 233, 6, 50, "Text",ExpressionUUID->"8097ce93-3308-47b3-bdda-5855866d0b1e"],
Cell[CellGroupData[{
Cell[173734, 4609, 425, 13, 44, "Input",ExpressionUUID->"d9fe1b8f-b9ea-42b5-831f-01a24337e4b7"],
Cell[174162, 4624, 323, 9, 52, "Output",ExpressionUUID->"b77c330d-ae40-4895-b916-35d04d9fe598"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174534, 4639, 97, 0, 60, "Subsection",ExpressionUUID->"e6dfdb93-f45e-4eda-97a5-a4f716137f7a"],
Cell[174634, 4641, 224, 3, 83, "Text",ExpressionUUID->"ef7d280c-77fa-447e-8e2a-ecae06b5b1a1"],
Cell[CellGroupData[{
Cell[174883, 4648, 425, 13, 44, "Input",ExpressionUUID->"63dfff79-a6cf-4179-813d-e178defd4b1d"],
Cell[175311, 4663, 277, 7, 52, "Output",ExpressionUUID->"81200181-eded-42c9-b146-e8eaf10e3493"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175649, 4677, 89, 0, 136, "Section",ExpressionUUID->"1786121c-6cdf-4483-ba74-b1dad908116d"],
Cell[175741, 4679, 312, 5, 83, "Text",ExpressionUUID->"a53850b3-1ab0-49d5-8fd8-7df3bdd260af"],
Cell[CellGroupData[{
Cell[176078, 4688, 87, 0, 60, "Subsection",ExpressionUUID->"8d27d0b3-6681-4ac3-bf96-d288021fb8fd"],
Cell[176168, 4690, 950, 23, 83, "Text",ExpressionUUID->"8109e63a-0eae-4cc4-ba0d-4976225f219f"],
Cell[CellGroupData[{
Cell[177143, 4717, 94, 0, 58, "Subsubsection",ExpressionUUID->"662e118c-655b-4bc3-83c8-93cbb420b008"],
Cell[177240, 4719, 154, 2, 50, "Text",ExpressionUUID->"d45eb3a7-5745-4f13-9f57-7300db50f846"],
Cell[177397, 4723, 164, 4, 44, "Input",ExpressionUUID->"01d132a3-09f5-4d71-b01a-901d6ef6f3dd"],
Cell[CellGroupData[{
Cell[177586, 4731, 444, 13, 44, "Input",ExpressionUUID->"b793f1ae-4af3-48bc-a267-51d718198578"],
Cell[178033, 4746, 322, 9, 50, "Output",ExpressionUUID->"6b204a92-4aea-4649-a93b-223376f1fe31"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178404, 4761, 98, 0, 58, "Subsubsection",ExpressionUUID->"2c152434-2856-4c55-af2d-b0a41341e43a"],
Cell[178505, 4763, 188, 3, 50, "Text",ExpressionUUID->"fc862a17-15db-4256-affd-c7cd393bdb90"],
Cell[CellGroupData[{
Cell[178718, 4770, 445, 13, 44, "Input",ExpressionUUID->"a17314db-8c3d-4910-a4e5-2b411bb2caff"],
Cell[179166, 4785, 270, 7, 50, "Output",ExpressionUUID->"572dafbd-84a7-4f8e-8b9c-5e1f2c19a41d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179485, 4798, 99, 0, 58, "Subsubsection",ExpressionUUID->"a849ebec-5857-43b1-9719-e43b3be034da"],
Cell[179587, 4800, 194, 3, 50, "Text",ExpressionUUID->"0f4c647b-a1f8-4152-b000-d4f727465c14"],
Cell[CellGroupData[{
Cell[179806, 4807, 446, 13, 44, "Input",ExpressionUUID->"6d11836a-8ea2-4904-a547-a6223081752e"],
Cell[180255, 4822, 248, 6, 50, "Output",ExpressionUUID->"ab7bdc8d-ce0b-42cc-8598-21a0264571de"]
}, Open  ]],
Cell[180518, 4831, 9164, 180, 364, "Text",ExpressionUUID->"9da70bbb-2584-4613-b6b6-77098b99a6a8",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189743, 5018, 88, 0, 136, "Section",ExpressionUUID->"e2d42642-39cc-46f4-9f62-82c75f690661"],
Cell[189834, 5020, 422, 12, 83, "Text",ExpressionUUID->"a0a47a58-bb6a-4a75-b250-7046fe738016"],
Cell[CellGroupData[{
Cell[190281, 5036, 525, 16, 44, "Input",ExpressionUUID->"69a8b956-a333-4dcd-b0e0-1e5ddd7506bd"],
Cell[190809, 5054, 257, 6, 50, "Output",ExpressionUUID->"8baa5f24-2768-4ba8-b579-049682714b46"]
}, Open  ]],
Cell[191081, 5063, 193, 3, 50, "Text",ExpressionUUID->"8712ac81-5397-4a9b-9922-3adce1a2516d"],
Cell[191277, 5068, 6058, 118, 290, "Text",ExpressionUUID->"758e8553-7111-4aac-bdf3-26a2e1c3a42d",
 CellTags->"CYU"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197372, 5191, 94, 0, 136, "Section",ExpressionUUID->"73b73919-7016-4e7e-940e-6c0c5b719679"],
Cell[197469, 5193, 447, 8, 83, "Text",ExpressionUUID->"40369b57-d3c7-40c7-ad85-7a544a95e676"],
Cell[197919, 5203, 178, 3, 50, "Text",ExpressionUUID->"e3b3559d-338e-4b6f-8f1c-6c5b5c61000b"],
Cell[CellGroupData[{
Cell[198122, 5210, 165, 4, 44, "Input",ExpressionUUID->"fa5233e7-66a0-4373-996e-40ffdcbf6716"],
Cell[198290, 5216, 114, 2, 50, "Output",ExpressionUUID->"e4bc8b6e-db16-4944-a083-84184406318c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198441, 5223, 165, 4, 44, "Input",ExpressionUUID->"413a94f1-ffbd-4b8d-a8d0-e5522da600cd"],
Cell[198609, 5229, 114, 2, 50, "Output",ExpressionUUID->"41e6ca0f-db7e-44a8-a2e6-dcebe3a0a434"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198760, 5236, 168, 4, 44, "Input",ExpressionUUID->"6e086b4e-c523-4538-ab23-f88758efab88"],
Cell[198931, 5242, 114, 2, 50, "Output",ExpressionUUID->"294946da-a21b-4deb-8805-2e9991002e03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199082, 5249, 180, 4, 44, "Input",ExpressionUUID->"9206cd1c-72fd-4037-b402-edafe0499201"],
Cell[199265, 5255, 114, 2, 50, "Output",ExpressionUUID->"c5b7a57e-d209-4a4f-8b49-d37f10f16d05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199416, 5262, 1619, 45, 44, "Input",ExpressionUUID->"3779fedf-4810-461e-bd5b-32dc57128085"],
Cell[201038, 5309, 114, 2, 50, "Output",ExpressionUUID->"fffbd113-ec6e-4167-b547-766f81df879e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201189, 5316, 117, 2, 44, "Input",ExpressionUUID->"4f46e995-fb01-48be-a27a-58918bf5e991"],
Cell[201309, 5320, 118, 2, 50, "Output",ExpressionUUID->"2b134645-3268-4aff-ab7c-eae97e178db0"]
}, Open  ]],
Cell[201442, 5325, 82, 0, 44, "Input",ExpressionUUID->"3b579bc3-fe00-4be9-bfed-8ab2c4577f35"],
Cell[CellGroupData[{
Cell[201549, 5329, 1655, 46, 44, "Input",ExpressionUUID->"59d01d2f-2aac-4455-9f5f-36d7a7a20af6"],
Cell[203207, 5377, 115, 2, 50, "Output",ExpressionUUID->"02e62932-9c7c-456f-bb6c-6e6e518fef53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203359, 5384, 1656, 46, 44, "Input",ExpressionUUID->"95875a27-18da-4480-b3c0-fbf50f9212cc"],
Cell[205018, 5432, 114, 2, 50, "Output",ExpressionUUID->"6ccf7674-8e1b-473d-a9e7-0c7429ec8a6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205169, 5439, 1690, 47, 44, "Input",ExpressionUUID->"a1649f36-5355-45f4-b695-592c782dfd3e"],
Cell[206862, 5488, 114, 2, 50, "Output",ExpressionUUID->"5f64f719-e0c5-4ee1-9830-567db1b32eb4"]
}, Open  ]],
Cell[206991, 5493, 82, 0, 44, "Input",ExpressionUUID->"688a5058-25de-4b98-9ed9-bd3507427375"],
Cell[207076, 5495, 31349, 541, 779, "Input",ExpressionUUID->"d7506076-5195-4d1b-862f-005488c7162b"],
Cell[CellGroupData[{
Cell[238450, 6040, 205, 5, 44, "Input",ExpressionUUID->"19928a96-1913-4b67-b32c-e2aaf52e97b0"],
Cell[238658, 6047, 115, 2, 50, "Output",ExpressionUUID->"df1a5840-e815-483e-aec3-1a0621356a97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238810, 6054, 205, 5, 44, "Input",ExpressionUUID->"73914265-2603-41e3-b065-5a14c112b16e"],
Cell[239018, 6061, 114, 2, 50, "Output",ExpressionUUID->"fab91786-8840-4722-9663-387de10d3796"]
}, Open  ]],
Cell[239147, 6066, 206, 4, 74, "Input",ExpressionUUID->"ab0f6f66-3b79-419d-a5ab-fe9820ce170b"],
Cell[CellGroupData[{
Cell[239378, 6074, 158, 3, 44, "Input",ExpressionUUID->"e07b7a37-04d2-43ca-a3fd-88fa4641bc78"],
Cell[239539, 6079, 115, 2, 50, "Output",ExpressionUUID->"da4a9cf6-82ee-41b2-9f7c-4e2960f812f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239691, 6086, 159, 3, 44, "Input",ExpressionUUID->"e27047ca-a281-4de5-b92f-3b993484625b"],
Cell[239853, 6091, 118, 2, 50, "Output",ExpressionUUID->"3759dc9a-1378-4531-8719-8cc8f85a5d90"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240020, 6099, 94, 0, 136, "Section",ExpressionUUID->"fc265650-2ee0-4d1a-a250-9bbb2afaf0b9"],
Cell[CellGroupData[{
Cell[240139, 6103, 108, 0, 60, "Subsection",ExpressionUUID->"0ba92007-cfa0-4d7b-80da-f2805bd70c17"],
Cell[240250, 6105, 404, 9, 50, "Text",ExpressionUUID->"00950b9f-cd24-4dd3-9a38-138d562ead81"],
Cell[CellGroupData[{
Cell[240679, 6118, 172, 4, 44, "Input",ExpressionUUID->"966c6f53-e27e-4e70-af3d-90897be92e14"],
Cell[240854, 6124, 114, 2, 50, "Output",ExpressionUUID->"22da20da-af41-4bb0-bf32-3ce8aa082df8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241005, 6131, 169, 4, 44, "Input",ExpressionUUID->"5efd516f-238e-4872-a59e-3cc9dbb24f9f"],
Cell[241177, 6137, 115, 2, 50, "Output",ExpressionUUID->"94f926d3-ea3a-464c-93e0-8a07a02bfc48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241329, 6144, 172, 4, 44, "Input",ExpressionUUID->"3881c444-a24c-470f-9c2d-940ddbb2da95"],
Cell[241504, 6150, 114, 2, 50, "Output",ExpressionUUID->"64e80316-e847-48a0-ac91-e1af3f63cc92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241655, 6157, 198, 5, 44, "Input",ExpressionUUID->"50602aa4-9f28-40fb-8de1-aa27b1d0d76f"],
Cell[241856, 6164, 114, 2, 50, "Output",ExpressionUUID->"79dc0af2-6f3a-4dcb-bea3-6e2949599d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242007, 6171, 235, 6, 44, "Input",ExpressionUUID->"055fc0a8-e716-4042-8e88-89c3dc0129f7"],
Cell[242245, 6179, 114, 2, 50, "Output",ExpressionUUID->"68dba89c-d825-4551-b189-71dbd2dace8a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242408, 6187, 87, 0, 60, "Subsection",ExpressionUUID->"625f7213-e654-4dd0-80e6-b7a3327ba953"],
Cell[242498, 6189, 342, 9, 83, "Text",ExpressionUUID->"4bdfe91d-c6f3-4531-93db-1d90cfe45b02",
 CellTags->{"_?", "PatternTest"}],
Cell[242843, 6200, 317, 11, 74, "Program",ExpressionUUID->"b1f2bc58-318a-4717-9147-220acdb4e679",
 CellTags->{"_?", "PatternTest"}],
Cell[CellGroupData[{
Cell[243185, 6215, 145, 3, 44, "Input",ExpressionUUID->"5b0755d7-71d8-4d37-8cb2-9fea78098695"],
Cell[243333, 6220, 114, 2, 50, "Output",ExpressionUUID->"2122a7d9-7bc4-40b0-afe1-8de4eab79e64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243484, 6227, 151, 3, 44, "Input",ExpressionUUID->"17d30e82-8b4e-46ca-845b-0b062f55e874"],
Cell[243638, 6232, 115, 2, 50, "Output",ExpressionUUID->"5afa587c-18b0-4776-9f9e-29dc48d630e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243790, 6239, 197, 5, 44, "Input",ExpressionUUID->"61bcb72a-5da4-4493-8231-17ccce536c75"],
Cell[243990, 6246, 114, 2, 50, "Output",ExpressionUUID->"f32fb49d-d100-4516-a2cc-e6d9390323a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244141, 6253, 203, 5, 44, "Input",ExpressionUUID->"0b93c773-ae3f-4e7c-ab4e-2cd7ae0b17e2"],
Cell[244347, 6260, 115, 2, 50, "Output",ExpressionUUID->"0ab58989-bf64-4f7f-aed3-032df0bc4809"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244499, 6267, 347, 11, 44, "Input",ExpressionUUID->"ece9ee72-1d17-492b-8158-e84537526e1c"],
Cell[244849, 6280, 114, 2, 50, "Output",ExpressionUUID->"6e3ff58b-4a9a-44e8-9e72-bd47fed5724b"]
}, Open  ]],
Cell[244978, 6285, 1179, 30, 83, "Text",ExpressionUUID->"c6f8efce-e20f-4dd0-9717-d9e4ee3c64a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246194, 6320, 87, 0, 60, "Subsection",ExpressionUUID->"3eaf3a1c-922d-4d5f-9a37-11e61fcb27d0"],
Cell[246284, 6322, 203, 3, 50, "Text",ExpressionUUID->"8c34efa6-3e3e-4289-a43d-6102fad89f68"],
Cell[246490, 6327, 308, 10, 72, "Program",ExpressionUUID->"cd0dc113-b859-4654-b52a-622c234ee8a5",
 CellTags->{"_?", "PatternTest"}],
Cell[246801, 6339, 143, 2, 50, "Text",ExpressionUUID->"70b4cac0-caa1-4b53-b37e-cdcb7215504d"],
Cell[CellGroupData[{
Cell[246969, 6345, 219, 6, 44, "Input",ExpressionUUID->"836dd713-9763-45fc-a4e0-5932555d7418"],
Cell[247191, 6353, 114, 2, 50, "Output",ExpressionUUID->"f86e0556-554a-4591-825c-095a526d153d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247342, 6360, 218, 6, 44, "Input",ExpressionUUID->"fc339627-04ca-4838-892a-05b8ebe56adf"],
Cell[247563, 6368, 115, 2, 50, "Output",ExpressionUUID->"32535c31-4366-4ef3-8764-18d77f800efd"]
}, Open  ]],
Cell[247693, 6373, 172, 3, 50, "Text",ExpressionUUID->"4b19b685-e938-47b2-a38d-4280f34a79e6"],
Cell[CellGroupData[{
Cell[247890, 6380, 454, 13, 44, "Input",ExpressionUUID->"2baea939-9071-4da5-8988-60d1fe1f62d9"],
Cell[248347, 6395, 239, 6, 50, "Output",ExpressionUUID->"c84a4fdb-d4c1-44cd-8c22-393cf6ac40b2"]
}, Open  ]],
Cell[248601, 6404, 9222, 176, 492, "Text",ExpressionUUID->"54613259-e0f2-4ba9-87ba-0f61f6af7389",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257872, 6586, 118, 0, 136, "Section",ExpressionUUID->"f6393400-acdc-4d04-b82a-a29ea8e7f3f9"],
Cell[257993, 6588, 412, 9, 50, "Text",ExpressionUUID->"68727f71-c41c-4ec9-a9fd-32a56e1c5d4b"],
Cell[CellGroupData[{
Cell[258430, 6601, 392, 11, 44, "Input",ExpressionUUID->"b0ce073b-8395-4249-9550-7e2608f656a8"],
Cell[258825, 6614, 325, 9, 50, "Output",ExpressionUUID->"9f87242f-7e1a-449d-9ce8-892cc785b5a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259187, 6628, 395, 12, 44, "Input",ExpressionUUID->"7c8432a4-cac4-4bec-a82c-7fc25a963059"],
Cell[259585, 6642, 239, 7, 50, "Output",ExpressionUUID->"a8ebbfce-bffd-4ee3-905d-de57189b000f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259861, 6654, 421, 12, 44, "Input",ExpressionUUID->"ce051f7a-5ca4-4faf-b485-451baf9b210c"],
Cell[260285, 6668, 161, 4, 50, "Output",ExpressionUUID->"2d4c9e1a-9fb1-4abc-ad60-075a4fe6d4dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260483, 6677, 199, 5, 44, "Input",ExpressionUUID->"33234129-6750-412c-8cf4-084b0dded22b"],
Cell[260685, 6684, 245, 6, 50, "Output",ExpressionUUID->"3932b9cf-b272-4de6-8263-1eb8d7dc8624"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260967, 6695, 223, 6, 44, "Input",ExpressionUUID->"eaff2d86-768f-47d4-99dd-699a29128f9f"],
Cell[261193, 6703, 168, 4, 50, "Output",ExpressionUUID->"2e0cd754-0af4-47dc-8a71-b8ea08302905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261398, 6712, 251, 7, 44, "Input",ExpressionUUID->"c321a0df-4007-4800-9889-ad455cd1e01b"],
Cell[261652, 6721, 975, 28, 80, "Output",ExpressionUUID->"3f8a7bbf-ea45-4f01-ab2b-87e459bd24f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262664, 6754, 359, 10, 44, "Input",ExpressionUUID->"afe6d472-efa5-4a0f-b5fa-20788d4bf3a7"],
Cell[263026, 6766, 880, 26, 101, "Output",ExpressionUUID->"f69a1f54-1f20-40e8-be93-2a918aefeb21"]
}, Open  ]],
Cell[263921, 6795, 317, 5, 83, "Text",ExpressionUUID->"77163736-69b6-4317-bca1-f383b77fd451"],
Cell[CellGroupData[{
Cell[264263, 6804, 472, 15, 44, "Input",ExpressionUUID->"67efac6d-e4ef-468c-ac11-84bf235fcd8f"],
Cell[264738, 6821, 1219, 40, 244, "Output",ExpressionUUID->"b6dded09-bfd0-42e1-b6c1-e5393ef72409"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266006, 6867, 108, 0, 136, "Section",ExpressionUUID->"5f16e31a-c1b1-47bc-860a-c47bc8f54c05"],
Cell[266117, 6869, 318, 5, 83, "Text",ExpressionUUID->"38442438-e6ca-4d00-9e17-f891344b68f5"],
Cell[266438, 6876, 209, 3, 83, "Text",ExpressionUUID->"7de6a501-248e-433a-8464-1eaccc597f1b"],
Cell[266650, 6881, 157, 2, 50, "Text",ExpressionUUID->"9929a14e-0b35-4e9d-ba97-6b621e992aa1"],
Cell[266810, 6885, 215, 6, 44, "Input",ExpressionUUID->"67f4f048-370b-462c-8047-a288a11b572a"],
Cell[267028, 6893, 238, 7, 44, "Input",ExpressionUUID->"c53bf6b4-2bfb-49ed-9c7c-2d3643346015"],
Cell[CellGroupData[{
Cell[267291, 6904, 139, 3, 44, "Input",ExpressionUUID->"3f56bf5f-52f8-4435-b931-6204980c37e4"],
Cell[267433, 6909, 111, 2, 50, "Output",ExpressionUUID->"e2785560-3d11-444c-8b59-c0a25983ac55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267581, 6916, 139, 3, 44, "Input",ExpressionUUID->"fb1f8d2b-b006-4c29-9bb0-6db351c10fc7"],
Cell[267723, 6921, 111, 2, 50, "Output",ExpressionUUID->"0b1934a6-e585-4c89-b77f-6da40ad4a3f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267871, 6928, 129, 3, 44, "Input",ExpressionUUID->"e652e441-51fd-4f1e-8cd4-8ea59e922724"],
Cell[268003, 6933, 10486, 265, 328, "Output",ExpressionUUID->"bfd5fe7c-e0cf-448a-a15c-ec2c1156eb91"]
}, Open  ]],
Cell[278504, 7201, 111, 2, 44, "Input",ExpressionUUID->"b3027b96-ddf4-47d3-a845-a8286f2d74d9"],
Cell[278618, 7205, 1000, 26, 80, "Input",ExpressionUUID->"dc5da472-4f29-4d1d-9414-ea92210263c4"],
Cell[CellGroupData[{
Cell[279643, 7235, 203, 4, 74, "Input",ExpressionUUID->"e08c233a-72eb-4c33-96f2-a32ea53230f2"],
Cell[279849, 7241, 168, 3, 50, "Output",ExpressionUUID->"1839b458-33c7-452f-9cca-9f05ab87a848"]
}, Open  ]],
Cell[280032, 7247, 81, 0, 44, "Input",ExpressionUUID->"eb581de9-f4e3-4156-a70c-8fffcd5643d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280150, 7252, 111, 0, 136, "Section",ExpressionUUID->"358cabc5-369c-4ed0-8435-71940d3a3f84"],
Cell[280264, 7254, 213, 3, 83, "Text",ExpressionUUID->"0d5f96a1-2a17-4983-ae23-f60b07dbe7b0"],
Cell[CellGroupData[{
Cell[280502, 7261, 149, 3, 44, "Input",ExpressionUUID->"4447c2a1-7d40-42ee-ac6b-973c6e84a977"],
Cell[280654, 7266, 150, 3, 50, "Output",ExpressionUUID->"513d4728-39c4-4021-91d6-71d89fa16b7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280841, 7274, 139, 3, 44, "Input",ExpressionUUID->"2258699e-7125-4998-b18a-825c5e853142"],
Cell[280983, 7279, 140, 3, 50, "Output",ExpressionUUID->"7513d405-541d-4e4f-a7ac-3bd39a9f8466"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281160, 7287, 134, 3, 44, "Input",ExpressionUUID->"8d84393a-2101-4775-a8b5-5a5d84d712b5"],
Cell[281297, 7292, 135, 3, 50, "Output",ExpressionUUID->"6092b767-e0a2-4637-b6c4-6fb974ec3603"]
}, Open  ]],
Cell[281447, 7298, 154, 2, 50, "Text",ExpressionUUID->"946ab2d1-5f82-49a2-9953-bddd70fe2ef6"],
Cell[CellGroupData[{
Cell[281626, 7304, 28018, 467, 142, "Input",ExpressionUUID->"805fb583-7b4a-452a-b712-0d3a07a478de"],
Cell[309647, 7773, 135, 2, 50, "Output",ExpressionUUID->"43362ebf-9246-4950-9d4b-2e2994f14713"]
}, Open  ]],
Cell[309797, 7778, 83, 0, 70, "ChatInput",ExpressionUUID->"8c795f60-9cc6-40ee-b06b-e0b2247c6f9b"],
Cell[CellGroupData[{
Cell[309905, 7782, 318, 7, 105, "Input",ExpressionUUID->"6c2546ef-e8a6-4989-beb6-96782d896af5"],
Cell[310226, 7791, 10309, 259, 322, "Output",ExpressionUUID->"c671f574-281b-4ec0-995c-753fee06497e"]
}, Open  ]],
Cell[320550, 8053, 9535, 181, 397, "Text",ExpressionUUID->"64df4596-bb93-451f-960f-4e8b71d3e9db",
 CellTags->"CYU"],
Cell[330088, 8236, 270, 7, 74, "Input",ExpressionUUID->"36554b1e-08c7-4348-8781-04061a159845"],
Cell[CellGroupData[{
Cell[330383, 8247, 137, 3, 44, "Input",ExpressionUUID->"36eead5d-b950-440f-aec3-817d4be95ea0"],
Cell[330523, 8252, 111, 2, 50, "Output",ExpressionUUID->"6f4bbdab-58d7-4ed2-b405-de844139372e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330671, 8259, 137, 3, 44, "Input",ExpressionUUID->"d75696c6-813c-4e02-bad0-5ce3cc96653c"],
Cell[330811, 8264, 111, 2, 50, "Output",ExpressionUUID->"1959832f-9519-4a45-9aaf-88b958ee9d42"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[330971, 8272, 84, 0, 136, "Section",ExpressionUUID->"f7410692-b1e7-4f1d-b0a8-7accb4df59df"],
Cell[331058, 8274, 394, 8, 46, "Item",ExpressionUUID->"5c4cbc4c-b7a7-4c0a-a307-70237040c581"],
Cell[331455, 8284, 376, 8, 46, "Item",ExpressionUUID->"b44574e4-f11f-4d22-9072-be5ae76c909f"],
Cell[331834, 8294, 385, 8, 46, "Item",ExpressionUUID->"48bfe2b3-4b74-4b16-abaa-728f963c5b0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332256, 8307, 83, 0, 136, "Section",ExpressionUUID->"f21f24a2-3cd1-4233-9bc3-24447a24faca"],
Cell[332342, 8309, 160, 3, 46, "ItemNumbered",ExpressionUUID->"e6f03e9a-8939-49e4-a49e-db2be7d7981b",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[332505, 8314, 154, 3, 50, "Text",ExpressionUUID->"65b6d0e0-fd5b-4d27-98bc-2e856f85b997",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[332662, 8319, 672, 19, 44, "Input",ExpressionUUID->"18cddd51-65ab-4865-a5f7-d4b1ea142631",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[333337, 8340, 465, 12, 50, "Text",ExpressionUUID->"4a2b4de5-b9c5-422b-ab82-25ab2b0fc27b",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[333805, 8354, 199, 5, 44, "Input",ExpressionUUID->"195c5378-e3fb-4735-ad8f-04c36b89970f",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[334007, 8361, 200, 5, 44, "Input",ExpressionUUID->"6daf12d9-4890-491b-9e90-4d445ffabf32",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[334210, 8368, 200, 5, 44, "Input",ExpressionUUID->"f018c842-ffd7-41ef-8d8a-e81a8d6b9eb8",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[334413, 8375, 201, 5, 44, "Input",ExpressionUUID->"ca407bce-9680-4fc1-8487-890a76900097",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[334617, 8382, 230, 6, 44, "Input",ExpressionUUID->"1335fca8-918f-4578-962f-83592c18e36e",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[334850, 8390, 255, 7, 44, "Input",ExpressionUUID->"df9a12c5-3deb-45be-b8e4-daa149eb2d04",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[335108, 8399, 229, 6, 44, "Input",ExpressionUUID->"60d746e6-ed54-4da0-a5c2-4a87b550a799",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[CellGroupData[{
Cell[335362, 8409, 319, 8, 74, "Input",ExpressionUUID->"770d8de1-98ca-4473-b506-c96d814a59b3",
 CellTags->{"Exercises", "Pattern Matching"}],
Cell[335684, 8419, 601, 17, 50, "Output",ExpressionUUID->"2404787f-8fdd-4120-8635-072f2072df3e",
 CellTags->{"Exercises", "Pattern Matching"}]
}, Open  ]],
Cell[336300, 8439, 1620, 39, 99, "Text",ExpressionUUID->"b4c6be44-e825-4308-a377-3295fd0d4a59",
 CellTags->"CYU"],
Cell[337923, 8480, 2758, 74, 367, "Text",ExpressionUUID->"8bed64ee-2383-4174-aa49-75646c7cd18f",
 CellTags->"CYU"],
Cell[CellGroupData[{
Cell[340706, 8558, 115, 2, 44, "Input",ExpressionUUID->"354027eb-27a3-4032-8466-82a40689f814"],
Cell[340824, 8562, 116, 2, 50, "Output",ExpressionUUID->"dbd176ca-35c9-4ad6-88c9-0114a77b093a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340977, 8569, 206, 5, 44, "Input",ExpressionUUID->"40d38bbc-8b24-4802-8243-f5e4daff9c2f"],
Cell[341186, 8576, 114, 2, 50, "Output",ExpressionUUID->"0389870f-2e3a-4a5b-803d-7083860b4050"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341337, 8583, 246, 6, 74, "Input",ExpressionUUID->"f9b5f62e-fa17-457a-841f-1386977ff4f2"],
Cell[341586, 8591, 219, 6, 50, "Output",ExpressionUUID->"eafc1a66-a993-460f-8341-6b5e9c675969"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341842, 8602, 138, 3, 44, "Input",ExpressionUUID->"cf48e506-d275-4f46-8e45-3cde913f919d"],
Cell[341983, 8607, 139, 3, 50, "Output",ExpressionUUID->"4591f513-c3dd-40ea-a405-ed1543bd4621"]
}, Open  ]],
Cell[342137, 8613, 157, 3, 46, "ItemNumbered",ExpressionUUID->"464201b6-8233-46b4-b632-21dbd73a34ed",
 CellTags->{"Exercises", "Tick Data"}],
Cell[342297, 8618, 206, 6, 50, "Text",ExpressionUUID->"4b310bd5-1fd0-4a63-95ec-d5a2d1b4edee",
 CellTags->{"Exercises", "Tick Data"}],
Cell[342506, 8626, 510, 15, 44, "Input",ExpressionUUID->"329295cc-7447-49ee-968b-16643dec93e2",
 CellTags->{"Exercises", "Tick Data"}],
Cell[343019, 8643, 479, 12, 83, "Text",ExpressionUUID->"f4a4b215-199d-4599-9f9c-90987fd64e39",
 CellTags->{"Exercises", "Tick Data"}],
Cell[CellGroupData[{
Cell[343523, 8659, 199, 4, 44, "Input",ExpressionUUID->"2f8ae74b-f81e-46c3-bd8a-6d4b2202d3e8",
 CellTags->{"Exercises", "Tick Data"}],
Cell[343725, 8665, 152, 3, 50, "Output",ExpressionUUID->"5ccb15dd-f78a-4fd0-b825-8b30298f7d85",
 CellTags->{"Exercises", "Tick Data"}]
}, Open  ]],
Cell[343892, 8671, 162, 3, 50, "Text",ExpressionUUID->"0bb403b3-663f-4bfc-a26a-4fa3dc81a743",
 CellTags->{"Exercises", "Tick Data"}],
Cell[CellGroupData[{
Cell[344079, 8678, 193, 4, 44, "Input",ExpressionUUID->"dbcb838d-255c-4378-a6c4-adf9afc4f4cb",
 CellTags->{"Exercises", "Tick Data"}],
Cell[344275, 8684, 17629, 401, 366, "Output",ExpressionUUID->"92e52197-e9e3-4c91-a138-d784ad8123f2",
 CellTags->{"Exercises", "Tick Data"}]
}, Open  ]],
Cell[361919, 9088, 140, 2, 50, "Text",ExpressionUUID->"1e045069-1c63-4de5-8ef4-78a355870909"],
Cell[CellGroupData[{
Cell[362084, 9094, 184, 4, 44, "Input",ExpressionUUID->"3e69f10d-04a0-4634-8de2-07cd8ffbdd4c"],
Cell[362271, 9100, 61402, 1528, 435, "Output",ExpressionUUID->"2d2a52ba-9b2c-42c0-ab42-be4538cc4804"]
}, Open  ]],
Cell[423688, 10631, 167, 3, 50, "Text",ExpressionUUID->"95d7c5dc-c6ac-4435-abd5-f4f6f420af29",
 CellTags->{"Exercises", "Tick Data"}],
Cell[423858, 10636, 175, 3, 50, "Text",ExpressionUUID->"2b446d4e-edc0-479a-8cdf-431ca2eef1af",
 CellTags->{"Exercises", "Tick Data"}],
Cell[CellGroupData[{
Cell[424058, 10643, 677, 20, 135, "Input",ExpressionUUID->"d86b1dc2-4bae-4c33-8711-b85c98e6646c"],
Cell[424738, 10665, 112, 2, 50, "Output",ExpressionUUID->"6a5bbb9a-3173-46d4-acb1-5db61b414ff9"],
Cell[424853, 10669, 112, 2, 50, "Output",ExpressionUUID->"76b9f0ea-3505-4788-bd24-1a6a85c8e1d3"]
}, Open  ]],
Cell[424980, 10674, 2216, 50, 99, "Text",ExpressionUUID->"e93fa68a-d6b2-44a8-b6fb-b60ce531d3fb",
 CellTags->"CYU"],
Cell[427199, 10726, 3356, 88, 452, "Text",ExpressionUUID->"3b953712-fcaf-4972-b470-d25aa5be9bd9",
 CellTags->"CYU"],
Cell[430558, 10816, 204, 6, 50, "Text",ExpressionUUID->"031861ba-dc17-4d6c-96a1-9e3d67d85c19",
 CellTags->{"Exercises", "Tick Data"}],
Cell[430765, 10824, 2360, 53, 99, "Text",ExpressionUUID->"9cfb37dd-6aa2-4350-858e-b256b90a6ed4",
 CellTags->"CYU"],
Cell[433128, 10879, 3244, 82, 99, "Text",ExpressionUUID->"de85ff0b-765b-4ee1-80f5-8f865e552de6",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]]
}
]
*)

