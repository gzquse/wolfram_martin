(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    255216,       5597]
NotebookOptionsPosition[    185145,       4267]
NotebookOutlinePosition[    233545,       5278]
CellTagsIndexPosition[    233272,       5267]
WindowTitle->Patterns
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Patterns", "Subtitle",ExpressionUUID->"17ff980d-4918-4369-a88c-09f7d0298ec0"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",ExpressionUUID->"add60f3c-97f8-4da3-a2c6-9ea90c7694d4"],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Pattern Basics",
 BaseStyle->"Hyperlink",
 ButtonData->"PatternBasics"],
 FontColor:>Dynamic[
   CurrentValue[{StyleDefinitions, "Subsection", FontColor}]]]], "Subsection",\
ExpressionUUID->"ceb67ca0-162a-44d8-876e-3a3182c06641"],

Cell["Blank", "Item",ExpressionUUID->"d8180ae7-72e5-4374-8181-9103566bda95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Pattern Constraints",
 BaseStyle->"Hyperlink",
 ButtonData->"PatternContstraints"],
 FontColor:>Dynamic[
   CurrentValue[{StyleDefinitions, "Subsection", FontColor}]]]], "Subsection",\
ExpressionUUID->"58cdc83f-3d50-4a6b-81c0-047c1f50c6ac"],

Cell["Heads", "Item",ExpressionUUID->"5e2b85b8-bd18-4f3d-adb2-7af1453a0027"],

Cell["Pattern tests", "Item",ExpressionUUID->"3cbe0559-efed-43b1-98a2-02cb3cb5af38"],

Cell["Named patterns", "Item",ExpressionUUID->"bae8606d-008a-4a6d-83d3-5334dfcfd61a"],

Cell["Conditions", "Item",ExpressionUUID->"a7294333-aef2-4f07-89fd-a34cff42d01b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Flexible Patterns",
 BaseStyle->"Hyperlink",
 ButtonData->"FlexiblePatterns"],
 FontColor:>Dynamic[
   CurrentValue[{StyleDefinitions, "Subsection", FontColor}]]]], "Subsection",\
ExpressionUUID->"c6909bde-15c0-4445-ba46-136dc025e791"],

Cell["Blank sequences", "Item",ExpressionUUID->"2ad40324-e95c-4a45-9473-1445e44b07a8"],

Cell["Alternatives", "Item",ExpressionUUID->"30e07bfc-e575-46a6-bd54-e01243c0a97c"],

Cell["Options patterns", "Item",ExpressionUUID->"294ca761-ade0-444b-bdbe-3f2b64004b39"],

Cell["Optional arguments and default values", "Item",ExpressionUUID->"6019075a-afba-4360-ae9e-a3e313ff0591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["String Patterns",
 BaseStyle->"Hyperlink",
 ButtonData->"StringPatterns"],
 FontColor:>Dynamic[
   CurrentValue[{StyleDefinitions, "Subsection", FontColor}]]]], "Subsection",\
ExpressionUUID->"13285678-8153-4d65-a5c2-855e153dad9f"],

Cell["String operations", "Item",ExpressionUUID->"8eb3bdc3-6540-4566-af63-70d22671bcc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Attributes (optional)",
 BaseStyle->"Hyperlink",
 ButtonData->"Attributes"],
 FontColor:>Dynamic[
   CurrentValue[{StyleDefinitions, "Subsection", FontColor}]]]], "Subsection",\
ExpressionUUID->"405381e1-b0ea-4555-b3b0-39a5c9cc21b1"],

Cell["Flat", "Item",ExpressionUUID->"a0ddf372-3c84-420d-954e-abfb3040a4e3"],

Cell["Listable", "Item",ExpressionUUID->"ff08c086-c8f6-439f-9e64-35e8bb82c188"],

Cell["Orderless", "Item",ExpressionUUID->"729455da-3ff9-423e-a3bc-7287657977bb"],

Cell["Hold attributes", "Item",ExpressionUUID->"5e2dda12-1dee-426d-8744-6605ae3867d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern Basics", "Section",
 CellTags->
  "PatternBasics",ExpressionUUID->"74996c8e-bf4e-49d6-b06f-970082c764d7"],

Cell["\<\
In Wolfram Language, patterns are used to identify expressions that are \
alike, so as to be able to collect, modify or replace them.\
\>", "Text",ExpressionUUID->"a95abe9b-01a8-43c6-be7c-c6ca86ff56e6"],

Cell[TextData[{
 "The simplest pattern is ",
 ButtonBox["Blank",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Blank.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Blank.html"],
 " (_), which represents a single expression. This can be verified with ",
 ButtonBox["MatchQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/MatchQ.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/MatchQ.html"],
 ":"
}], "Text",ExpressionUUID->"7ec2bf45-695e-466c-923e-0414c4e5cd22"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"MatchQ", "[", 
     RowBox[{"singleExpression", ",", " ", "_"}], "]"}]},
   {"\[Placeholder]"},
   {"\[Placeholder]"}
  }]], "Input",ExpressionUUID->"a35cc30f-7ff1-4901-8ded-1c6c97635609"],

Cell[BoxData[GridBox[{
   {"\[Placeholder]"},
   {"\[Placeholder]"}
  }]], "Input",ExpressionUUID->"e4383f2f-1ce9-4484-8be3-5da876c0779e"],

Cell["Patterns can also be very complex:", "Text",ExpressionUUID->"4a73e9cf-c6f7-4e45-a199-91be712bfc4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{"\"\<abc\>\"", " ", "->", " ", "123"}], "|>"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"KeyValuePattern", "[", 
    RowBox[{
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"StringQ", "[", "#", "]"}], " ", "&&", " ", 
         RowBox[{"!", " ", 
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", " ", "DigitCharacter"}], "]"}]}]}], "&"}], 
       ")"}]}], " ", "->", " ", 
     RowBox[{"_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"6f4334a7-b21f-46e2-\
a767-9d51e4bb2b16"],

Cell[BoxData["True"], "Output",ExpressionUUID->"4613b0de-7ca8-47d7-8818-325d86f7b9b4"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 ButtonBox["Cases",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Cases.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Cases.html"],
 " to collect all the expressions in a list that match a pattern:"
}], "Text",ExpressionUUID->"d03b345f-0a7c-4d52-9220-23600c14f309"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "a", ",", " ", 
     RowBox[{"f", "[", "a", "]"}], ",", " ", "2", ",", " ", "3", ",", " ", 
     "\"\<4\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "6"}], "}"}]}], "}"}], ",", "_Integer"}], 
  "]"}]], "Input",ExpressionUUID->"7a547639-07f6-40ab-a5bc-3ebff79e8a52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",ExpressionUUID->\
"dd6166a8-2f77-4a6f-8c7c-6f837d9ed4c6"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 ButtonBox["ReplaceAll",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/ReplaceAll.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/ReplaceAll.html"],
 " to replace expressions that match a pattern:"
}], "Text",ExpressionUUID->"b450bb7f-4c47-4a50-83fa-7e6ea55db8d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "}"}], ",", " ", 
   RowBox[{"a", " ", "->", " ", "1"}]}], "]"}]], "Input",ExpressionUUID->\
"edf3155a-b4a1-4d1e-8b71-bd2d6a6207c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6646094591629064`", ",", "0.7614587377505198`", ",", 
     "0.9327268027387425`", ",", "0.17083845504247908`", ",", 
     "0.32496861549563194`", ",", "0.4397936124438644`", ",", 
     "0.921000150288293`", ",", "0.3034737208782565`", ",", 
     "0.2942286826969267`", ",", "0.21468427903997522`", ",", 
     "0.48880997269853244`", ",", "0.928019411092057`", ",", 
     "0.4927002736824593`", ",", "0.40997731782352`", ",", 
     "0.7709719042520025`", ",", "0.8804310074961503`", ",", 
     "0.20634702032968022`", ",", "0.07744605796319215`", ",", 
     "0.5681476524884455`", ",", "0.4563930978948816`", ",", 
     "0.6104484180867973`", ",", "0.8636546947080994`", ",", 
     "0.011317137217292661`", ",", "0.36246491911512146`", ",", 
     "0.8359519618328493`", ",", "0.1354358388750867`", ",", 
     "0.7475266843979782`", ",", "0.5228479175320442`", ",", 
     "0.25655740482812606`", ",", "0.18965991455050868`", ",", 
     "0.21825688837135715`", ",", "0.25076080693041636`", ",", 
     "0.6158586874125411`", ",", "0.2599578442785664`", ",", 
     "0.5146423459710296`", ",", "0.6546241365154224`", ",", 
     "0.23651746277658425`", ",", "0.7903860362935102`", ",", 
     "0.378998286003686`", ",", "0.32082774978536377`", ",", 
     "0.7853020700161295`", ",", "0.8275116324482783`", ",", 
     "0.24722208154398406`", ",", "0.6466026614515203`", ",", 
     "0.6787118389297013`", ",", "0.3539269451493179`", ",", 
     "0.806469587520525`", ",", "0.13658089608522728`", ",", 
     "0.9066407130929399`", ",", "0.7738337984589001`", ",", 
     "0.025796985225212676`", ",", "0.42637056876804147`", ",", 
     "0.06917170914964199`", ",", "0.2626583830223923`", ",", 
     "0.4792393577162375`", ",", "0.686492570228902`", ",", 
     "0.3639304603786444`", ",", "0.9333429796495687`", ",", 
     "0.022560178602304415`", ",", "0.5672170882036467`", ",", 
     "0.6119979741024584`", ",", "0.3314815559309334`", ",", 
     "0.8259518734577174`", ",", "0.7277960000312238`", ",", 
     "0.7009485554225394`", ",", "0.23073767467618111`", ",", 
     "0.059538272476716836`", ",", "0.5132987491394452`", ",", 
     "0.5642564423985026`", ",", "0.22942840763322625`", ",", 
     "0.787210286369586`", ",", "0.6915135496644458`", ",", 
     "0.1659965823984213`", ",", "0.3400595172792873`", ",", 
     "0.7881759760595575`", ",", "0.6702536379013313`", ",", 
     "0.351727648693442`", ",", "0.6260524477173866`", ",", 
     "0.1126682337653293`", ",", "0.5385026261334918`", ",", 
     "0.5793798075417922`", ",", "0.5718052760307026`", ",", 
     "0.6867714108857235`", ",", "0.33931555585755735`", ",", 
     "0.7964984110611564`", ",", "0.6140838073935648`", ",", 
     "0.7371210860935553`", ",", "0.09421161586343141`", ",", 
     "0.805989961195682`", ",", "0.29184111718294825`", ",", 
     "0.013005115538898382`", ",", "0.39575895499562574`", ",", 
     "0.9881151887020714`", ",", "0.054277596642973824`", ",", 
     "0.22345981001059156`", ",", "0.9264110784504351`", ",", 
     "0.09037635980228442`", ",", "0.020056796000660126`", ",", 
     "0.8865126953416489`", ",", "0.5804808543422035`", ",", 
     "0.5848316502043318`", ",", "0.2575764679770496`", ",", 
     "0.3584616007271011`", ",", "0.8412138516561181`", ",", 
     "0.8048138784024796`", ",", "0.5802950594170535`", ",", 
     "0.9642937989146003`", ",", "0.06103721745416624`", ",", 
     "0.5005536636495804`", ",", "0.3090703646344204`", ",", 
     "0.7109426007475272`", ",", "0.405802873756683`", ",", 
     "0.11108358433149057`", ",", "0.20793882046544376`", ",", 
     "0.856794319033781`", ",", "0.9760468258903281`", ",", 
     "0.13068574840089475`", ",", "0.16315161899516273`", ",", 
     "0.9213027358312016`", ",", "0.47674430615108343`", ",", 
     "0.43668827811357325`", ",", "0.8066066730817896`", ",", 
     "0.8633522080041511`", ",", "0.5711440761875388`", ",", 
     "0.9455274960200895`", ",", "0.14504797825384874`", ",", 
     "0.8146186084803066`", ",", "0.05483753804355729`", ",", 
     "0.7944929021754099`", ",", "0.012723852323401674`", ",", 
     "0.06759477040755657`", ",", "0.28314481535555536`", ",", 
     "0.09008495654938997`", ",", "0.47091237898291083`", ",", 
     "0.9213838733441468`", ",", "0.9201242718035165`", ",", 
     "0.5268530901515369`", ",", "0.1754962128435844`", ",", 
     "0.6748546266165463`", ",", "0.655906659824502`", ",", 
     "0.3271034437362559`", ",", "0.20775695045335651`", ",", 
     "0.9568693184647046`", ",", "0.09645532875974117`", ",", 
     "0.9161093354047589`", ",", "0.5262889664603356`", ",", 
     "0.08135832034367274`", ",", "0.7488762809611205`", ",", 
     "0.7034131982164944`", ",", "0.5594777752943754`", ",", 
     "0.6033296685432876`", ",", "0.6587781294707844`", ",", 
     "0.9279795402184765`", ",", "0.019704572547470267`", ",", 
     "0.23222079685909458`", ",", "0.8129245850184419`", ",", 
     "0.17365009498704986`", ",", "0.5602141890232522`", ",", 
     "0.6362849630508958`", ",", "0.19529746333737008`", ",", 
     "0.7890612414875766`", ",", "0.6730696464197279`", ",", 
     "0.4373366593779162`", ",", "0.2821841956701856`", ",", 
     "0.04815255623945203`", ",", "0.4450932536150978`", ",", 
     "0.6092264154658247`", ",", "0.17401079059527524`", ",", 
     "0.6091108577518867`", ",", "0.08422143586275332`", ",", 
     "0.0295397450413033`", ",", "0.35795194288144616`", ",", 
     "0.807711512705906`", ",", "0.9747748869270745`", ",", 
     "0.5874819410405019`", ",", "0.033400851245329655`", ",", 
     "0.5030032228820613`", ",", "0.25557759618608644`", ",", 
     "0.9118824766284013`", ",", "0.17435715213274183`", ",", 
     "0.568139980236049`", ",", "0.5420065162216827`", ",", 
     "0.9636258960123387`", ",", "0.10394404062500584`", ",", 
     "0.20584550939649549`", ",", "0.9989142508295856`", ",", 
     "0.9150776952741164`", ",", "0.7257737361334937`", ",", 
     "0.45707055105047645`", ",", "0.14303983073884297`", ",", 
     "0.9427473330753899`", ",", "0.8239988635042008`", ",", 
     "0.3731475885599169`", ",", "0.09346808163047449`", ",", 
     "0.5982884923785488`", ",", "0.13182917714309128`", ",", 
     "0.40761354616202183`", ",", "0.9692536820445081`", ",", 
     "0.40236287321185027`", ",", "0.49629607566675693`", ",", 
     "0.24336239675062088`", ",", "0.03501855235945217`", ",", 
     "0.033879542085970105`", ",", "0.4080416695927178`", ",", 
     "0.39598413106360564`", ",", "0.7091385829302752`", ",", 
     "0.19273140621188345`", ",", "0.6238003127976175`", ",", 
     "0.9452070382015298`", ",", "0.08678491627783225`", ",", 
     "0.32136976454669974`", ",", "0.5979475203981677`", ",", 
     "0.9504507114975542`", ",", "0.2579862061113305`", ",", 
     "0.4463855493734692`", ",", "0.8831473751801586`", ",", 
     "0.8116974263810128`", ",", "0.8908732290854746`", ",", 
     "0.8971839746989325`", ",", "0.8917534428809795`", ",", 
     "0.5751278515575824`", ",", "0.05051073266030759`", ",", 
     "0.569496668160977`", ",", "0.7085163874646798`", ",", 
     "0.9454080591150964`", ",", "0.391714925040175`", ",", 
     "0.403613651626322`", ",", "0.4476495617103031`", ",", 
     "0.42477580944172444`", ",", "0.7325462178791846`", ",", 
     "0.2467082772680651`", ",", "0.8577980243673928`", ",", 
     "0.38258297766735083`", ",", "0.4587460471334033`", ",", 
     "0.7975268739546948`", ",", "0.45768718651320395`", ",", 
     "0.13846624691995957`", ",", "0.1686700891866606`", ",", 
     "0.6195397079770855`", ",", "0.3412344435301873`", ",", 
     "0.6487916702678935`", ",", "0.9831681390838791`", ",", 
     "0.6352969428613586`", ",", "0.9732762692167569`", ",", 
     "0.7929975875281357`", ",", "0.6169189384514648`", ",", 
     "0.6991812950139387`", ",", "0.9141474821918307`", ",", 
     "0.716951761471893`", ",", "0.6561097909870823`", ",", 
     "0.07952278035516591`", ",", "0.38092113901691294`", ",", 
     "0.6204164094943694`", ",", "0.5585150974901867`", ",", 
     "0.41328482235039954`", ",", "0.9350233205406862`", ",", 
     "0.15902318679881078`", ",", "0.8941214430239182`", ",", 
     "0.1406949265444677`", ",", "0.030744598456030836`", ",", 
     "0.26264125755805967`", ",", "0.3493054416713832`", ",", 
     "0.7724217349194835`", ",", "0.3889534743389129`", ",", 
     "0.24444739213584832`", ",", "0.2116884216835817`", ",", 
     "0.24601680137319248`", ",", "0.848555206183035`", ",", 
     "0.9690559273940353`", ",", "0.5565706867494307`", ",", 
     "0.5394697106747861`", ",", "0.9526843876266515`", ",", 
     "0.12008496248785527`", ",", "0.8209106378605926`", ",", 
     "0.9443456688173215`", ",", "0.13665932503697942`", ",", 
     "0.6105331367829177`", ",", "0.11883755394428097`", ",", 
     "0.4019006045183007`", ",", "0.20834500060217498`", ",", 
     "0.01676039181505873`", ",", "0.36802260636391426`", ",", 
     "0.4679907863927386`", ",", "0.16364856945161876`", ",", 
     "0.2592388001058008`", ",", "0.0568463787918827`", ",", 
     "0.16984008514167326`", ",", "0.8338055274044487`", ",", 
     "0.028801236496893923`", ",", "0.9079947100747605`", ",", 
     "0.512409571292568`", ",", "0.1356440884354333`", ",", 
     "0.5930398681818245`", ",", "0.04060540857469075`", ",", 
     "0.5248378436696397`", ",", "0.6154247413280365`", ",", 
     "0.8889440676015261`", ",", "0.00893688109334545`", ",", 
     "0.666359061284844`", ",", "0.10527649669145567`", ",", 
     "0.8315715045973078`", ",", "0.538661261326868`", ",", 
     "0.5212344429609514`", ",", "0.1995200254007048`", ",", 
     "0.29194021649134916`", ",", "0.1894206445720945`", ",", 
     "0.6575618626080117`", ",", "0.2592668110703966`", ",", 
     "0.6098077975204288`", ",", "0.04729324042219307`", ",", 
     "0.7385468779530306`", ",", "0.3661332197196894`", ",", 
     "0.7077569783355391`", ",", "0.39308746365856106`", ",", 
     "0.04150817716042399`", ",", "0.3112022756825772`", ",", 
     "0.6747135526595862`", ",", "0.9043240991503374`", ",", 
     "0.7736547268727709`", ",", "0.7353679769302257`", ",", 
     "0.9351124134508351`", ",", "0.529052322353583`", ",", 
     "0.9740222198631912`", ",", "0.30448284593243624`", ",", 
     "0.3821046840097386`", ",", "0.222994378794114`", ",", 
     "0.6076760486121384`", ",", "0.5977528736412487`", ",", 
     "0.10549914233159319`", ",", "0.8428583540001664`", ",", 
     "0.23494144822246743`", ",", "0.7091889094772763`", ",", 
     "0.8739810085525872`", ",", "0.9379541718412052`", ",", 
     "0.4457528161969817`", ",", "0.34496412258465736`", ",", 
     "0.26625851968769054`", ",", "0.029979678272340493`", ",", 
     "0.9844186838710607`", ",", "0.9966672271949775`", ",", 
     "0.6820004739465493`", ",", "0.18465290362854714`", ",", 
     "0.41338485976670625`", ",", "0.3816353123670462`", ",", 
     "0.2661329256770415`", ",", "0.1324172007909985`", ",", 
     "0.2672312744416052`", ",", "0.8295425826526981`", ",", 
     "0.771882449616526`", ",", "0.6808473339561696`", ",", 
     "0.7702776019642923`", ",", "0.5172151115344719`", ",", 
     "0.7213756712074415`", ",", "0.7835803333653972`", ",", 
     "0.5724007916357738`", ",", "0.4117861248540313`", ",", 
     "0.1887489953930519`", ",", "0.07989751570949921`", ",", 
     "0.9833592097676958`", ",", "0.1425205711542752`", ",", 
     "0.5629405125961418`", ",", "0.5392574561843919`", ",", 
     "0.33191300315327954`", ",", "0.4094372675063658`", ",", 
     "0.9771388022011394`", ",", "0.053738734264449084`", ",", 
     "0.8818587874931116`", ",", "0.39127688859896814`", ",", 
     "0.9687799316572225`", ",", "0.6245279107342996`", ",", 
     "0.3204294456526793`", ",", "0.7047532745028222`", ",", 
     "0.4984839028976322`", ",", "0.4452551768202144`", ",", 
     "0.18591436583569831`", ",", "0.23582935709557917`", ",", 
     "0.6672134194791868`", ",", "0.9406030836162302`", ",", 
     "0.7776165907765611`", ",", "0.06454100370602545`", ",", 
     "0.9059066262707154`", ",", "0.29762149352131795`", ",", 
     "0.6156749981158292`", ",", "0.6264719371517968`", ",", 
     "0.4548532939151153`", ",", "0.20777160163354647`", ",", 
     "0.5460669246041003`", ",", "0.5782651244254453`", ",", 
     "0.7016416854814305`", ",", "0.1445753233215883`", ",", 
     "0.22643003067694578`", ",", "0.7162511326805481`", ",", 
     "0.9038093573594073`", ",", "0.9791121629365902`", ",", 
     "0.7715974317361665`", ",", "0.3984354676055799`", ",", 
     "0.17028675291864803`", ",", "0.40624073070732347`", ",", 
     "0.6923396084303919`", ",", "0.8986329804232946`", ",", 
     "0.20552431158862472`", ",", "0.12637322627150538`", ",", 
     "0.6673526287461051`", ",", "0.5609870023159307`", ",", 
     "0.07765782193044579`", ",", "0.4877914728059116`", ",", 
     "0.07762041487805127`", ",", "0.6401483580917482`", ",", 
     "0.12769294378623397`", ",", "0.20106825158428143`", ",", 
     "0.034394239093366696`", ",", "0.2770511734591681`", ",", 
     "0.7623916396339061`", ",", "0.6965793034610108`", ",", 
     "0.9153928748361788`", ",", "0.6512055236214613`", ",", 
     "0.3483162258248391`", ",", "0.1191920434441529`", ",", 
     "0.9541173258652347`", ",", "0.8004347961610412`", ",", 
     "0.8631570890979736`", ",", "0.52106940889791`", ",", 
     "0.2871470651259145`", ",", "0.9834897855489249`", ",", 
     "0.8986056032903715`", ",", "0.04908546358939958`", ",", 
     "0.9206077174429979`", ",", "0.5315916045365165`", ",", 
     "0.7710601703540438`", ",", "0.550580270244295`", ",", 
     "0.7617117768729973`", ",", "0.8834645358714408`", ",", 
     "0.041762028284626496`", ",", "0.735827027290783`", ",", 
     "0.663417499236512`", ",", "0.25517714680570047`", ",", 
     "0.6118742067529643`", ",", "0.7045537936743558`", ",", 
     "0.6311749580386865`", ",", "0.4333355601603688`", ",", 
     "0.3515504254888504`", ",", "0.24908069006469957`", ",", 
     "0.6119144902058986`", ",", "0.3196316752747663`", ",", 
     "0.4923015703999363`", ",", "0.711594948821485`", ",", 
     "0.21178853120877106`", ",", "0.8924995936737365`", ",", 
     "0.6879781973396075`", ",", "0.15116105225640752`", ",", 
     "0.8896420655648818`", ",", "0.13862660891822465`", ",", 
     "0.979669576922557`", ",", "0.21245572744253693`", ",", 
     "0.9077771395257206`", ",", "0.7915206208266119`", ",", 
     "0.8860858558141567`", ",", "0.8058030429729717`", ",", 
     "0.5974984398408221`", ",", "0.2116483508432443`", ",", 
     "0.22143540371516734`", ",", "0.7876492894820895`", ",", 
     "0.11107416033016548`", ",", "0.5557118822764757`", ",", 
     "0.9433433717120059`", ",", "0.28708589360753`", ",", 
     "0.1266839304521279`", ",", "0.008779934652338062`", ",", 
     "0.7746689645944791`", ",", "0.8437032811970326`", ",", 
     "0.19484711731858728`", ",", "0.7969885526381821`", ",", 
     "0.4945410287544896`", ",", "0.6299458218162646`", ",", 
     "0.05443622620382338`", ",", "0.875605947506068`", ",", 
     "0.056140085223785885`", ",", "0.8830609499573918`", ",", 
     "0.7600360583242187`", ",", "0.8369962755029361`", ",", 
     "0.4275095729002849`", ",", "0.8225976699453419`", ",", 
     "0.017950674991962456`", ",", "0.10086151829866208`", ",", 
     "0.21708090516414003`", ",", "0.12301468663694592`", ",", 
     "0.34828516946603516`", ",", "0.8129741211154513`", ",", 
     "0.532221665905068`", ",", "0.3210220494596727`", ",", 
     "0.25669429971471014`", ",", "0.09274011807286686`", ",", 
     "0.16937685514447076`", ",", "0.4661680385317182`", ",", 
     "0.9250255777215652`", ",", "0.939327009741457`", ",", 
     "0.7792734755645754`", ",", "0.7650636390501551`", ",", 
     "0.9601027705608238`", ",", "0.31406218418304976`", ",", 
     "0.8708130874040625`", ",", "0.9953226152476815`", ",", 
     "0.04364486443193316`", ",", "0.3547656802919241`", ",", 
     "0.003513477508374274`", ",", "0.36764027914603514`", ",", 
     "0.6905204891290089`", ",", "0.48566127208051535`", ",", 
     "0.05036312573840784`", ",", "0.46163791183286307`", ",", 
     "0.1893606299244821`", ",", "0.2398593533429474`", ",", 
     "0.3561206771819865`", ",", "0.0165456682545575`", ",", 
     "0.743028523800215`", ",", "0.05112364084775689`", ",", 
     "0.5284537238316873`", ",", "0.9384706783548438`", ",", 
     "0.121942395828327`", ",", "0.9215866597087707`", ",", 
     "0.18353225339372137`", ",", "0.892991604738739`", ",", 
     "0.30848373565168896`", ",", "0.26930740162983335`", ",", 
     "0.7294225833579457`", ",", "0.16378132858800698`", ",", 
     "0.6613958394802422`", ",", "0.3583022645013658`", ",", 
     "0.6218548577468364`", ",", "0.8397709327077159`", ",", 
     "0.47745467924402396`", ",", "0.9647949579075064`", ",", 
     "0.43109210190436187`", ",", "0.41898857972711623`", ",", 
     "0.482102468970373`", ",", "0.6467806089810924`", ",", 
     "0.3129240738849728`", ",", "0.10269476090662844`", ",", 
     "0.6465314273613876`", ",", "0.2769577296827328`", ",", 
     "0.2511355412594356`", ",", "0.6891435254806821`", ",", 
     "0.3348864246679599`", ",", "0.6924686984081219`", ",", 
     "0.45629368559698036`", ",", "0.9424849937544344`", ",", 
     "0.7108276308025825`", ",", "0.9335557537113661`", ",", 
     "0.531676256536171`", ",", "0.06173029969285637`", ",", 
     "0.17064208101867906`", ",", "0.4195837232764965`", ",", 
     "0.5188324358509788`", ",", "0.9996395197835011`", ",", 
     "0.4251479611864615`", ",", "0.8796951826794834`", ",", 
     "0.06198246754391756`", ",", "0.5823313166764481`", ",", 
     "0.8931898664220075`", ",", "0.1526694574673264`", ",", 
     "0.8950112444564571`", ",", "0.6982350196107967`", ",", 
     "0.20592696249511722`", ",", "0.2542214727065224`", ",", 
     "0.24755409861089106`", ",", "0.988220686711279`", ",", 
     "0.0802618832530464`", ",", "0.354811656755293`", ",", 
     "0.3346175478785234`", ",", "0.041043620348258925`", ",", 
     "0.10104224638255244`", ",", "0.8050715102706254`", ",", 
     "0.421356597004954`", ",", "0.16203114769804228`", ",", 
     "0.6003179740172528`", ",", "0.9189431423531869`", ",", 
     "0.7271331606304565`", ",", "0.2912824512560268`", ",", 
     "0.9902323779831048`", ",", "0.1961428288147269`", ",", 
     "0.291579800041462`", ",", "0.43535531467483723`", ",", 
     "0.9980984179909926`", ",", "0.4701374727098866`", ",", 
     "0.09454424527060223`", ",", "0.6767025988240241`", ",", 
     "0.43602788899350187`", ",", "0.1843841544122311`", ",", 
     "0.013535675336872499`", ",", "0.8384831847130729`", ",", 
     "0.8172157262230824`", ",", "0.23471593624279463`", ",", 
     "0.8423111479505649`", ",", "0.698066165427538`", ",", 
     "0.24903895238927176`", ",", "0.23524175729493324`", ",", 
     "0.6741367015614874`", ",", "0.8825249876574406`", ",", 
     "0.6998138661381887`", ",", "0.8177081834385274`", ",", 
     "0.6090341355828663`", ",", "0.9197964954963227`", ",", 
     "0.5009525985808121`", ",", "0.021118740866094887`", ",", 
     "0.5707226650842363`", ",", "0.8112719673095001`", ",", 
     "0.4724079069895206`", ",", "0.1951217019367093`", ",", 
     "0.8564608738759247`", ",", "0.003519166198499679`", ",", 
     "0.8941625088311864`", ",", "0.4425154916591063`", ",", 
     "0.5324473562969023`", ",", "0.6482117762073236`", ",", 
     "0.918432511174639`", ",", "0.19302104840980694`", ",", 
     "0.32660405198412645`", ",", "0.7152852253559685`", ",", 
     "0.7282113904127419`", ",", "0.007185737586393515`", ",", 
     "0.43129078690101785`", ",", "0.7679573472010595`", ",", 
     "0.9638795312860258`", ",", "0.11974047046581715`", ",", 
     "0.42213602006782036`", ",", "0.6264722866181471`", ",", 
     "0.13111520171928914`", ",", "0.6548744261850217`", ",", 
     "0.13075049438563613`", ",", "0.3555070417227191`", ",", 
     "0.5211861707532965`", ",", "0.44302843218804755`", ",", 
     "0.9688146841824568`", ",", "0.2175210309049589`", ",", 
     "0.7256383728628559`", ",", "0.19683517706569842`", ",", 
     "0.720684932872447`", ",", "0.8058047429666415`", ",", 
     "0.623683445518876`", ",", "0.9118442304163474`", ",", 
     "0.2650884015764352`", ",", "0.8561648047608446`", ",", 
     "0.7795093573007885`", ",", "0.697490386314497`", ",", 
     "0.7863130740662196`", ",", "0.7553283591124818`", ",", 
     "0.7063378150546642`", ",", "0.05122265893788347`", ",", 
     "0.8307982442765525`", ",", "0.9231975400009225`", ",", 
     "0.6030110859693365`", ",", "0.8612007992847392`", ",", 
     "0.8956993335689645`", ",", "0.2503853511040932`", ",", 
     "0.41355958043791374`", ",", "0.686995024864413`", ",", 
     "0.3971176517609887`", ",", "0.23328499596779118`", ",", 
     "0.5736680741622224`", ",", "0.22350076812089292`", ",", 
     "0.9205753542555883`", ",", "0.8671606192679304`", ",", 
     "0.843204544429218`", ",", "0.5258286814018935`", ",", 
     "0.4018130217701412`", ",", "0.9306294721328816`", ",", 
     "0.16017564019318442`", ",", "0.9344022460309831`", ",", 
     "0.3373026129024752`", ",", "0.5992066293930185`", ",", 
     "0.5685877665360335`", ",", "0.21713265288578953`", ",", 
     "0.33347455844418983`", ",", "0.23173970693008017`", ",", 
     "0.9410620437726183`", ",", "0.02580930674242765`", ",", 
     "0.9163911009050123`", ",", "0.4838081044052933`", ",", 
     "0.442209419017181`", ",", "0.6900746276438452`", ",", 
     "0.521744689280462`", ",", "0.7150777211549377`", ",", 
     "0.8183513259513833`", ",", "0.06907079715896325`", ",", 
     "0.1620399732471387`", ",", "0.7300113291827615`", ",", 
     "0.2635870125751494`", ",", "0.3872397662469589`", ",", 
     "0.7208705930920583`", ",", "0.31765688825444127`", ",", 
     "0.011040221849638376`", ",", "0.4064804175866692`", ",", 
     "0.34469087673816334`", ",", "0.46873310466243523`", ",", 
     "0.11831325604680343`", ",", "0.5667014245949413`", ",", 
     "0.46875542337525644`", ",", "0.1757446924771009`", ",", 
     "0.18988442761894064`", ",", "0.5403560134288918`", ",", 
     "0.37566744293902077`", ",", "0.6291056485252096`", ",", 
     "0.1445076312892748`", ",", "0.38606910132893657`", ",", 
     "0.6138997402336461`", ",", "0.8532584134907908`", ",", 
     "0.7425312538833915`", ",", "0.20321926679997482`", ",", 
     "0.4100040015673847`", ",", "0.7715920971352945`", ",", 
     "0.5870187484439162`", ",", "0.7907051359919299`", ",", 
     "0.037985335502750406`", ",", "0.07056825848396109`", ",", 
     "0.3752175101178159`", ",", "0.5211290609606349`", ",", 
     "0.834368022083434`", ",", "0.7722809269862261`", ",", 
     "0.2532602023191426`", ",", "0.06085746899384037`", ",", 
     "0.83821262276668`", ",", "0.0828329254574407`", ",", 
     "0.4157856704617191`", ",", "0.7898921179923579`", ",", 
     "0.07721268706946471`", ",", "0.24856461759292237`", ",", 
     "0.6419888015706239`", ",", "0.539598427140827`", ",", 
     "0.6661266700888979`", ",", "0.03410723257546322`", ",", 
     "0.32654864734947764`", ",", "0.27368117214415655`", ",", 
     "0.8635913364941059`", ",", "0.5403671789646705`", ",", 
     "0.4191353538282281`", ",", "0.43513902924972325`", ",", 
     "0.3228115487049106`", ",", "0.2720039381600814`", ",", 
     "0.6132322418018203`", ",", "0.8707863836054313`", ",", 
     "0.7307024366366108`", ",", "0.9732288980648693`", ",", 
     "0.13965782617898048`", ",", "0.21715074874763252`", ",", 
     "0.19040302058718717`", ",", "0.28056290191074384`", ",", 
     "0.42783461043070403`", ",", "0.9892696019963125`", ",", 
     "0.2057268145716309`", ",", "0.36851770150945296`", ",", 
     "0.727836674026298`", ",", "0.6829577552796955`", ",", 
     "0.5609678909484144`", ",", "0.3054052633436828`", ",", 
     "0.7489680093936046`", ",", "0.9667034358841835`", ",", 
     "0.24606253715157078`", ",", "0.491495512610141`", ",", 
     "0.3532608477960144`", ",", "0.18770208125241683`", ",", 
     "0.8252538789896142`", ",", "0.5036603400437258`", ",", 
     "0.7749737944217014`", ",", "0.6182292588259075`", ",", 
     "0.7537703161639095`", ",", "0.9221127819563386`", ",", 
     "0.855709028228286`", ",", "0.35905021129983683`", ",", 
     "0.2711701152346224`", ",", "0.1530950844107688`", ",", 
     "0.4330652221824356`", ",", "0.578756832007908`", ",", 
     "0.24584704959307246`", ",", "0.08935115747142386`", ",", 
     "0.5190611358739932`", ",", "0.10266284081029275`", ",", 
     "0.3281870025788054`", ",", "0.747206497329612`", ",", 
     "0.04889638686542819`", ",", "0.5581678209955174`", ",", 
     "0.19836534326924204`", ",", "0.06881116540059318`", ",", 
     "0.46361584804873335`", ",", "0.12904510913885292`", ",", 
     "0.7950825523567828`", ",", "0.2178115232572706`", ",", 
     "0.21686027064747626`", ",", "0.04317946816464047`", ",", 
     "0.6276743814501098`", ",", "0.32357790192893243`", ",", 
     "0.9092338060466012`", ",", "0.44637475176667896`", ",", 
     "0.27860680295971685`", ",", "0.0957293130311212`", ",", 
     "0.2204222707723733`", ",", "0.3477520295022043`", ",", 
     "0.6936094699902315`", ",", "0.8763730207226361`", ",", 
     "0.6400240852675361`", ",", "0.4476842075821268`", ",", 
     "0.8106195948541424`", ",", "0.7232263908432257`", ",", 
     "0.6945458647389264`", ",", "0.31946383077633334`", ",", 
     "0.45104637546215476`", ",", "0.3968705365061991`", ",", 
     "0.6144957819689636`", ",", "0.7876002442862682`", ",", 
     "0.48385065354219714`", ",", "0.2843564796864346`", ",", 
     "0.4566483799594223`", ",", "0.7835859633494096`", ",", 
     "0.6760541097375725`", ",", "0.3543185363117085`", ",", 
     "0.09979056241692197`", ",", "0.9086466815172614`", ",", 
     "0.9298295759791344`", ",", "0.027240884521472886`", ",", 
     "0.005950759875891887`", ",", "0.9717159906568578`", ",", 
     "0.3549375347689512`", ",", "0.6122587232052383`", ",", 
     "0.07935528722599416`", ",", "0.3659079605840423`", ",", 
     "0.2982323101080333`", ",", "0.030915763975902788`", ",", 
     "0.8180836107791287`", ",", "0.688350660444065`", ",", 
     "0.2056410274847229`", ",", "0.2768623616772554`", ",", 
     "0.6090324581407283`", ",", "0.7768761807256686`", ",", 
     "0.3672774306265232`", ",", "0.6576906157928863`", ",", 
     "0.5053180850161891`", ",", "0.15978948284698946`", ",", 
     "0.7163917725109124`", ",", "0.5987182999748131`", ",", 
     "0.2334465323439434`", ",", "0.08616079160258772`", ",", 
     "0.9579702730397421`", ",", "0.9403749527049265`", ",", 
     "0.9648087246122934`", ",", "0.7329213955269767`", ",", 
     "0.15859033911962972`", ",", "0.042676675397234076`", ",", 
     "0.009085975700311666`", ",", "0.2744114531621411`", ",", 
     "0.9331743479929986`", ",", "0.6862160182556438`", ",", 
     "0.4877261434365572`", ",", "0.636754157271195`", ",", 
     "0.8128085846210265`", ",", "0.3382193659318182`", ",", 
     "0.7790840262750967`", ",", "0.20276633440904335`", ",", 
     "0.6546730676795509`", ",", "0.4923884718802314`", ",", 
     "0.12169518132032242`", ",", "0.409542012196509`", ",", 
     "0.09241086823427636`", ",", "0.45905663748499914`", ",", 
     "0.3985110537975314`", ",", "0.72878097278962`", ",", 
     "0.891842758943636`", ",", "0.2873757651257114`", ",", 
     "0.5718303013791222`", ",", "0.5930723105218703`", ",", 
     "0.1180037552940727`", ",", "0.058070800337768125`", ",", 
     "0.2597537099247782`", ",", "0.7421115344703231`", ",", 
     "0.1814912670772182`", ",", "0.03909324281436355`", ",", 
     "0.8797117134395216`", ",", "0.37130755927719483`", ",", 
     "0.2561439751826684`", ",", "0.6168639945978764`", ",", 
     "0.32956062208585357`", ",", "0.2747407203069132`", ",", 
     "0.7183202849504471`", ",", "0.24059981540728526`", ",", 
     "0.8635316780339632`", ",", "0.45107560157934534`", ",", 
     "0.764703056760512`", ",", "0.16386986621190847`", ",", 
     "0.44073271747514053`", ",", "0.26679746129040605`", ",", 
     "0.14708522276209846`", ",", "0.5216658053421777`", ",", 
     "0.9734309713564699`", ",", "0.6532585838063678`", ",", 
     "0.13956382035582537`", ",", "0.5689727089187278`", ",", 
     "0.18969271994351855`", ",", "0.9889451032818892`", ",", 
     "0.7685815905004381`", ",", "0.32312989490829414`", ",", 
     "0.5983403852975502`", ",", "0.26814480172736066`", ",", 
     "0.9772632164083557`", ",", "0.5775325491685286`", ",", 
     "0.31965718044219016`", ",", "0.17484033297602863`", ",", 
     "0.7535601449797045`", ",", "0.08148589044567367`", ",", 
     "0.7293065486841599`", ",", "0.2770913716529495`", ",", 
     "0.46116885889318615`", ",", "0.07341332312827387`", ",", 
     "0.11132765665360855`", ",", "0.5639399960048106`", ",", 
     "0.28243260037669105`", ",", "0.022351714895530117`", ",", 
     "0.44828121875704907`", ",", "0.630109951012648`", ",", 
     "0.1110923463175395`", ",", "0.8574365146497305`", ",", 
     "0.7831468193699627`", ",", "0.06861234572042352`", ",", 
     "0.8042217270457839`", ",", "0.8688716339489295`", ",", 
     "0.6150460336238261`", ",", "0.18278382304105412`", ",", 
     "0.25530843880049137`", ",", "0.08019114782670678`", ",", 
     "0.16892538874560348`", ",", "0.5805172127972544`", ",", 
     "0.6928158792557748`", ",", "0.2599428602408538`", ",", 
     "0.2722127051423664`", ",", "0.2548482684004074`", ",", 
     "0.3671352288094085`", ",", "0.4133862386042313`", ",", 
     "0.2065315529564722`", ",", "0.1413221967350966`", ",", 
     "0.8008348283545303`", ",", "0.6384699592922409`", ",", 
     "0.5591134288465582`", ",", "0.650895257305204`", ",", 
     "0.45988131535935395`", ",", "0.08608421027908797`", ",", 
     "0.440643506992753`", ",", "0.7096093876465082`", ",", 
     "0.7574849970919721`", ",", "0.8644579222910758`", ",", 
     "0.826222460569396`", ",", "0.14445947851924723`", ",", 
     "0.27011983867538025`", ",", "0.4855386872254781`", ",", 
     "0.5557726265492897`", ",", "0.20299910684470324`", ",", 
     "0.9596517557947668`", ",", "0.44363673595913666`", ",", 
     "0.8772586531400792`", ",", "0.7604702044040856`", ",", 
     "0.2188180880501498`", ",", "0.45324077865408907`", ",", 
     "0.8776775348870338`", ",", "0.06285026117554038`", ",", 
     "0.024937560360654976`", ",", "0.06740606473278588`", ",", 
     "0.6615397326996697`", ",", "0.7055621457369856`", ",", 
     "0.17892261261504827`", ",", "0.30474681778232093`", ",", 
     "0.7278454258056295`", ",", "0.9486168853241213`", ",", 
     "0.7261926314059972`", ",", "0.6224982648890174`", ",", 
     "0.19600840361987348`", ",", "0.9466144495165905`", ",", 
     "0.8263820612257611`", ",", "0.5604114561231928`", ",", 
     "0.7911641708803745`", ",", "0.982340701727539`", ",", 
     "0.7803330282110645`", ",", "0.023349718210527115`", ",", 
     "0.6848333600417527`", ",", "0.4914417790949148`", ",", 
     "0.8443749653248991`", ",", "0.20625303749671042`", ",", 
     "0.9115577655945202`", ",", "0.6808922181431796`", ",", 
     "0.5759322994533902`", ",", "0.20348441218168478`", ",", 
     "0.8858643746674557`", ",", "0.2594450653155054`", ",", 
     "0.28979226000394287`", ",", "0.4421950687305942`", ",", 
     "0.043510065422579736`", ",", "0.8436659177541186`", ",", 
     "0.5882709493791469`", ",", "0.88570911382849`", ",", 
     "0.3391268950551698`", ",", "0.09819804347418426`", ",", 
     "0.8229818159492523`", ",", "0.04700888631032574`", ",", 
     "0.7513778309784209`", ",", "0.49282787481588985`"}], "}"}], ",", "c"}], 
  "}"}]], "Output",ExpressionUUID->"f9a2b1c4-53be-4bb1-ae02-a0246c2bfd11"]
}, Open  ]],

Cell[TextData[{
 "(For more controlled replacements, you can use ",
 ButtonBox["Replace",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Replace.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Replace.html"],
 " with a level specification.)"
}], "Text",ExpressionUUID->"d11cefc8-9512-45cc-877b-7287427ac678"],

Cell["Use a pattern for the inputs to a function:", "Text",ExpressionUUID->"eea4c519-5ba7-4b94-a32b-e824cda73f71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plus", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", " ", "y_"}], "}"}], " ", 
    RowBox[{"(*", " ", "Pattern", " ", "*)"}], "]"}], " ", ":=", " ", 
   RowBox[{"x", " ", "+", " ", "y"}]}], ";"}]], "Input",ExpressionUUID->\
"96a81ca1-b1ac-44e5-bf00-bdd6344fe4c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plus", "[", 
  RowBox[{"{", 
   RowBox[{"123", ",", " ", "456"}], "}"}], "]"}]], "Input",ExpressionUUID->\
"e35115f3-95cf-4755-b8bf-4efe9f06b5e9"],

Cell[BoxData["579"], "Output",ExpressionUUID->"87c2f48d-6cf9-486c-82af-97719f1d5dd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plus", "[", 
  RowBox[{"123", ",", " ", "456"}], "]"}]], "Input",ExpressionUUID->"56c00a95-\
ffe1-4c16-ac81-0e9ce43c6075"],

Cell[BoxData[
 RowBox[{"plus", "[", 
  RowBox[{"123", ",", "456"}], "]"}]], "Output",ExpressionUUID->"bbad1fb2-\
1179-4281-a818-d11ee51b240e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern Constraints", "Section",
 CellTags->
  "PatternContstraints",ExpressionUUID->"79e0f2ec-cdfa-4ce3-b6e6-\
442685973675"],

Cell["There are two main ways a pattern can be constrained:", "Text",ExpressionUUID->"ecc61da4-e1ce-4da3-a457-bf06218f2e5a"],

Cell[TextData[{
 StyleBox["name",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["_",
  FontWeight->"Plain"],
 StyleBox["head",
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Item",
 FontWeight->"Bold",ExpressionUUID->"0414c949-de6b-4f2e-87a5-da8374c39135"],

Cell[TextData[{
 StyleBox["name",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["_?",
  FontWeight->"Plain"],
 StyleBox["patternTest",
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Item",
 FontWeight->"Bold",ExpressionUUID->"c9944c15-a33a-41b0-8823-12350a243d1c"],

Cell[TextData[{
 StyleBox["Here, ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox["name",
  FontWeight->"Plain"],
 StyleBox[" is simply a label for the pattern so that it can be referenced \
again later, ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox["head",
  FontWeight->"Plain"],
 StyleBox[" is any Wolfram Language data type (e.g. ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[ButtonBox["Integer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Integer.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Integer.html"],
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[", ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[ButtonBox["List",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/List.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/List.html"],
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[", etc.) or function (e.g. f, ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[ButtonBox["Sin",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Sin.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Sin.html"],
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[", etc.) and ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox["patternTest",
  FontWeight->"Plain"],
 StyleBox[" is a test that must evaluate to True or False (e.g. ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[ButtonBox["IntegerQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/IntegerQ.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/IntegerQ.html"],
  FontWeight->"Plain",
  FontSlant->"Plain"],
 StyleBox[").",
  FontWeight->"Plain",
  FontSlant->"Plain"]
}], "Text",
 FontSlant->"Italic",ExpressionUUID->"37e1b6de-f4b2-424f-be14-fc607cdc3f0e"],

Cell[CellGroupData[{

Cell["Constrain by Head", "Subsection",ExpressionUUID->"2d9952fe-820a-42a1-aa69-9cc7b3fb41a9"],

Cell[TextData[{
 StyleBox["A common use of ",
  IgnoreSpellCheck->True],
 StyleBox["name",
  IgnoreSpellCheck->True,
  FontSlant->"Italic"],
 StyleBox["_",
  IgnoreSpellCheck->True],
 StyleBox["head",
  IgnoreSpellCheck->True,
  FontSlant->"Italic"],
 " is to restrict the input of a function to certain data types. The \
following function will only accept string and integer inputs (in that order):"
}], "Text",ExpressionUUID->"b7476fb6-7976-403d-9b4b-a7da97b405a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"repeatString", "[", 
    RowBox[{"word_String", ",", " ", "repetitions_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]], "Input",Expres\
sionUUID->"9e2988c7-0380-42fa-832e-3ff64943e20c"],

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"\"\<hello\>\"", ",", " ", "3"}], "]"}]], "Input",ExpressionUUID->\
"9d5aeacf-e91e-453f-bc74-0d771779f857"],

Cell["\<\
Should you provide an input sequence that does not match this pattern, no \
evaluation will occur:\
\>", "Text",ExpressionUUID->"58643f0e-c0a6-4199-b3f4-9787d8586c2c"],

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"3", ",", "\"\<hello\>\""}], "]"}]], "Input",ExpressionUUID->\
"7751a41f-6e12-4746-9609-c8a041d1efbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constrain by a Pattern Test", "Subsection",ExpressionUUID->"910e69f0-3b51-4810-b036-7fd6e9e7bbb6"],

Cell[TextData[{
 "Sometimes, _",
 StyleBox["head",
  FontSlant->"Italic"],
 " alone is not enough. In the preceding example, the function will still try \
to evaluate if given a negative repetition value:"
}], "Text",ExpressionUUID->"ca40a955-c0b0-4958-af24-887680462a8b"],

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"\"\<hello\>\"", ",", " ", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",ExpressionUUID->"2ebd6f52-c597-442b-\
a744-7e122aed44e8"],

Cell[TextData[{
 StyleBox["name",
  FontSlant->"Italic"],
 "_?",
 StyleBox["patternTest",
  FontSlant->"Italic"],
 " can be used to create more specific patterns (often using a pure function):"
}], "Text",ExpressionUUID->"96700a9f-915d-416a-9bfd-479fa2ef625a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"_", "?", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"StringQ", "[", "#", "]"}], "&"}], ")"}]}]], "Input",ExpressionUUI\
D->"ab437db6-0fe6-4fad-bc8e-b84ee62ca4cb"],

Cell[BoxData[
 RowBox[{"_", "?", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"StringQ", "[", "#1", "]"}], "&"}], ")"}]}]], "Output",ExpressionU\
UID->"e20bf4cc-f1d5-4f68-b300-d9a6bfa645f0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatString", "[", 
    RowBox[{"word_String", ",", " ", 
     RowBox[{"repetitions_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
         RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]}], "Input",Expre\
ssionUUID->"b23893b4-6f89-463c-b227-d16d8149dead"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integer", "[", "xxx", "]"}], "\[IndentingNewLine]", 
 RowBox[{"repeatString", "[", 
  RowBox[{"\"\<hello\>\"", ",", " ", 
   RowBox[{"-", "1"}]}], "]"}]}], "Input",ExpressionUUID->"88b95cb1-bafc-424c-\
a462-243f6106a106"],

Cell[BoxData[
 RowBox[{"Integer", "[", "xxx", "]"}]], "Output",ExpressionUUID->"d4f166dc-6674-4ddb-aef3-8f330a6950b7"],

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"\<\"hello\"\>", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Output",ExpressionUUID->"5e356376-7a15-4684-\
bd66-eff948585e79"]
}, Open  ]],

Cell[TextData[{
 StyleBox["name",
  FontSlant->"Italic"],
 "_",
 StyleBox["head",
  FontSlant->"Italic"],
 " and ",
 StyleBox["name",
  FontSlant->"Italic"],
 "_?",
 StyleBox["patternTest",
  FontSlant->"Italic"],
 " can be combined for a more readable result:"
}], "Text",ExpressionUUID->"89dceb94-e9c4-461b-8f64-b56bb119be3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatString", "[", 
    RowBox[{"word_String", ",", " ", 
     RowBox[{"repetitions_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]}], "Input",Expre\
ssionUUID->"dce06168-2b01-46e1-a9ba-c41ced4c3021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"\"\<hello\>\"", ",", " ", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",ExpressionUUID->"1f850d2f-17f5-4e2d-\
af72-301c46bb5695"],

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"\<\"hello\"\>", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Output",ExpressionUUID->"5b495cda-7572-4f42-\
8a4f-588871cd3f56"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naming More Complex Patterns", "Subsection",ExpressionUUID->"c897c98a-f241-48d1-8c37-fbf8a3baa9fe"],

Cell[TextData[{
 "In the examples above, each ",
 StyleBox["head",
  FontSlant->"Italic"],
 " or ",
 StyleBox["patternTest",
  FontSlant->"Italic"],
 " has been assigned its own ",
 StyleBox["name",
  FontSlant->"Italic"],
 ". ",
 ButtonBox["Pattern",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Pattern.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Pattern.html"],
 " (:) is useful for naming more complex patterns:"
}], "Text",ExpressionUUID->"98853197-c3b1-4e09-b256-76d72ed3c7be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatString", "[", 
    RowBox[{"wordAndRepetitions", ":", 
     RowBox[{"PatternSequence", "[", 
      RowBox[{"_String", ",", " ", 
       RowBox[{"_Integer", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Apply", "[", 
    RowBox[{"ConstantArray", ",", " ", 
     RowBox[{"{", "wordAndRepetitions", "}"}]}], "]"}]}], ";"}]}], "Input",Exp\
ressionUUID->"7c928753-0387-4066-be31-63a95744b2cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repeatString", "[", 
  RowBox[{"\"\<hello\>\"", ",", "3"}], "]"}]], "Input",ExpressionUUID->\
"e9ad7b3e-c88b-4f02-ad81-7a037ececea0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>"}], 
  "}"}]], "Output",ExpressionUUID->"b129436e-17fd-4301-ac4e-fa9ea2849805"]
}, Open  ]],

Cell["Pattern can be used for the simple cases, too:", "Text",ExpressionUUID->"3102e9d6-d302-40a2-9576-00c7bbe65c40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatString", "[", 
    RowBox[{
     RowBox[{"word", ":", "_String"}], ",", " ", 
     RowBox[{"repetitions", ":", 
      RowBox[{"_Integer", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]}], "Input",Expre\
ssionUUID->"d736eb5f-c0c6-43c4-9796-7e7d935e3812"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "In the pattern object num_Integer, what does the \"num\" mean?", 
             "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "It specifies that the object must be a number in order \
to match the pattern.", "info" -> "Incorrect", "index" -> 1, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "It specifies that the object must be a number in order \
to match the pattern.", "info" -> "Incorrect", "index" -> 1, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> 
                    "It specifies that the object must be a number in order \
to match the pattern.", "info" -> "Incorrect", "index" -> 1, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "It specifies that the object must be a number in order \
to match the pattern.", "info" -> "Incorrect", "index" -> 1, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "It specifies that the object must be a number in order \
to match the pattern.", "info" -> "Incorrect", "index" -> 1, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "It specifies that the object must be a number in order \
to match the pattern.", "info" -> "Incorrect", "index" -> 1, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "It is the name given to the object that matches the \
pattern.", "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "It is the name given to the object that matches the \
pattern.", "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "It is the name given to the object that matches the \
pattern.", "info" -> "Correct", "index" -> 2, "correct" -> True|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "It is the name given to the object that matches the \
pattern.", "info" -> "Correct", "index" -> 2, "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "It is the name given to the object that matches the \
pattern.", "info" -> "Correct", "index" -> 2, "correct" -> True|>["info"], 
                    "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "It is the name given to the object that matches the \
pattern.", "info" -> "Correct", "index" -> 2, "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "It specifies the Head required for the object to match \
the pattern.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "It specifies the Head required for the object to match \
the pattern.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "It specifies the Head required for the object to match \
the pattern.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "It specifies the Head required for the object to match \
the pattern.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "It specifies the Head required for the object to match \
the pattern.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "It specifies the Head required for the object to match \
the pattern.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 4 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "It is a user-defined predicate check that the object \
must pass for the object to match the pattern.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "It is a user-defined predicate check that the object \
must pass for the object to match the pattern.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> 
                    "It is a user-defined predicate check that the object \
must pass for the object to match the pattern.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "It is a user-defined predicate check that the object \
must pass for the object to match the pattern.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "It is a user-defined predicate check that the object \
must pass for the object to match the pattern.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> 
                    "It is a user-defined predicate check that the object \
must pass for the object to match the pattern.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{881.4999999999999, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"35551d2e-e5eb-4cbd-a7ca-\
b7150c906211"]], "Text",
 CellTags->"CYU",ExpressionUUID->"dde84c09-32f0-4ced-99d6-a842e4f7ee6e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern Constraints", "Section",ExpressionUUID->"845ac980-46b8-4468-931a-44b2713c21c2"],

Cell[CellGroupData[{

Cell["Constraining Patterns with Conditions", "Subsection",ExpressionUUID->"179aa73d-d587-4dde-9004-217864d75c50"],

Cell[TextData[{
 "Instead of expressing a pattern test with a pure function, you can use a ",
 ButtonBox["Condition",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Condition.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Condition.html"],
 ". This allows the pattern ",
 StyleBox["name",
  FontSlant->"Italic"],
 " to be referenced explicitly in the test, rather than by a slot (#)."
}], "Text",ExpressionUUID->"d8bd977e-90d7-4ba7-b94e-1083058a297c"],

Cell[TextData[{
 "The syntax for a condition is ",
 StyleBox["name",
  FontSlant->"Italic"],
 " /; ",
 StyleBox["patternTest",
  FontSlant->"Italic"],
 ":"
}], "Text",ExpressionUUID->"f2d54b70-e5b0-47c7-a926-1bd49677fd64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatString", "[", 
    RowBox[{"word_String", ",", " ", 
     RowBox[{"repetitions_", "/;", 
      RowBox[{"TrueQ", "[", 
       RowBox[{"Element", "[", 
        RowBox[{"repetitions", ",", " ", "PositiveIntegers"}], "]"}], 
       "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]}], "Input",Expre\
ssionUUID->"009bc5f5-87b1-4c7f-aca6-4cb9d1987625"],

Cell["\<\
When used in a function definition, a condition can also go outside the \
square brackets:\
\>", "Text",ExpressionUUID->"819422ff-6565-47f2-8cb3-f25c8907cfe1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"repeatString", "[", 
     RowBox[{"word_String", ",", " ", "repetitions_"}], "]"}], " ", "/;", 
    RowBox[{"TrueQ", "[", 
     RowBox[{"Element", "[", 
      RowBox[{"repetitions", ",", " ", "PositiveIntegers"}], "]"}], "]"}]}], 
   " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]}], "Input",Expre\
ssionUUID->"a94394c6-5c26-4a25-8819-e1d85b0479b1"],

Cell["\<\
Conditions are useful for applying pattern tests to multiple arguments at \
once:\
\>", "Text",ExpressionUUID->"6828c846-85f7-4090-b0f2-2c3d3ad1a580"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "repeatString", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"repeatString", "[", 
     RowBox[{"word_", ",", " ", "repetitions_"}], "]"}], " ", "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"StringQ", "[", "word", "]"}], " ", "&&", " ", 
      RowBox[{"TrueQ", "[", 
       RowBox[{"Element", "[", 
        RowBox[{"repetitions", ",", " ", "PositiveIntegers"}], "]"}], "]"}]}],
      ")"}]}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"word", ",", " ", "repetitions"}], "]"}]}], ";"}]}], "Input",Expre\
ssionUUID->"31cab03a-a33c-4b17-9e1b-9525c454e38d"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "What is matched by the pattern object a_String /; \
StringLength[a] < 5?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "A single string that has fewer than 5 characters.", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "A single string that has fewer than 5 characters.", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "A single string that has fewer than 5 characters.", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "A single string that has fewer than 5 characters.", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "A single string that has fewer than 5 characters.", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "A single string that has fewer than 5 characters.", 
                    "info" -> "Correct", "index" -> 1, "correct" -> True|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "One or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 2, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "One or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 2, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "One or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 2, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "One or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 2, "correct" -> False|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "One or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 2, "correct" -> False|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "One or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 2, "correct" -> False|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "Zero or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "Zero or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "Zero or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "Zero or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "Zero or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "Zero or more strings that each have fewer than 5 \
characters.", "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 4 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "One or more strings that\[LongDash]in \
total\[LongDash]have fewer than 5 characters.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "One or more strings that\[LongDash]in \
total\[LongDash]have fewer than 5 characters.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> 
                    "One or more strings that\[LongDash]in \
total\[LongDash]have fewer than 5 characters.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "One or more strings that\[LongDash]in \
total\[LongDash]have fewer than 5 characters.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "One or more strings that\[LongDash]in \
total\[LongDash]have fewer than 5 characters.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["info"], "Text", 
                    FontColor -> If[
                    <|
                    "statement" -> 
                    "One or more strings that\[LongDash]in \
total\[LongDash]have fewer than 5 characters.", "info" -> "Incorrect", 
                    "index" -> 4, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{881.4999999999999, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"b1d4659e-0537-4a52-96eb-\
e877d2018b2c"]], "Text",
 CellTags->"CYU",ExpressionUUID->"18d5dc1f-3702-4764-86b6-b67131f4ae4d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flexible Patterns", "Section",
 CellTags->
  "FlexiblePatterns",ExpressionUUID->"74fc02b9-8494-4085-8e59-388d28bb3d48"],

Cell["\<\
The coverage of a pattern match can be increased with a flexible pattern. \
This is useful if you do not know the exact form you\[CloseCurlyQuote]re \
looking for.\
\>", "Text",ExpressionUUID->"00bf7c12-d7d4-499d-9667-89942b20af20"],

Cell[CellGroupData[{

Cell["Blank Sequences", "Subsection",ExpressionUUID->"a5fe7640-123c-4135-8506-e05637117377"],

Cell[TextData[{
 ButtonBox["BlankSequence",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/BlankSequence.html"], 
    None},
  ButtonNote->"https://reference.wolfram.com/language/ref/BlankSequence.html"],
 " (__) stands for any non-empty sequence of expressions:"
}], "Text",ExpressionUUID->"9a20532e-79b1-4423-bc71-5a6650c95607"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "]"}], ",", " ", 
     RowBox[{"f", "[", "a", "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", " ", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"f", "[", "__", "]"}]}], "]"}]], "Input",ExpressionUUID->"4b2339e2-\
6423-4ccd-b0ca-9d24394cb7ba"],

Cell[TextData[{
 ButtonBox["BlankNullSequence",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/BlankNullSequence.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/BlankNullSequence.html"],
 " (___) stands for any\[LongDash]possibly empty\[LongDash]sequence of \
expressions:"
}], "Text",ExpressionUUID->"ebb3d157-d820-4191-ba2e-3b38a3a5a5f3"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "]"}], ",", " ", 
     RowBox[{"f", "[", "a", "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"f", "[", "___", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"d2661faa-bd83-4270-b9a8-1c2662e441c0"],

Cell["\<\
Create a function to compute the mean of a sequence of numbers:\
\>", "Text",ExpressionUUID->"da33aeff-5eba-4534-8077-bc010ed11050"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mean", "[", "sequence__", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"{", "sequence", "}"}], "]"}], " ", "/", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"{", "sequence", "}"}], "]"}]}]}]], "Input",ExpressionUUID->\
"a51611b3-0a84-45fd-a90c-62c4567f3fe3"],

Cell[BoxData[
 RowBox[{"mean", "[", 
  RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]], "Input",ExpressionUUID->\
"d60ff344-5b88-4616-a8a5-f258826e7340"],

Cell["\<\
The restrictive methods seen earlier (heads, pattern tests, conditionals) \
also apply for blank sequences:\
\>", "Text",ExpressionUUID->"2c04be4d-ed61-4726-a70a-508c8c243790"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "]"}], ",", " ", 
     RowBox[{"f", "[", "a", "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"f", "[", "__Integer", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"00fac1f5-da32-4b65-a32b-bf6a37aa4e8f"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "]"}], ",", " ", 
     RowBox[{"f", "[", "a", "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"f", "[", 
    RowBox[{"__", "?", "IntegerQ"}], "]"}]}], "]"}]], "Input",ExpressionUUID->\
"1e7e357a-86a6-44fb-8c15-e490aede4b30"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "]"}], ",", " ", 
     RowBox[{"f", "[", "a", "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", " ", "2"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"f", "[", "expression__", "]"}], "/;", " ", 
    RowBox[{"ContainsAny", "[", 
     RowBox[{
      RowBox[{"{", "expression", "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}]}]}], "]"}]], "Input",Expre\
ssionUUID->"3a4fabf6-a74b-4663-867a-ce050c14990b"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "Which of the following takes a list of pairs and returns a list \
where any pairs of perfect squares are returned in reverse order? (For \
example, {{4, 0}, {7, 4}, {7, 10}, {9, 4}, {8, 10}} \[Rule] {{0, 4}, {7, 4}, \
{7, 10}, {4, 9}, {8, 10}}.)", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; SquareQ[x] && SquareQ[y] \[Rule] \
{y, x}", "info" -> "Incorrect", "index" -> 1, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; SquareQ[x] && SquareQ[y] \[Rule] \
{y, x}", "info" -> "Incorrect", "index" -> 1, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; SquareQ[x] && SquareQ[y] \[Rule] \
{y, x}", "info" -> "Incorrect", "index" -> 1, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; SquareQ[x] && SquareQ[y] \[Rule] \
{y, x}", "info" -> "Incorrect", "index" -> 1, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; SquareQ[x] && SquareQ[y] \[Rule] \
{y, x}", "info" -> "Incorrect", "index" -> 1, "correct" -> False|>["info"], 
                    "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; SquareQ[x] && SquareQ[y] \[Rule] \
{y, x}", "info" -> "Incorrect", "index" -> 1, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_Integer, y_Integer} /; SquareQ[x] && \
SquareQ[y] \[Rule] {y, x}", "info" -> "Incorrect", "index" -> 2, "correct" -> 
                    False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "pairList /. {x_Integer, y_Integer} /; SquareQ[x] && \
SquareQ[y] \[Rule] {y, x}", "info" -> "Incorrect", "index" -> 2, "correct" -> 
                    False|>["index"], {}, 
                    <|
                    "statement" -> 
                    "pairList /. {x_Integer, y_Integer} /; SquareQ[x] && \
SquareQ[y] \[Rule] {y, x}", "info" -> "Incorrect", "index" -> 2, "correct" -> 
                    False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "pairList /. {x_Integer, y_Integer} /; SquareQ[x] && \
SquareQ[y] \[Rule] {y, x}", "info" -> "Incorrect", "index" -> 2, "correct" -> 
                    False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_Integer, y_Integer} /; SquareQ[x] && \
SquareQ[y] \[Rule] {y, x}", "info" -> "Incorrect", "index" -> 2, "correct" -> 
                    False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "pairList /. {x_Integer, y_Integer} /; SquareQ[x] && \
SquareQ[y] \[Rule] {y, x}", "info" -> "Incorrect", "index" -> 2, "correct" -> 
                    False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 3 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_?SquareQ, y_SquareQ} \[Rule] {y, x}", 
                    "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "pairList /. {x_?SquareQ, y_SquareQ} \[Rule] {y, x}", 
                    "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "index"], {}, 
                    <|
                    "statement" -> 
                    "pairList /. {x_?SquareQ, y_SquareQ} \[Rule] {y, x}", 
                    "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "pairList /. {x_?SquareQ, y_SquareQ} \[Rule] {y, x}", 
                    "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_?SquareQ, y_SquareQ} \[Rule] {y, x}", 
                    "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "pairList /. {x_?SquareQ, y_SquareQ} \[Rule] {y, x}", 
                    "info" -> "Incorrect", "index" -> 3, "correct" -> False|>[
                    "correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 4 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; Element[Sqrt[x]|Sqrt[y], \
Integers] \[Rule] {y, x}", "info" -> "Correct", "index" -> 4, "correct" -> 
                    True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; Element[Sqrt[x]|Sqrt[y], \
Integers] \[Rule] {y, x}", "info" -> "Correct", "index" -> 4, "correct" -> 
                    True|>["index"], {}, 
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; Element[Sqrt[x]|Sqrt[y], \
Integers] \[Rule] {y, x}", "info" -> "Correct", "index" -> 4, "correct" -> 
                    True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; Element[Sqrt[x]|Sqrt[y], \
Integers] \[Rule] {y, x}", "info" -> "Correct", "index" -> 4, "correct" -> 
                    True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; Element[Sqrt[x]|Sqrt[y], \
Integers] \[Rule] {y, x}", "info" -> "Correct", "index" -> 4, "correct" -> 
                    True|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> 
                    "pairList /. {x_, y_} /; Element[Sqrt[x]|Sqrt[y], \
Integers] \[Rule] {y, x}", "info" -> "Correct", "index" -> 4, "correct" -> 
                    True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{881.4999999999999, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"ecd5c026-6dfd-4d24-a03c-\
3412803f6b76"]], "Text",
 CellTags->"CYU",ExpressionUUID->"c322d00d-8018-4328-83a7-92420297fc29"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flexible Patterns", "Section",ExpressionUUID->"37859057-f491-4147-8e7b-7d8846076d84"],

Cell[CellGroupData[{

Cell["Alternatives", "Subsection",ExpressionUUID->"d51eeb30-6bc8-4a0b-8dc4-9b89e756a808"],

Cell[TextData[{
 "Use ",
 ButtonBox["Alternatives",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Alternatives.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Alternatives.html"],
 " to search for expressions that fall into multiple categories:"
}], "Text",ExpressionUUID->"9ed15354-4a4f-463d-aeeb-4b548c8009d1"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", " ", "b", ",", " ", "2", ",", " ", "c", ",", " ", "4", ",", " ",
      "2.3", ",", " ", "\"\<Hello\>\""}], "}"}], ",", " ", 
   RowBox[{"_Integer", " ", "|", " ", "_Symbol"}]}], "]"}]], "Input",Expressio\
nUUID->"cf62649f-2b23-4a13-a38f-61ee6016dcc1"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<dog\>\"", ",", " ", "\"\<cat\>\"", ",", " ", "\"\<canary\>\"", ",", 
     " ", "\"\<goat\>\"", ",", " ", "\"\<cow\>\"", ",", " ", "\"\<cat\>\""}], 
    "}"}], ",", " ", 
   RowBox[{"\"\<dog\>\"", "|", "\"\<cat\>\""}]}], "]"}]], "Input",ExpressionUU\
ID->"2052765b-7577-4473-aaab-a92295e63826"],

Cell[TextData[{
 "Note that Alternatives (|) is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " interchangeable with ",
 ButtonBox["Or",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Or.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Or.html"],
 " (||). Alternatives is a pattern object, whereas Or is a function that will \
evaluate immediately if any of its arguments resolve to True or False:"
}], "Text",ExpressionUUID->"8493c46d-9e20-40ab-a3ec-cd39af917abd"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "True"}], "}"}], ",",
    " ", 
   RowBox[{"2", "|", "True"}]}], "]"}]], "Input",ExpressionUUID->"40f022da-\
d14c-458e-8aff-df047b139c2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", " ", "2", ",", " ", "3", ",", " ", "True", ",", " ", "2", ",", 
     " ", "2", ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"2", "||", "True"}]}], "]"}]], "Input",ExpressionUUID->"2d8d3975-\
d5e2-4ebf-b450-9c5a7072ed28"],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",ExpressionUUID->"99508757-6119-43f5-abc7-b37809f31890"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flexible Patterns", "Section",ExpressionUUID->"e4cce31e-ab34-4150-8050-a39f21e4dc97"],

Cell[CellGroupData[{

Cell["Options Patterns", "Subsection",ExpressionUUID->"f08f5bfd-0389-4fcc-83a1-a2f6f00cdc17"],

Cell["Options are found at the end of a function:", "Text",ExpressionUUID->"84dbf0c6-47e5-4c16-b682-46dd568674e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", "Red"}]}], "]"}]], "Input",ExpressionU\
UID->"ab169cf5-0e98-4c0c-972b-36053cf87aac"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[1, 0, 0], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1: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
dApZxN047MGj8VRfU+rMDKJvqE3H+jEa65w4yZiZRaE55gFTj/hEn+RVlTOe
k/t7eEeZCGjs2D7iPSOXQkZCt1UcwgmHrnfKFVLo1KtmJ+V/RJ+YXffliik0
vHV8ZjLhxkbmbrkSCikU3C1cME5jLqNZVK6UQi6F7sfiCUubJRVOL6PQuq4g
efkJouftU2emv6bQltaC116E9as01adXUEhc9+eFFsIHJXlfZN9SKC387wqd
SZK/ba+CZN9RaOJ62Z+bhEOu3NgiW0WhiJTdyeS8jdNKTYZlPlDovxD/Y8wp
GlcIqHSZGgrtqzNdYEL4x/oWa5k6Cu2djP/rS5jn/ogpU0+hjdmOWamEmTmn
30k3UOisG5lGhFdytS5Jf6GQ0nfj7R2EDVeMaUl/o9Dac7uZI4TtTpd1SX2n
UFhl1m/y/YEvpdx8INVCobpTTvnk+wPHdJiaSf0gefh9JYh8f+Dn8xTEpdpI
fZYO2PUT/mDdWjTtF7mf/+tNXwn/eZDsPK2D5KFkZFYRYZEmR41pXRSqZkeN
hhGeraD9TbKb7I/P+GZPWMecHyzZQ6E75ltLVhLeE4pBso/sv30yiUv0cPoY
MCLBJvrULQtKJ3xD2uypBJdCS2LjLhwmnLBD0UZigEJMlwZ7CcIv/H9QEkMU
Ol/1a38q0Z877uQrzqNQqNjfLQ3Ev0MHTZYJxih0xl4k3obw27wV37gCCjVV
lu7uJP4/cGJrtUxQSKQhJu2rkMYS72p+fJoi+Vk7unc7YReNZ0GVoiykIeO1
+ynJk8H3s53PJVnI5/1VZEPyl73WLCxVioUsFlnqPiP5nH1XUz9OhoXsOrjX
Rkh+B3bQMbdmsND0NDWWM8n3wzzXXTaKhHNfLZ8apPE0efOx/UosdMiX+5ZB
2NVJ+8lOFRYa++mVP5vUk6HG0ISOGgs9uxQYpUTqbyjUPWf6IhbyLPS1LSD1
ebRvv43oEhZ6z7XMDOqhcdUOneljS1kooSTGzJLUc/z4iEPHSrJfeC7uO6l/
YydP5Rc6LJR9c6bNNdIf8iotK7PWsxCn685Z5TYaz9XQdXuygYVCvUa+pZF+
Mtw09vGuHgvpD7UUZzf/T3/vKycNWKiod9Wb4400lnl0aKW1IQv1fBRmvvpM
4wvjG5vNjVnoqmjqoHw9jXfmCdfom7KQSd266PgaGo+o+3azLFhotg3P+Ggl
jW19rSNlLFko38Nhoc8bkq8mPTRlRfTcq2Z3t5zGiaETD/qOsNDuPcbC5Fc0
3jXut7v8OAst/fP9nUsBjR81Xct3cWehmNl3tR88pnF35er2UA8WEqLCIulH
pB7y22WyL7LQDDDYcy6BzKMwfVv6EgvdZAcUaDygcc1OgYzrDRbaaNPorhpK
Y/5LV9vz0eT65pqOxz1pvCVjXnD4PRbSqj183MCd9Nv7dfk5D4i/9S2X5rjS
eKbHStmheBbyCjo9PdeRxgs0e/LdUlnocr9pmZs16U9JtrIXilhIQVzU2ATR
OCp05rqoFyzUYtZwL0GPxs2+r2zzX7JQbdMJxd4NNHY4pFowglloKmtawnFt
GntTTbYeVSwUsEZdnNag8ZMbZgWezSzUzbZVsBOlsfC0vp33PxZqqA2OyHtB
5vvL5chjgoXe5GRcQ2SeP5yhrH5+ioWcz0p2Vj7nYr3cofbT4gqo0e+rSEka
F/v9S7M9OF0BsS9rVhlFc7F4KGWrq6qAnmWbBAhduFgu7+/R0U0KqPy/A4sq
53CxteRX/UE9BbS9Zm6yvRIXP7OqUONsUUC1FL+Iz+Ris/G4n13bFFBsxOr8
mVJcHLZj39EvuxRQWoKHQscAByt8L7XOO6yAeqoWpS95w8FqE+FHzvsQ/hur
ssGenI86dr+456uAOurytByOcPCF9zJKZX4KqHCg4cMtCw7+EH6tQfa6AprZ
yLpfYMjBnovP73xyWwH9vF78LnM5B9fv2avbFKeArkmY60sMsrF/8kyWPlZA
LcWKBy5cZONuo9sfpCUUkbUtZ+2nM/3Y3sROfdE0RXRlp4+20vF+/NNsnedW
aUU0LvgdakXOq18OtGv4yCmiP1pi7uXG/bji+FrvfgXCSmjRpkX9OP5K65K6
RYrIfMTFpvxHH7YoWnEz0kgRJdUfGdtg2IffLK6BubcVUdPxtxr24r3YSTpV
QkNmFvLcIbur1rYbFyUt1H8TPgtJvVrlVKrRies261XuYyqhALeSyjf32jHf
6eF+u1AlpFVkUfI+8juu2pt4YMYsZTTR9v29emg9tt+ol5YWpYweelqnq8WV
Y0dO7eiPGGVUKmmnqWZZjl0f2RpQD5RRTe/HM0qMcnxF5vpv33hlxJq22X78
+msc11ytui9VGQVdeLtYsakMf/O2ChsvUkaNPbM8o91L8K4SN2/zVmXU4Jww
41dqDjZ3kagK+KmMNn5vam1XycEH58fMKm1XRguuf3VvCXmOTwW/yFvcpYyO
+1OHr/3JwjcOi3D/sZVRlY/mQKZvBi4T3rFPnVRGnk+jF0c+fYQrs+bltIqo
IJ7TOVOFu0m4xj5niiGuglrD8mvUexNw64cvcZekVNBnowfxo36xmB+r2rSX
oYJ+bU8s2Z4RjqfMni0KoFSQw+Jdmxl9oXiaOFx4qaCC1gzbR9+9EowVztgz
F6uQ/V//nrqYcQ2rzhuxPaKqghZS7fMrr/jg+Y03s8LUVNCLVA/7yIzzePkt
pYnKeSpIN+7sleKMY1h781OTfxrk99p3/vf/Vtn/AeOS2XU=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
dApZxN047MGj8VRfU+rMDKJvqE3H+jEa65w4yZiZRaE55gFTj/hEn+RVlTOe
k/t7eEeZCGjs2D7iPSOXQkZCt1UcwgmHrnfKFVLo1KtmJ+V/RJ+YXffliik0
vHV8ZjLhxkbmbrkSCikU3C1cME5jLqNZVK6UQi6F7sfiCUubJRVOL6PQuq4g
efkJouftU2emv6bQltaC116E9as01adXUEhc9+eFFsIHJXlfZN9SKC387wqd
SZK/ba+CZN9RaOJ62Z+bhEOu3NgiW0WhiJTdyeS8jdNKTYZlPlDovxD/Y8wp
GlcIqHSZGgrtqzNdYEL4x/oWa5k6Cu2djP/rS5jn/ogpU0+hjdmOWamEmTmn
30k3UOisG5lGhFdytS5Jf6GQ0nfj7R2EDVeMaUl/o9Dac7uZI4TtTpd1SX2n
UFhl1m/y/YEvpdx8INVCobpTTvnk+wPHdJiaSf0gefh9JYh8f+Dn8xTEpdpI
fZYO2PUT/mDdWjTtF7mf/+tNXwn/eZDsPK2D5KFkZFYRYZEmR41pXRSqZkeN
hhGeraD9TbKb7I/P+GZPWMecHyzZQ6E75ltLVhLeE4pBso/sv30yiUv0cPoY
MCLBJvrULQtKJ3xD2uypBJdCS2LjLhwmnLBD0UZigEJMlwZ7CcIv/H9QEkMU
Ol/1a38q0Z877uQrzqNQqNjfLQ3Ev0MHTZYJxih0xl4k3obw27wV37gCCjVV
lu7uJP4/cGJrtUxQSKQhJu2rkMYS72p+fJoi+Vk7unc7YReNZ0GVoiykIeO1
+ynJk8H3s53PJVnI5/1VZEPyl73WLCxVioUsFlnqPiP5nH1XUz9OhoXsOrjX
Rkh+B3bQMbdmsND0NDWWM8n3wzzXXTaKhHNfLZ8apPE0efOx/UosdMiX+5ZB
2NVJ+8lOFRYa++mVP5vUk6HG0ISOGgs9uxQYpUTqbyjUPWf6IhbyLPS1LSD1
ebRvv43oEhZ6z7XMDOqhcdUOneljS1kooSTGzJLUc/z4iEPHSrJfeC7uO6l/
YydP5Rc6LJR9c6bNNdIf8iotK7PWsxCn685Z5TYaz9XQdXuygYVCvUa+pZF+
Mtw09vGuHgvpD7UUZzf/T3/vKycNWKiod9Wb4400lnl0aKW1IQv1fBRmvvpM
4wvjG5vNjVnoqmjqoHw9jXfmCdfom7KQSd266PgaGo+o+3azLFhotg3P+Ggl
jW19rSNlLFko38Nhoc8bkq8mPTRlRfTcq2Z3t5zGiaETD/qOsNDuPcbC5Fc0
3jXut7v8OAst/fP9nUsBjR81Xct3cWehmNl3tR88pnF35er2UA8WEqLCIulH
pB7y22WyL7LQDDDYcy6BzKMwfVv6EgvdZAcUaDygcc1OgYzrDRbaaNPorhpK
Y/5LV9vz0eT65pqOxz1pvCVjXnD4PRbSqj183MCd9Nv7dfk5D4i/9S2X5rjS
eKbHStmheBbyCjo9PdeRxgs0e/LdUlnocr9pmZs16U9JtrIXilhIQVzU2ATR
OCp05rqoFyzUYtZwL0GPxs2+r2zzX7JQbdMJxd4NNHY4pFowglloKmtawnFt
GntTTbYeVSwUsEZdnNag8ZMbZgWezSzUzbZVsBOlsfC0vp33PxZqqA2OyHtB
5vvL5chjgoXe5GRcQ2SeP5yhrH5+ioWcz0p2Vj7nYr3cofbT4gqo0e+rSEka
F/v9S7M9OF0BsS9rVhlFc7F4KGWrq6qAnmWbBAhduFgu7+/R0U0KqPy/A4sq
53CxteRX/UE9BbS9Zm6yvRIXP7OqUONsUUC1FL+Iz+Ris/G4n13bFFBsxOr8
mVJcHLZj39EvuxRQWoKHQscAByt8L7XOO6yAeqoWpS95w8FqE+FHzvsQ/hur
ssGenI86dr+456uAOurytByOcPCF9zJKZX4KqHCg4cMtCw7+EH6tQfa6AprZ
yLpfYMjBnovP73xyWwH9vF78LnM5B9fv2avbFKeArkmY60sMsrF/8kyWPlZA
LcWKBy5cZONuo9sfpCUUkbUtZ+2nM/3Y3sROfdE0RXRlp4+20vF+/NNsnedW
aUU0LvgdakXOq18OtGv4yCmiP1pi7uXG/bji+FrvfgXCSmjRpkX9OP5K65K6
RYrIfMTFpvxHH7YoWnEz0kgRJdUfGdtg2IffLK6BubcVUdPxtxr24r3YSTpV
QkNmFvLcIbur1rYbFyUt1H8TPgtJvVrlVKrRies261XuYyqhALeSyjf32jHf
6eF+u1AlpFVkUfI+8juu2pt4YMYsZTTR9v29emg9tt+ol5YWpYweelqnq8WV
Y0dO7eiPGGVUKmmnqWZZjl0f2RpQD5RRTe/HM0qMcnxF5vpv33hlxJq22X78
+msc11ytui9VGQVdeLtYsakMf/O2ChsvUkaNPbM8o91L8K4SN2/zVmXU4Jww
41dqDjZ3kagK+KmMNn5vam1XycEH58fMKm1XRguuf3VvCXmOTwW/yFvcpYyO
+1OHr/3JwjcOi3D/sZVRlY/mQKZvBi4T3rFPnVRGnk+jF0c+fYQrs+bltIqo
IJ7TOVOFu0m4xj5niiGuglrD8mvUexNw64cvcZekVNBnowfxo36xmB+r2rSX
oYJ+bU8s2Z4RjqfMni0KoFSQw+Jdmxl9oXiaOFx4qaCC1gzbR9+9EowVztgz
F6uQ/V//nrqYcQ2rzhuxPaKqghZS7fMrr/jg+Y03s8LUVNCLVA/7yIzzePkt
pYnKeSpIN+7sleKMY1h781OTfxrk99p3/vf/Vtn/AeOS2XU=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 
             0.9999998782112116}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 
            0.9999998782112116}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
dApZxN047MGj8VRfU+rMDKJvqE3H+jEa65w4yZiZRaE55gFTj/hEn+RVlTOe
k/t7eEeZCGjs2D7iPSOXQkZCt1UcwgmHrnfKFVLo1KtmJ+V/RJ+YXffliik0
vHV8ZjLhxkbmbrkSCikU3C1cME5jLqNZVK6UQi6F7sfiCUubJRVOL6PQuq4g
efkJouftU2emv6bQltaC116E9as01adXUEhc9+eFFsIHJXlfZN9SKC387wqd
SZK/ba+CZN9RaOJ62Z+bhEOu3NgiW0WhiJTdyeS8jdNKTYZlPlDovxD/Y8wp
GlcIqHSZGgrtqzNdYEL4x/oWa5k6Cu2djP/rS5jn/ogpU0+hjdmOWamEmTmn
30k3UOisG5lGhFdytS5Jf6GQ0nfj7R2EDVeMaUl/o9Dac7uZI4TtTpd1SX2n
UFhl1m/y/YEvpdx8INVCobpTTvnk+wPHdJiaSf0gefh9JYh8f+Dn8xTEpdpI
fZYO2PUT/mDdWjTtF7mf/+tNXwn/eZDsPK2D5KFkZFYRYZEmR41pXRSqZkeN
hhGeraD9TbKb7I/P+GZPWMecHyzZQ6E75ltLVhLeE4pBso/sv30yiUv0cPoY
MCLBJvrULQtKJ3xD2uypBJdCS2LjLhwmnLBD0UZigEJMlwZ7CcIv/H9QEkMU
Ol/1a38q0Z877uQrzqNQqNjfLQ3Ev0MHTZYJxih0xl4k3obw27wV37gCCjVV
lu7uJP4/cGJrtUxQSKQhJu2rkMYS72p+fJoi+Vk7unc7YReNZ0GVoiykIeO1
+ynJk8H3s53PJVnI5/1VZEPyl73WLCxVioUsFlnqPiP5nH1XUz9OhoXsOrjX
Rkh+B3bQMbdmsND0NDWWM8n3wzzXXTaKhHNfLZ8apPE0efOx/UosdMiX+5ZB
2NVJ+8lOFRYa++mVP5vUk6HG0ISOGgs9uxQYpUTqbyjUPWf6IhbyLPS1LSD1
ebRvv43oEhZ6z7XMDOqhcdUOneljS1kooSTGzJLUc/z4iEPHSrJfeC7uO6l/
YydP5Rc6LJR9c6bNNdIf8iotK7PWsxCn685Z5TYaz9XQdXuygYVCvUa+pZF+
Mtw09vGuHgvpD7UUZzf/T3/vKycNWKiod9Wb4400lnl0aKW1IQv1fBRmvvpM
4wvjG5vNjVnoqmjqoHw9jXfmCdfom7KQSd266PgaGo+o+3azLFhotg3P+Ggl
jW19rSNlLFko38Nhoc8bkq8mPTRlRfTcq2Z3t5zGiaETD/qOsNDuPcbC5Fc0
3jXut7v8OAst/fP9nUsBjR81Xct3cWehmNl3tR88pnF35er2UA8WEqLCIulH
pB7y22WyL7LQDDDYcy6BzKMwfVv6EgvdZAcUaDygcc1OgYzrDRbaaNPorhpK
Y/5LV9vz0eT65pqOxz1pvCVjXnD4PRbSqj183MCd9Nv7dfk5D4i/9S2X5rjS
eKbHStmheBbyCjo9PdeRxgs0e/LdUlnocr9pmZs16U9JtrIXilhIQVzU2ATR
OCp05rqoFyzUYtZwL0GPxs2+r2zzX7JQbdMJxd4NNHY4pFowglloKmtawnFt
GntTTbYeVSwUsEZdnNag8ZMbZgWezSzUzbZVsBOlsfC0vp33PxZqqA2OyHtB
5vvL5chjgoXe5GRcQ2SeP5yhrH5+ioWcz0p2Vj7nYr3cofbT4gqo0e+rSEka
F/v9S7M9OF0BsS9rVhlFc7F4KGWrq6qAnmWbBAhduFgu7+/R0U0KqPy/A4sq
53CxteRX/UE9BbS9Zm6yvRIXP7OqUONsUUC1FL+Iz+Ris/G4n13bFFBsxOr8
mVJcHLZj39EvuxRQWoKHQscAByt8L7XOO6yAeqoWpS95w8FqE+FHzvsQ/hur
ssGenI86dr+456uAOurytByOcPCF9zJKZX4KqHCg4cMtCw7+EH6tQfa6AprZ
yLpfYMjBnovP73xyWwH9vF78LnM5B9fv2avbFKeArkmY60sMsrF/8kyWPlZA
LcWKBy5cZONuo9sfpCUUkbUtZ+2nM/3Y3sROfdE0RXRlp4+20vF+/NNsnedW
aUU0LvgdakXOq18OtGv4yCmiP1pi7uXG/bji+FrvfgXCSmjRpkX9OP5K65K6
RYrIfMTFpvxHH7YoWnEz0kgRJdUfGdtg2IffLK6BubcVUdPxtxr24r3YSTpV
QkNmFvLcIbur1rYbFyUt1H8TPgtJvVrlVKrRies261XuYyqhALeSyjf32jHf
6eF+u1AlpFVkUfI+8juu2pt4YMYsZTTR9v29emg9tt+ol5YWpYweelqnq8WV
Y0dO7eiPGGVUKmmnqWZZjl0f2RpQD5RRTe/HM0qMcnxF5vpv33hlxJq22X78
+msc11ytui9VGQVdeLtYsakMf/O2ChsvUkaNPbM8o91L8K4SN2/zVmXU4Jww
41dqDjZ3kagK+KmMNn5vam1XycEH58fMKm1XRguuf3VvCXmOTwW/yFvcpYyO
+1OHr/3JwjcOi3D/sZVRlY/mQKZvBi4T3rFPnVRGnk+jF0c+fYQrs+bltIqo
IJ7TOVOFu0m4xj5niiGuglrD8mvUexNw64cvcZekVNBnowfxo36xmB+r2rSX
oYJ+bU8s2Z4RjqfMni0KoFSQw+Jdmxl9oXiaOFx4qaCC1gzbR9+9EowVztgz
F6uQ/V//nrqYcQ2rzhuxPaKqghZS7fMrr/jg+Y03s8LUVNCLVA/7yIzzePkt
pYnKeSpIN+7sleKMY1h781OTfxrk99p3/vf/Vtn/AeOS2XU=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
     0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",ExpressionUUID->"2a414c22-086e-\
4c1c-9ad7-2f5a0cff42ef"]
}, Open  ]],

Cell["\<\
They are used so often that they have their own pattern object:\
\>", "Text",ExpressionUUID->"02805ce1-f4e8-4a4c-b934-03d00b1d0a19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"\"\<OptionName\>\"", " ", "\[Rule]", " ", "optionValue"}], ",", 
   " ", 
   RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"3bc6029b-9ac9-4142-8127-a6b0a2162f53"],

Cell[BoxData["True"], "Output",ExpressionUUID->"23d8815b-0e75-469f-b80d-ddebfb888a8c"]
}, Open  ]],

Cell[TextData[{
 "Adding options to a function typically requires the use of ",
 ButtonBox["Options",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Options.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Options.html"],
 ", ",
 ButtonBox["OptionValue",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/OptionValue.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/OptionValue.html"],
 " and ",
 ButtonBox["OptionsPattern",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/OptionsPattern.html"], 
    None},
  ButtonNote->"http://reference.wolfram.com/language/ref/OptionsPattern.html"],
 "."
}], "Text",ExpressionUUID->"df0955d4-a9fb-455b-bffb-0800a5cdbe1b"],

Cell["\<\
The setup is as follows. First, use Options to specify a list of options your \
function can take, along with their default values:\
\>", "Text",ExpressionUUID->"9fc39dd8-fa16-418e-bb16-cd128443785d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "colorText", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<TextColor\>\"", " ", "->", " ", "Red"}], "}"}]}], 
  ";"}]], "Input",ExpressionUUID->"b116f371-8a4e-429e-b29f-5934828374dd"],

Cell[TextData[{
 "Next, insert OptionsPattern on the left-hand side of the ",
 ButtonBox["SetDelayed",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/SetDelayed.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/SetDelayed.html"],
 " (:=) to represent a collection of zero or more options. It is usually \
convenient to give it a name with Pattern:"
}], "Text",ExpressionUUID->"e01aa622-9ab5-4e41-8311-08251f15a1fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorText", "[", 
   RowBox[{"string_String", ",", " ", 
    RowBox[{"options", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  TagBox[
   FrameBox["\<\"Some combination of arguments and option values\"\>"],
   "Placeholder"]}]], "Input",
 Evaluatable->False,ExpressionUUID->"23b81535-1a84-409b-aa6f-09608b31c66b"],

Cell["\<\
Finally, insert the options into the expression on the right-hand side:\
\>", "Text",ExpressionUUID->"fef4c91f-7c00-4f13-a0b0-8af2e37e1e88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"colorText", "[", 
     RowBox[{"string_String", ",", " ", 
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "  ", 
    RowBox[{"Style", "[", 
     RowBox[{"string", ",", " ", "options"}], "]"}]}], ";"}], 
  "\[LineSeparator]"}]], "Input",
 Evaluatable->False,ExpressionUUID->"1d7f2702-f346-4269-9c06-e85b18fefa7a"],

Cell["\<\
Use OptionValue to place individual option values separately:\
\>", "Text",ExpressionUUID->"9eebbe97-a95e-4483-9d53-8566dce2d701"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"colorText", "[", 
    RowBox[{"string_String", ",", " ", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "  ", 
   RowBox[{"Style", "[", 
    RowBox[{"string", ",", " ", 
     RowBox[{"FontColor", " ", "->", " ", 
      RowBox[{"OptionValue", "[", "\"\<TextColor\>\"", "]"}]}], ",", " ", 
     "options"}], "]"}]}], ";"}]], "Input",ExpressionUUID->"8cd2434b-fcbf-\
4427-b9d0-090d34f64267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorText", "[", 
  RowBox[{"\"\<hello\>\"", ",", " ", 
   RowBox[{"\"\<TextColor\>\"", " ", "->", " ", "Blue"}]}], "]"}]], "Input",Ex\
pressionUUID->"880a1f34-30ca-4442-8539-bb89145c79ab"],

Cell[BoxData[
 RowBox[{"colorText", "[", 
  RowBox[{"\<\"hello\"\>", ",", 
   RowBox[{"\<\"TextColor\"\>", "\[Rule]", 
    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
     "RGBColorSwatchTemplate"]}]}], "]"}]], "Output",ExpressionUUID->\
"30acd82e-0420-4007-9961-17bcb85f4a7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flexible Patterns", "Section",ExpressionUUID->"392eb542-1fe1-49c9-bdf7-0cfcb2f70aeb"],

Cell[CellGroupData[{

Cell["Optional Arguments and Default Values", "Subsection",ExpressionUUID->"422ae366-add2-4573-a138-4275eb6f9c38"],

Cell[TextData[{
 "Arguments in a function can be supplied with default values using ",
 ButtonBox["Optional",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Optional.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Optional.html"],
 " (:), enabling the function to be evaluated with these arguments omitted."
}], "Text",ExpressionUUID->"a46bd466-8998-4304-83bc-8d09aeb04f14"],

Cell[TextData[{
 "The syntax for this is ",
 StyleBox["argumentPattern",
  FontSlant->"Italic"],
 " : ",
 StyleBox["defaultValue",
  FontSlant->"Italic"],
 ":"
}], "Text",ExpressionUUID->"83192c97-5346-4a55-9d03-ec097c73247a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "colorText", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorText", "[", 
    RowBox[{"string_String", ":", "\"\<Default text\>\""}], "]"}], " ", ":=", 
   "  ", 
   RowBox[{"Style", "[", 
    RowBox[{"string", ",", " ", "Italic"}], "]"}]}], ";"}]}], "Input",Expressi\
onUUID->"1cb4e51c-833a-409a-ada0-d2e4a2a6fd29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorText", "[", "\"\<cool\>\"", "]"}]], "Input",ExpressionUUID->"38a2e6e1-2fea-4852-a21f-99981b2c6938"],

Cell[BoxData[
 StyleBox["\<\"cool\"\>",
  StripOnInput->False,
  FontSlant->Italic]], "Output",ExpressionUUID->"b5c37b1b-7f65-41ae-a374-\
ec6ac5fa0fad"]
}, Open  ]],

Cell["\<\
The short form of Optional is the same as that for Pattern (a colon). \
However, it will usually be clear which is which from the context.\
\>", "Text",ExpressionUUID->"f6b6f940-8d46-4496-9a49-c9a3b417c7fb"],

Cell["\<\
When using Pattern and Optional together, the pattern must go first:\
\>", "Text",ExpressionUUID->"99ee891b-9ae6-4b79-919f-1ebe22e1b9c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "colorText", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorText", "[", 
    RowBox[{"string", ":", "_String", ":", "\"\<Default text\>\""}], "]"}], 
   " ", ":=", "  ", 
   RowBox[{"Style", "[", 
    RowBox[{"string", ",", " ", "Italic"}], "]"}]}], ";"}]}], "Input",Expressi\
onUUID->"ef3cef50-2af0-433d-87d4-5f66e3c7d9de"],

Cell[BoxData[
 RowBox[{"colorText", "[", "]"}]], "Input",ExpressionUUID->"93066e62-8ac8-465e-b5fa-f21d624606c3"],

Cell[TextData[{
 "The syntax ",
 StyleBox["name",
  FontSlant->"Italic"],
 "_?",
 StyleBox["patternTest",
  FontSlant->"Italic"],
 " : ",
 StyleBox["defaultValue",
  FontSlant->"Italic"],
 " is not permitted. If you want to apply a pattern test and have a default \
value, you must use Pattern:"
}], "Text",ExpressionUUID->"b313810e-7abc-471b-99c8-8632b5a8e15b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"badSyntax1", "[", 
    RowBox[{
     RowBox[{"arg_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ":", "1"}], "]"}], " ", ":=",
    " ", "arg"}], ";"}]], "Input",ExpressionUUID->"9b4d1fd3-b48a-49e2-9924-\
3e63ea41a24d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"badSyntax2", "[", 
    RowBox[{
     RowBox[{"arg_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ":", "1"}], "]"}], " ", ":=",
    " ", "arg"}], ";"}]], "Input",ExpressionUUID->"87ee6c92-5879-4b63-9fc5-\
b71fde2edc05"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"goodSyntax", "[", 
    RowBox[{"arg", ":", 
     RowBox[{"_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ":", "1"}], "]"}], " ", ":=",
    " ", "arg"}], ";"}]], "Input",ExpressionUUID->"7a059f4c-49a6-4791-9747-\
30e6dc4c8ad6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["String Patterns", "Section",
 CellTags->
  "StringPatterns",ExpressionUUID->"c46c91d0-97a6-408f-8cc3-0b3ce5643bc3"],

Cell[CellGroupData[{

Cell["String Operations", "Subsection",ExpressionUUID->"5cddf975-53dc-4f8c-b294-9cda22f125df"],

Cell["\<\
When pattern matching, a string is handled as one object, whether it is a \
single character or an entire paragraph in a foreign language. Because of \
their variety, strings have their own special pattern syntax.\
\>", "Text",ExpressionUUID->"cbc5e12b-1db5-4309-909a-78e0fec3bc6e"],

Cell[TextData[{
 "Use ",
 ButtonBox["StringExpression",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/StringExpression.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/StringExpression.html"],
 " (~~) to set up a string pattern:"
}], "Text",ExpressionUUID->"e3180cf8-5e68-464f-8d1b-563b06da25c4"],

Cell[BoxData[
 RowBox[{"\"\<a\>\"", " ", "~~", "_", "~~", "\"\<c\>\""}]], "Input",
 Evaluatable->False,ExpressionUUID->"a8fd3fe4-85f5-4310-bce5-ee5786829311"],

Cell[TextData[{
 "Verify that a string matches a string pattern with ",
 ButtonBox["StringMatchQ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/StringMatchQ.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/StringMatchQ.html"],
 ":"
}], "Text",ExpressionUUID->"de08c3dc-1b72-411b-8854-a98d44dd60d1"],

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{"\"\<abc\>\"", 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{"\"\<a\>\"", " ", "~~", "_", "~~", "\"\<c\>\""}]}], "]"}]], "Input",\
ExpressionUUID->"06bc3295-2ec6-4901-9b38-b04f06d92602"],

Cell["\<\
The usual rules for blank sequences remain the same for strings:\
\>", "Text",ExpressionUUID->"2071f494-4769-4f7f-ab82-9c6333a878cf"],

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{"\"\<abcd\>\"", 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{"\"\<a\>\"", " ", "~~", "_", "~~", "\"\<d\>\""}]}], "]"}]], "Input",\
ExpressionUUID->"4be915f0-7d72-4f31-9391-c7137d9f0494"],

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{"\"\<abcd\>\"", 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{"\"\<a\>\"", " ", "~~", "__", "~~", "\"\<d\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"14ceace4-4d10-4b59-a531-735ff4296174"],

Cell[TextData[{
 "Use ",
 ButtonBox["StringCases",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/StringCases.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/StringCases.html"],
 " to collect all the substrings in a string that match a string pattern:"
}], "Text",ExpressionUUID->"49ff58ee-b70c-4a2c-b417-907db6afeee7"],

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"\"\<j23s93juh4swe2\>\"", ",", 
   RowBox[{"_", "?", "LetterQ"}]}], "]"}]], "Input",ExpressionUUID->"29539c96-\
1ab1-4a80-90b2-a3c9b31454c9"],

Cell[TextData[{
 "Use ",
 ButtonBox["StringReplace",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/StringReplace.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/StringReplace.html"],
 " to replace part of a string:"
}], "Text",ExpressionUUID->"b33f8d37-402b-44ef-88f5-d76824412319"],

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<abcd\>\"", 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{"\"\<a\>\"", " ", "~~", "middle__", "~~", "\"\<d\>\""}], " ", ":>",
     " ", 
    RowBox[{"\"\<(\>\"", "<>", "middle", "<>", "\"\<)\>\""}]}]}], 
  "]"}]], "Input",ExpressionUUID->"6de53655-a9f4-449a-9dcb-aa6d95406066"],

Cell[TextData[{
 "As well as letters, numbers and punctuation, there are symbolic \
representations of textual structure, such as ",
 ButtonBox["StartOfString",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/StartOfString.html"], 
    None},
  ButtonNote->"https://reference.wolfram.com/language/ref/StartOfString.html"],
 ", ",
 ButtonBox["EndOfString",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EndOfString.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/EndOfString.html"],
 ", ",
 ButtonBox["Whitespace",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Whitespace.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Whitespace.html"],
 ", ",
 ButtonBox["StartOfLine",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/StartOfLine.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/StartOfLine.html"],
 " and ",
 ButtonBox["EndOfLine",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/EndOfLine.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/EndOfLine.html"],
 ":"
}], "Text",ExpressionUUID->"ea7c3e79-bd74-4e7e-875f-b4d4f1b60344"],

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{"\"\<abc xyz\>\"", ",", " ", 
   RowBox[{
   "\"\<abc\>\"", " ", "~~", " ", "Whitespace", " ", "~~", " ", 
    "\"\<xyz\>\""}]}], "]"}]], "Input",ExpressionUUID->"a13f3646-b521-4b77-\
9568-338dc68023b5"],

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<impair\>\"", ",", " ", 
   RowBox[{
    RowBox[{"StartOfString", " ", "~~", " ", 
     RowBox[{"Repeated", "[", 
      RowBox[{"LetterCharacter", ",", " ", "2"}], "]"}]}], "  ", "\[Rule]", 
    " ", "\"\<re\>\""}]}], "]"}]], "Input",ExpressionUUID->"bf72f821-d3e0-\
4fd2-abaf-d13db8b777f5"],

Cell[TextData[{
 "More string operations can be found in the following guide: ",
 ButtonBox["String Operations",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/guide/StringOperations.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/guide/StringOperations.html"],
 "."
}], "Text",ExpressionUUID->"192a1306-728a-459a-b23f-6d52d2e35993"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "CYUButton"], 
          TextCell[#, "CYUButton" <> "Active"]]& )[
          Framed[
           Style["Check Your Understanding", "CYUButton"], RoundingRadius -> 
           5, FrameMargins -> {{18, 18}, {15, 15}}, ImageSize -> {205, 51}, 
           BaseStyle -> "Text"]], (WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         Framed[
          Column[{
            TextCell[
            "What would be the result of StringMatchQ[\"ab c\", __ ~~ \
Whitespace ~~ __]?", "Text"], 
            DynamicModule[{WolframUTools`Private`qState = None}, 
             RadioButtonBar[
              Dynamic[WolframUTools`Private`qState], {1 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "True", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "True", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["index"], {}, 
                    <|
                    "statement" -> "True", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "True", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "True", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "True", "info" -> "Correct", "index" -> 1, 
                    "correct" -> True|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]], 2 -> Dynamic[
                 Column[{
                   TextCell[
                    <|
                    "statement" -> "False", "info" -> "Incorrect", "index" -> 
                    2, "correct" -> False|>["statement"], "Text", 
                    Apply[Sequence, 
                    Which[
                    WolframUTools`Private`qState =!= <|
                    "statement" -> "False", "info" -> "Incorrect", "index" -> 
                    2, "correct" -> False|>["index"], {}, 
                    <|
                    "statement" -> "False", "info" -> "Incorrect", "index" -> 
                    2, "correct" -> False|>["correct"], {
                    FontColor -> Darker[Green, 5/9], FontWeight -> Bold}, 
                    True, {FontColor -> Darker[Red, 5/9], FontWeight -> 
                    Bold}]]], 
                   If[
                   WolframUTools`Private`qState === <|
                    "statement" -> "False", "info" -> "Incorrect", "index" -> 
                    2, "correct" -> False|>["index"], 
                    TextCell[
                    <|
                    "statement" -> "False", "info" -> "Incorrect", "index" -> 
                    2, "correct" -> False|>["info"], "Text", FontColor -> If[
                    <|
                    "statement" -> "False", "info" -> "Incorrect", "index" -> 
                    2, "correct" -> False|>["correct"], 
                    Darker[Green], 
                    Darker[Red]]], Nothing]}, BaselinePosition -> {1, 1}, 
                  Spacings -> 0]]}, Appearance -> "Vertical", 
              BaselinePosition -> Automatic], DynamicModuleValues :> {}]}], 
          FrameStyle -> Directive[
            GrayLevel[0.92], 
            Thickness[Large]], RoundingRadius -> 0, Background -> 
          GrayLevel[0.97], FrameMargins -> 15]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{881.4999999999999, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"2c2c5895-451f-46fe-ab43-\
6f2a1d89d9e3"]], "Text",
 CellTags->"CYU",ExpressionUUID->"0488476d-ad4d-4ca4-8675-9fd40f9c4320"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attributes (Optional)", "Section",
 CellTags->
  "Attributes",ExpressionUUID->"16cdd1c2-55ae-480d-9032-78b75344a06e"],

Cell[TextData[{
 "All built-in functions have ",
 ButtonBox["Attributes",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Attributes.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Attributes.html"],
 " that affect their behavior. Adding an attribute to a function can save \
pattern-writing time, but it may cause the function to behave in unexpected \
ways:"
}], "Text",ExpressionUUID->"6b1bc3f7-143f-4cf1-80f7-e2f6fd49a935"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "square", "]"}], ";", " ", 
   RowBox[{
    RowBox[{"Attributes", "[", "square", "]"}], " ", "=", " ", 
    RowBox[{"{", "Listable", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"square", "[", "num_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"num", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"square", "[", "___", "]"}], " ", ":=", " ", "$Failed"}], 
  ";"}]}], "Input",ExpressionUUID->"38c0c96c-1b56-4860-ba74-4f648f2f5725"],

Cell[BoxData[
 RowBox[{
  RowBox[{"square", "[", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "3", ",", " ", "4"}], "}"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Expecting", " ", "$Failed"}], " ", "*)"}]}]], "Input",ExpressionUU\
ID->"a63fc4e2-3c91-484d-bebd-859ad1a46547"],

Cell[TextData[{
 "All built-in functions have the ",
 ButtonBox["Protected",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Protected.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Protected.html"],
 " attribute to prevent users from overwriting them. The most commonly used \
attributes in user-defined functions are detailed below."
}], "Text",ExpressionUUID->"8e0c88b3-dad2-4347-9c7a-3a9968bfcdbf"],

Cell[CellGroupData[{

Cell["Flat", "Subsubsection",ExpressionUUID->"378100b2-e477-4f47-9f4f-f7398dc044e6"],

Cell[TextData[{
 ButtonBox["Flat",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Flat.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Flat.html"],
 " will flatten out any occurrences where a function is nested within itself:"
}], "Text",ExpressionUUID->"054c640a-9a46-46f9-802b-123a36f332d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"{", "Flat", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"f", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "]"}]}], "Input",ExpressionUUID->\
"c1c223a3-e700-44cb-945d-65a736c95526"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Listable", "Subsubsection",ExpressionUUID->"50694448-331f-4a55-ad88-39218c6e7472"],

Cell[TextData[{
 ButtonBox["Listable",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Listable.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Listable.html"],
 " will automatically thread a function over the elements in a list:"
}], "Text",ExpressionUUID->"f46a72a0-2870-4ca9-99f5-996782ab5c8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], "]"}]}], "Input",Expres\
sionUUID->"bc03c766-79b1-4c08-a809-b9b67fb3f9db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orderless", "Subsubsection",ExpressionUUID->"dde2276d-28b1-4314-9c70-7b24e40e1493"],

Cell[TextData[{
 ButtonBox["Orderless",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Orderless.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Orderless.html"],
 " will make the order of the arguments in a function irrelevant by sorting \
them:"
}], "Text",ExpressionUUID->"86d8decd-cab6-4557-93d7-f8631ce044bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"{", "Orderless", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"3", ",", " ", "2", ",", " ", "1"}], "]"}]}], "Input",ExpressionUUID\
->"fec3fd8d-45f0-4640-bfe0-cd6a594a03d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hold attributes", "Subsubsection",ExpressionUUID->"937d66f6-958f-4d5a-bc65-5b74d92c82eb"],

Cell[TextData[{
 ButtonBox["HoldFirst",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/HoldFirst.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/HoldFirst.html"],
 " will keep the first argument unevaluated (\[OpenCurlyDoubleQuote]holding\
\[CloseCurlyDoubleQuote] it) when a function is called:"
}], "Text",ExpressionUUID->"426f9011-768c-40c4-90e8-d4819204f673"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldFirst", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"1", "+", "1"}], ",", " ", 
   RowBox[{"2", "+", "2"}], ",", " ", 
   RowBox[{"3", "+", "3"}]}], "]"}]}], "Input",ExpressionUUID->"dc747717-9cfc-\
4ddd-aaa4-99c4b8b8576e"],

Cell[TextData[{
 ButtonBox["HoldRest",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/HoldRest.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/HoldRest.html"],
 " will hold all ",
 StyleBox["but",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "the first argument:"
}], "Text",ExpressionUUID->"2d09f0fa-aba9-4865-85d2-409996baf61e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldRest", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"1", "+", "1"}], ",", " ", 
   RowBox[{"2", "+", "2"}], ",", " ", 
   RowBox[{"3", "+", "3"}]}], "]"}]}], "Input",ExpressionUUID->"c3d41367-d041-\
4249-b51a-45cecba4a774"],

Cell[TextData[{
 ButtonBox["HoldAll",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/HoldAll.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/HoldAll.html"],
 " will hold all arguments:"
}], "Text",ExpressionUUID->"214b18ca-0a40-476c-a0b0-aa35f55aad3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldAll", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"1", "+", "1"}], ",", " ", 
   RowBox[{"2", "+", "2"}], ",", " ", 
   RowBox[{"3", "+", "3"}]}], "]"}]}], "Input",ExpressionUUID->"7fd127cc-465b-\
4147-90a1-b17f5fd08e6b"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["More attributes",
 FontColor->GrayLevel[0.5]]], "Subsubsubsection",
 WholeCellGroupOpener->True,
 CellFrameMargins->{{Inherited, Inherited}, {3, 3}},
 Background->GrayLevel[
  0.95],ExpressionUUID->"abbe90e3-70ba-4a91-b84c-f9528e2be8dc"],

Cell["\<\
The following table can be found in the Attributes documentation:\
\>", "Text",ExpressionUUID->"59e59dbb-5a3c-43f2-996e-96d081435a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\"\<Attribute\>\"", ",", " ", "\"\<Description\>\""}], "}"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Button", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Mouseover", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "\"\<Hyperlink\>\""}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "\"\<HyperlinkActive\>\""}], "]"}]}], "]"}],
              ",", 
             RowBox[{"NotebookLocate", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"URL", "[", 
                 RowBox[{"StringJoin", "[", 
                  RowBox[{
                  "\"\<https://reference.wolfram.com/language/ref/\>\"", ",", 
                   " ", "#"}], "]"}], "]"}], ",", "None"}], "}"}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"Appearance", " ", "->", " ", "None"}]}], 
            "\[IndentingNewLine]", "]"}], " ", "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
           "\"\<Constant\>\"", ",", "\"\<Flat\>\"", ",", "\"\<HoldAll\>\"", 
            ",", "\"\<HoldAllComplete\>\"", ",", "\"\<HoldFirst\>\"", ",", 
            "\"\<HoldRest\>\"", ",", "\"\<Listable\>\"", ",", 
            "\"\<Locked\>\"", ",", "\"\<NHoldAll\>\"", ",", 
            "\"\<NHoldFirst\>\"", ",", "\"\<NHoldRest\>\"", ",", 
            "\"\<NumericFunction\>\"", ",", "\"\<OneIdentity\>\"", ",", 
            "\"\<Orderless\>\"", ",", "\"\<Protected\>\"", ",", 
            "\"\<ReadProtected\>\"", ",", "\"\<SequenceHold\>\"", ",", 
            "\"\<Stub\>\"", ",", "\"\<Temporary\>\""}], "\[IndentingNewLine]",
            "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<all derivatives of \
\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) are zero\>\"", ",", 
          "\[IndentingNewLine]", 
          "\"\<\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) is associative\>\
\"", ",", "\[IndentingNewLine]", 
          "\"\<all the arguments of \
\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) are not evaluated\>\"", ",", 
          "\[IndentingNewLine]", 
          "\"\<the arguments of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) \
are completely shielded from evaluation\>\"", ",", "\[IndentingNewLine]", 
          "\"\<the first argument of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\
\"]\) is not evaluated\>\"", ",", "\[IndentingNewLine]", 
          "\"\<all but the first argument of \!\(\*StyleBox[\"f\",FontSlant->\
\"Italic\"]\) are not evaluated\>\"", ",", "\[IndentingNewLine]", 
          "\"\<\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) is automatically \
\\\"threaded\\\" over lists\>\"", ",", "\[IndentingNewLine]", 
          "\"\<attributes of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) \
cannot be changed\>\"", ",", "\[IndentingNewLine]", 
          "\"\<the arguments of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) \
are not affected by N\>\"", ",", "\[IndentingNewLine]", 
          "\"\<the first argument of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\
\"]\) is not affected by N\>\"", ",", "\[IndentingNewLine]", 
          "\"\<all but the first argument of \!\(\*StyleBox[\"f\",FontSlant->\
\"Italic\"]\) are not affected by N\>\"", ",", "\[IndentingNewLine]", 
          "\"\<the value of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) is \
assumed to be a number when its arguments are numbers\>\"", ",", 
          "\[IndentingNewLine]", 
          "\"\<\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\)[\!\(\*StyleBox[\"\
a\",FontSlant->\"Italic\"]\)], \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\)[\
\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\)[\!\(\*StyleBox[\"a\",FontSlant->\
\"Italic\"]\)]], etc. are equivalent to \
\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\) in pattern matching\>\"", ",", 
          "\[IndentingNewLine]", 
          "\"\<\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) is commutative\>\
\"", ",", "\[IndentingNewLine]", 
          "\"\<values of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) cannot \
be changed\>\"", ",", "\[IndentingNewLine]", 
          "\"\<values of \!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) cannot \
be read\>\"", ",", "\[IndentingNewLine]", 
          "\"\<Sequence objects in the arguments of \
\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) are not flattened out\>\"", ",",
           "\[IndentingNewLine]", 
          "\"\<Needs is automatically called if the symbol is ever input\>\"",
           ",", "\[IndentingNewLine]", 
          "\"\<\!\(\*StyleBox[\"f\",FontSlant->\"Italic\"]\) is a local \
variable, removed when no longer used\>\""}], "\[IndentingNewLine]", "}"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Sequence", " ", "@@", " ", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"List", 
        StyleBox[
        "\"Grid styles\"", "IconizedCustomName", StripOnInput -> False], 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["List", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["6", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["2152", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     {BaseStyle -> {
       "Text", LineIndent -> 0, TextAlignment -> Left, TextJustification -> 
        1}, Alignment -> {{Right, Left, Left}, 
        Automatic, {{1, 1} -> Center, {1, 2} -> Center, {1, 3} -> Center}}, 
      Background -> {Automatic, {{{
           GrayLevel[0.95], 
           GrayLevel[1]}}, {1 -> GrayLevel[0.88]}}}, Spacings -> {2, 1.5}, 
      Frame -> {All, {True, True, False}}, FrameStyle -> GrayLevel[0.5]},
     SelectWithContents->True,
     Selectable->False]}]}], "\[IndentingNewLine]", "]"}]], "Input",Expression\
UUID->"6b2d9a89-a3c3-4c1b-b81d-cb743c935440"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Attribute\"\>", "\<\"Description\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Constant\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Constant\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Constant"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"all derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) are zero\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Flat\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Flat\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Flat"], None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], \
"\<\"\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is associative\
\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"HoldAll\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"HoldAll\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "HoldAll"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"all the arguments of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) are not evaluated\"\
\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"HoldAllComplete\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"HoldAllComplete\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL[
         "https://reference.wolfram.com/language/ref/" <> "HoldAllComplete"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"the arguments of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) are completely \
shielded from evaluation\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"HoldFirst\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"HoldFirst\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "HoldFirst"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"the first argument of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is not \
evaluated\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"HoldRest\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"HoldRest\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "HoldRest"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"all but the first argument of \\!\\(\\*StyleBox[\\\
\"f\\\",FontSlant->\\\"Italic\\\"]\\) are not evaluated\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Listable\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Listable\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Listable"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], \
"\<\"\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is \
automatically \\\"threaded\\\" over lists\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Locked\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Locked\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Locked"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"attributes of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) cannot be changed\"\
\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"NHoldAll\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"NHoldAll\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "NHoldAll"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"the arguments of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) are not affected by \
N\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"NHoldFirst\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"NHoldFirst\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "NHoldFirst"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"the first argument of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is not affected by \
N\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"NHoldRest\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"NHoldRest\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "NHoldRest"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"all but the first argument of \\!\\(\\*StyleBox[\\\
\"f\\\",FontSlant->\\\"Italic\\\"]\\) are not affected by N\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"NumericFunction\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"NumericFunction\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL[
         "https://reference.wolfram.com/language/ref/" <> "NumericFunction"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"the value of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is assumed to be a \
number when its arguments are numbers\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"OneIdentity\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"OneIdentity\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "OneIdentity"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], \
"\<\"\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\)[\\!\\(\\*\
StyleBox[\\\"a\\\",FontSlant->\\\"Italic\\\"]\\)], \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\)[\\!\\(\\*StyleBox[\\\
\"f\\\",FontSlant->\\\"Italic\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\",FontSlant->\
\\\"Italic\\\"]\\)]], etc. are equivalent to \
\\!\\(\\*StyleBox[\\\"a\\\",FontSlant->\\\"Italic\\\"]\\) in pattern matching\
\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Orderless\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Orderless\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Orderless"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], \
"\<\"\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is commutative\
\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Protected\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Protected\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Protected"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"values of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) cannot be changed\"\
\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"ReadProtected\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"ReadProtected\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL[
         "https://reference.wolfram.com/language/ref/" <> "ReadProtected"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"values of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) cannot be read\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"SequenceHold\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"SequenceHold\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "SequenceHold"],
          None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"Sequence objects in the arguments of \
\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) are not flattened \
out\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Stub\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Stub\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Stub"], None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], "\<\"Needs is automatically called if the symbol is \
ever input\"\>"},
    {
     ButtonBox[
      PaneSelectorBox[{False->
       StyleBox["\<\"Temporary\"\>", "Hyperlink",
        StripOnInput->False], True->
       StyleBox["\<\"Temporary\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Appearance->None,
      ButtonFunction:>NotebookLocate[{
         URL["https://reference.wolfram.com/language/ref/" <> "Temporary"], 
         None}],
      Evaluator->Automatic,
      Method->
       "Preemptive"], \
"\<\"\\!\\(\\*StyleBox[\\\"f\\\",FontSlant->\\\"Italic\\\"]\\) is a local \
variable, removed when no longer used\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{
    "Text", LineIndent -> 0, TextAlignment -> Left, TextJustification -> 1},
   FrameStyle->GrayLevel[0.5],
   GridBoxAlignment->{
    "Columns" -> {Right, Left, Left}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{1, 1} -> {Center, Inherited}, {1, 2} -> {
        Center, Inherited}, {1, 3} -> {Center, Inherited}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
        GrayLevel[0.95], 
        GrayLevel[1]}}, "RowsIndexed" -> {1 -> GrayLevel[0.88]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {True, True, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",ExpressionUUID->"a3194525-5da3-4f44-aca1-9d3dff573929"]
}, {2}]]
}, Open  ]],

Cell["", "Subsubsubsection",
 CellFrame->{{0, 0}, {0, 1}},
 CellMargins->{{Inherited, Inherited}, {0, 0}},
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameStyle->GrayLevel[0.7],
 FontSize->10,ExpressionUUID->"20fa8471-941d-46ef-94a9-4a0daca4e45e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Section",ExpressionUUID->"4927a65c-0fa7-46fb-a902-a8003f169b7a"],

Cell[CellGroupData[{

Cell["\<\
Write a pattern that will match an element with the following properties:\
\>", "ItemNumbered",ExpressionUUID->"c3c1635f-e23c-47e8-be82-b533481e3b85"],

Cell["has the head Integer", "Subitem",ExpressionUUID->"4a0d1021-6ae8-44fa-b333-72edd5bf88f2"],

Cell["is even", "Subitem",ExpressionUUID->"75433483-51a6-47c8-97cc-459a2a8f2f09"],

Cell["is one fewer than a prime number", "Subitem",ExpressionUUID->"3852ecf1-5740-4a4d-a883-202cb81b1af0"],

Cell["is evenly divisible by 3", "Subitem",ExpressionUUID->"73ec2040-e4cf-4e17-aaf7-bf02e88b4e7b"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "HintButton"], 
          TextCell[#, "HintButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "?", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Hint"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           TextData[{
             StyleBox["Recall that ", FontWeight -> "Plain"], 
             StyleBox[
              ButtonBox["Condition", BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://reference.wolfram.com/language/ref/Condition.html"],
                  None}, ButtonNote -> 
               "https://reference.wolfram.com/language/ref/Condition.html"], 
              FontWeight -> "Plain"], 
             StyleBox[" (", FontWeight -> "Plain"], 
             Cell[
              BoxData["/;"], "InlineCode"], 
             StyleBox[
             ") can be used to write quite general patterns.", FontWeight -> 
              "Plain"]}], "Text"]]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{888.5, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"3e292324-43fe-4b06-84c2-\
60f24d78d7c3"]], "Text",
 CellTags->"CYU",ExpressionUUID->"b8919c6f-241e-4348-ba44-b939f08d4005"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "SolutionButton"], 
          TextCell[#, "SolutionButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "\[LightBulb]", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Solution"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"n_Integer", "/;", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"EvenQ", "[", "n", "]"}], "&&", 
                  RowBox[{"PrimeQ", "[", 
                    RowBox[{"n", "+", "1"}], "]"}], "&&", 
                  RowBox[{"Divisible", "[", 
                    RowBox[{"n", ",", "3"}], "]"}]}], ")"}]}]], 
           "Input"]]}}, {}]], Spacings -> 2, Alignment -> {Left, Baseline}, 
     ItemSize -> Scaled[1], BaseStyle -> "Text"], StandardForm],
   ImageSizeCache->{888.5, {32.82568359375, 43.67431640625}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"39902144-65f2-44bf-a0a0-\
83397cbe231f"]], "Text",
 CellTags->"CYU",ExpressionUUID->"b27f3ebe-4bec-4d91-a2df-8f1f009558e0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Replace any instances in the following list where a function ",
 Cell[BoxData[
 "f"], "InlineCode",ExpressionUUID->"dda0b4ca-dfc2-4d56-a563-22a7394f4894"],
 " acts on any sequence of strings with ",
 Cell[BoxData[
 "\"\<hello\>\""], "InlineCode",ExpressionUUID->
  "b14e3623-0d2f-4364-b385-c2d439665ee4"],
 "."
}], "ItemNumbered",ExpressionUUID->"d499880f-8d75-4297-9dfe-f22a4a14b214"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"\"\<q\>\"", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"\"\<asdf\>\"", ",", "\"\<jkl\>\"", ",", "\"\<q\>\""}], "]"}], 
   ",", 
   RowBox[{"f", "[", "\"\<goodbye\>\"", "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"\"\<cat\>\"", ",", "\"\<dog\>\""}], "]"}]}], "}"}]], "Input",Expr\
essionUUID->"4fe2ec03-6182-4c23-98d4-5c2366424f7c"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "HintButton"], 
          TextCell[#, "HintButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "?", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Hint"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           TextData[{
             StyleBox["Recall the different ", FontWeight -> "Plain"], 
             StyleBox[
              ButtonBox["Blank", BaseStyle -> "Hyperlink", ButtonData -> {
                 URL["https://reference.wolfram.com/language/ref/Blank.html"],
                  None}, ButtonNote -> 
               "https://reference.wolfram.com/language/ref/Blank.html"], 
              FontWeight -> "Plain"], 
             StyleBox[" patterns.", FontWeight -> "Plain"]}], 
           "Text"]]}}, {}]], Spacings -> 2, Alignment -> {Left, Baseline}, 
     ItemSize -> Scaled[1], BaseStyle -> "Text"], StandardForm],
   ImageSizeCache->{859., {21.8837890625, 29.1162109375}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"d31520cc-bed6-43d2-b5d1-\
6da8e74fae17"]], "Text",
 CellTags->"CYU",ExpressionUUID->"03435ca4-29be-46a7-a5a7-7a33c2d14d4a"],

Cell[TextData[Cell[BoxData[
 DynamicModuleBox[{WolframUTools`Private`cyuOpen$$ = False}, 
  DynamicBox[ToBoxes[
    Grid[
     Join[{{
        Button[
         (Mouseover[
          TextCell[#, "SolutionButton"], 
          TextCell[#, "SolutionButton" <> "Active"]]& )[
          Framed[
           TextGrid[{{
              Item[
              "\[LightBulb]", Alignment -> {Right, Center}, 
               BaseStyle -> {FontSize -> 24}], "Solution"}}, ItemSize -> {{
               Scaled[
                Rational[1, 4]], 
               Scaled[
                Rational[3, 4]]}}, 
            BaseStyle -> {
             "HintButton", 
              GridBoxOptions -> {
               GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Center}}}}}], 
           RoundingRadius -> 5, FrameMargins -> {{15, 15}, {10, 10}}, 
           ImageSize -> {116, 51}, BaseStyle -> "Text"]], (
         WolframUTools`Private`cyuOpen$$ = 
         Not[WolframUTools`Private`cyuOpen$$])& , Appearance -> None, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      If[WolframUTools`Private`cyuOpen$$, {{
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"f", "[", "]"}], ",", 
                  RowBox[{"g", "[", 
                    RowBox[{"\"q\"", ",", "2"}], "]"}], ",", 
                  RowBox[{"f", "[", 
                    RowBox[{"2", ",", "3"}], "]"}], ",", 
                  RowBox[{"f", "[", 
                    RowBox[{"\"asdf\"", ",", "\"jkl\"", ",", "\"q\""}], "]"}],
                   ",", 
                  RowBox[{"f", "[", "\"goodbye\"", "]"}], ",", 
                  RowBox[{"g", "[", 
                    RowBox[{"\"cat\"", ",", "\"dog\""}], "]"}]}], "}"}], "/.", 
              RowBox[{
                RowBox[{"f", "[", "__String", "]"}], "->", "\"hello\""}]}]], 
           "Input", CellLabel -> "In[46]:="]]}, {
         RawBoxes[
          Cell[
           BoxData[
            RowBox[{"{", 
              RowBox[{
                RowBox[{"f", "[", "]"}], ",", 
                RowBox[{"g", "[", 
                  RowBox[{"\"q\"", ",", "2"}], "]"}], ",", 
                RowBox[{"f", "[", 
                  RowBox[{"2", ",", "3"}], "]"}], ",", "\"hello\"", ",", 
                "\"hello\"", ",", 
                RowBox[{"g", "[", 
                  RowBox[{"\"cat\"", ",", "\"dog\""}], "]"}]}], "}"}]], 
           "Output", CellLabel -> "Out[46]="]]}}, {}]], Spacings -> 2, 
     Alignment -> {Left, Baseline}, ItemSize -> Scaled[1], BaseStyle -> 
     "Text"], StandardForm],
   ImageSizeCache->{859., {21.8837890625, 29.1162109375}}],
  DynamicModuleValues:>{}]],ExpressionUUID->"ced82b1e-19ea-4fa5-ba86-\
088744dbdbdb"]], "Text",
 CellTags->"CYU",ExpressionUUID->"5ee4ec33-f5e2-468f-b173-eb46ea3e1119"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellTags->"Summary",ExpressionUUID->"bfbbcea8-66e4-4b5d-8407-f5860980be1d"],

Cell["In this part of the course, you have covered:", "Text",ExpressionUUID->"504688e1-98c9-48ae-8836-41ac01b897a2"],

Cell[TextData[{
 StyleBox[ButtonBox["Pattern basics",
  BaseStyle->"Hyperlink",
  ButtonData->"PatternBasics"],
  FontColor->GrayLevel[0]],
 StyleBox[" (blank patterns)",
  FontColor->GrayLevel[0]]
}], "Item",ExpressionUUID->"4df0761d-502a-4ab5-898b-0a3bc201ff0d"],

Cell[TextData[{
 StyleBox[ButtonBox["Pattern constraints",
  BaseStyle->"Hyperlink",
  ButtonData->"PatternContstraints"],
  FontColor->GrayLevel[0]],
 StyleBox[" (heads, pattern tests, named patterns, conditions)",
  FontColor->GrayLevel[0]]
}], "Item",ExpressionUUID->"7519ddad-9e83-4a3b-95e8-52b8ebed1614"],

Cell[TextData[{
 StyleBox[ButtonBox["Flexible patterns",
  BaseStyle->"Hyperlink",
  ButtonData->"FlexiblePatterns"],
  FontColor->GrayLevel[0]],
 StyleBox[" (blank sequences, alternatives, options patterns, optional \
arguments and default values)",
  FontColor->GrayLevel[0]]
}], "Item",ExpressionUUID->"14b22921-8e52-4fb0-bab1-72848566cd00"],

Cell[TextData[{
 StyleBox[ButtonBox["String patterns",
  BaseStyle->"Hyperlink",
  ButtonData->"StringPatterns"],
  FontColor->GrayLevel[0]],
 StyleBox[" (string operations)",
  FontColor->GrayLevel[0]]
}], "Item",ExpressionUUID->"cf727770-56b5-4007-a70a-8b93a09d1e47"],

Cell[TextData[{
 StyleBox[ButtonBox["Attributes",
  BaseStyle->"Hyperlink",
  ButtonData->"Attributes"],
  FontColor->GrayLevel[0]],
 StyleBox[" (Flat, Listable, Orderless, Hold attributes)",
  FontColor->GrayLevel[0]]
}], "Item",ExpressionUUID->"b03576af-9fac-4867-a88a-a1c2e0036bbb"]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->True,
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
PageWidth->Automatic,
WindowSize->{1024, 768},
WindowMargins->{{42, Automatic}, {Automatic, 209}},
WindowTitle->"Patterns",
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       Cell[
        BoxData[
         TagBox[
          GridBox[{{
             ButtonBox[
              TagBox[
               TooltipBox[
                GraphicsBox[{
                  Thickness[0.022727272727272728`], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 40.099998474121094`}, {44., 
                    40.099998474121094`}, {44., 31.999998092651367`}, {0., 
                    31.999998092651367`}, {0., 40.099998474121094`}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 24.099998474121094`}, {44., 
                    24.099998474121094`}, {44., 15.999998092651367`}, {0., 
                    15.999998092651367`}, {0., 24.099998474121094`}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 8.099998474121094}, {44., 
                    8.099998474121094}, {44., 0.}, {0., 0.}, {0., 
                    8.099998474121094}}}]}}, {
                 ImageSize -> {Automatic, 27}, 
                  ImagePadding -> {{0, 0}, {3, 3}}, AspectRatio -> Automatic, 
                  PlotRange -> {{0., 44.}, {0., 40.099998474121094`}}}], 
                "\"Table of Contents\"", TooltipStyle -> "TextStyling"], 
               Annotation[#, WolframUTools`Private`tooltip$77185, 
                "Tooltip"]& ], BaseStyle -> "Hyperlink", Evaluator -> 
              Automatic, Method -> "Preemptive", ButtonNote -> 
              "DEV211-PracticalProgrammingWithWolframLanguage-TableOfContents.\
nb", ButtonFunction :> If[FileNameTake[
                  Directory[], {2, 2}] == "wolframcloud", 
                SystemOpen[
                "https://www.wolframcloud.com/obj/online-courses/Published/\
DEV211/DEV211-PracticalProgrammingWithWolframLanguage-TableOfContents.nb"], 
                SystemOpen[
                 FileNameJoin[{
                   NotebookDirectory[], 
                   "DEV211-PracticalProgrammingWithWolframLanguage-\
TableOfContents.nb"}]]]], 
             Cell[
              BoxData[
               ButtonBox[
               "Practical Programming with Wolfram Language", Tooltip -> 
                "Practical Programming with Wolfram Language", 
                BaseStyle -> {
                 "Hyperlink", "DockedTitle", FontColor -> GrayLevel[1]}, 
                ButtonData -> {
                  URL[
                  "https://www.wolfram.com/wolfram-u/courses/programming-\
applications/practical-programming-dev211"], None}, ButtonNote -> 
                "https://www.wolfram.com/wolfram-u/courses/programming-\
applications/practical-programming-dev211"]], "DockedTitle"]}}, BaseStyle -> 
           "DockedTitle", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.75}}, "Rows" -> {{0}}}], 
          "TextGrid"]], "DockedTitle", CellMargins -> {{0, 0}, {0, 0}}, 
        StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
        CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
        CellFrameMargins -> {{20, 20}, {15, 15}}, LineSpacing -> {1, 4}, 
        LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Title", 
        CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
          "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
          "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
          "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
        1100, MenuCommandKey :> First[{"1"}], FontFamily -> "Source Sans Pro",
         FontSize -> 34, FontTracking -> -0.5, FontColor -> GrayLevel[1], 
        Background -> RGBColor[
          Rational[22, 255], 
          Rational[8, 51], 
          Rational[21, 85]], Alignment -> {Left, Center}], 
       PaneBox[
        TemplateBox[{
          TagBox[
           TooltipBox[
            GraphicsBox[{
              Thickness[0.0022222222222222222`], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                0}}}, CompressedData["
1:eJxtlTFo20AUhtUGAoVsgUC3dvEcEBQ8xciOQsAgpZ4sbCHrUpEh0EHQ2ZOh
kM1LtBkKmrIFAtkEgUBBQ8AQ8ObJEMiWKZAhL/p/YZ2wwZy+e/+9+9+7s/w9
/P3z15ZhGJ/keyrfz0bxCaKboCXjWTQ5+Rhb5nT0MWb5zhH4X8FB1LDB1wXL
0yHGjPGog3U511+0Mf9Izi3olyPkMQueJU8Fj5OFhfkXbX2Wv5G7Hei/hPR3
iPx7IeYX5EZIX/R7R33XQfw+pF+NZT8Hef4znjr0XebTOIhWDuYfyNsu9pvT
z1eNxVct3qzFbZf9Knjf7GksTzWeubqfexd5b0t/1KfUGyeI/y34Id/heSuN
xddGlifyk9rEpV581Pimxqliv7g+UVV/cg4K868u5sdc/8x6/jC+YP3nqlq/
1EP9FfvRZ3zCfK6q9nOWHCv022S8pZDnxcG4W/bvAByPdO4FZN6niV+Ni2JY
ZTkfD/669H/lYf+Y+8/IU9Yz9dg31j/xoMsYj6mfc33A+JL5u161f/K786r9
lXtKPfovH+63TV72dc40Fn8b+TJJqA+Gm7jUy+9YYznHQS3foOpXzntQq4/6
8v43qU80Xp83uOz/Wt8sz5/5Guy3PUB/d7X91vejx/wZ3x8J61nZ4Nsh6+T7
aM77gPdnlj8PMR93WLePMW1D963gcbSyoDN5v1oW/fn0Y2G/PuNZm3l9+uL7
+YL6mO/L1GddNvvIuHkE/qH9P2j/F++mXnJA
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxtVD1IHFEQfkQIBFLYCjYhIARswlWCmKfn3+np7dnZSXj73hUHEWwtrkqV
QhCE7bYSAnap0r3K6hVWgp1wIAgphICQzrmdb3LzQhaW4dv5n/lm333+clDO
GGNe0fsRkp4j7weWZcdm+GFrIuvqsMHGjDYn0rbawHaD9R+AzTr7vR6w3e81
1t+FiYzpLfD3Bo/8wir7HQe2P7GIFxDP8vexB/7E8S+ARyscdznDxtyXuf5b
mftvCraQYm9Zf+10fXVVOV1/TEOX99dxun/bajk9n5jmnZ6fMbOO8/B8BVP/
HY3p2dX+tIeujk917en8NOd9XR/F7+n6aa+F7o/sC4430/R/kxb7iAc87HMd
Z8BXfbYfN3jgr6G3XmPK9w9+BL7sc32LIY9/HHT+mK6Crk/4I/XX1RvhZw/x
Brp/4ed0PszfmLpdxBF+7mgs/KdK3P8w7X+bv98CJ9zDGPuKGyyf4H8p9wB+
xTbbvxf+tTE/YLuGvCXb/VhleV6iftxLbPDIP+Be/og98JLXOKbTDJP02p/u
xev41GfI87eCrs+YQu6zzfbDoPujyEH3T/cnevwvKtkv7qGW/8O2xtP51+K/
o/3p6er45L+n89fVnNyD6Ht5/bGn+6O5Ffx9Fvm/Fno+dfWz0PO7Sb8KPV/a
M/i+lOEj/1xqLPsTf9mvxJf9T/P/5QfshT9c/5RfBv09Od2/8FPmI/yV+Qm/
Zb4Z/18AiE9a0w==
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxtkz1LA0EQhlcFQbAQUqVTAqkPFlIJuUvQemMXsDgEF+8DFAKCYJFKEOxS
bZcqlV0qweJ+wBWBgGAXEALW16ZwvXkXd4IHy96z887szNzcydXtxfWeEGLH
rq5du6J+Qrm8Cem1G3o81rPwd5+ab8ZFuWEsxFHicyhbCe1zsExIV4D7pDef
8Fewi4jiXyJeu+ZYa+iHEenuwAb2excP/o+4X/Z8tvkxXpSHyudYnyuq96Hm
QI6Uf18gJ7An4Lny812UpeL1rJRfbyArxfshBn6/Yr0Pbrj8BtAxdt/Dsfte
22yVA4r7kf7Hf/ELxkX5ynhqzBY/p36+tv+pX4/tT+rXa/sD/dr1B/alQt9T
8nuD/tTlC3sHPIZ/AP2QsRDHjMd6jXl9yXyO9Szj9veM+lZhHhdkN82Izr8y
Og/BFfQjzNsGPI8or4McOugbYJrHqWnmqKeHvHOKU/ZI18qh61O+7Zx2De4g
3uiM9gnjWD8hPv+fa/4BI1HiVA==
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxtlL9Lw0AUx68KguAgCEIRhKIIboVMTl7qoiD2qovdgmC2mExCt4Dg5CAI
4m2BgiA4FJwKHQJOQoaAU8HBP6BDoZObZ9/38F3pwXF88n7ce9/jpXYRn14u
CiEqZh+YvSCmS3o3V9KcZTFSknGmh0d/ZxCuJ/NYiPSQ+89yGj43OEvPa1D8
Ldn10Ke4e7D2yf4IbvsU10W+Hfj3cJ+Ycl4MbD5JXMCeg79w/5uk72NbH1jE
nE1/sWtXc9msfdJlN5rH//7SYemdORyE4QxfR7xeo1fE+zH6ROgT+brwn+C+
HuXTVZ/q6SNeQs93cAr7h80PfUvkX2lwNv4OZ7qqOJfFsUJdsHcUvy/TGvYB
uK94vXXvU/F+hPhWvN+6N1Fcj0z/KK6XWS2uZxAutbjelu17WLbvNctPWtv4
hLMQ55iH9gn8Hc6L7YTOuybFb9n5adJZS6ifNdS/Cfse+t+w+WC389eBXquI
f1D0fTkh/V/BFcxnDv9xzPU18xBzfc37xBQ/QvyLw87/4Rfi3/f7
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxtlD9IHEEUxgeLVEcqm2sEmzSBIEyaEPBmr7p/6l4MQSHIonHhmrh7abTT
xkaxCsHpNgRsLLUJhLCVEFhFCAREi0BADFxx4Sq7jPe+h2/kBpbhNzPvzfe+
2ZnJ5bVXq2NKqUX33fWuZbbTNa7ftBdVMxxZB5eHHMXbQ86L3YD6j0M2WgfU
f+F4Q3xEHB8Yij/xOLM/RrJrFcr/zePMfvbY6B3WV5F6ldaIf0d82sL8AtZb
xDex/3WF9E2DnxiKfw6OUc9T1HsEvZOsJyAuY/5DQPkegwfgTyn8qlH+1kh2
O1Yl3/s/i/kcfs/zeuR/AzY4n7cp9SWsX8F+A+jvYL4Ap5wfvJH69W6RHpyX
899j9z947CJGssL5OU5G8X3+Q4/z4tjjKP7+gE8SqTeKzxJZTxT/SmS9eXGV
SD+M/pPA74DibhLfz14i/Vaqz/nh7wD5S1XJfJ7M7j8JJZ8XrZDG/2F+I5T7
ZdZi/i/4ayj1TumfoaxHqd+hrHdKD0LpR2ZvQ+mXa23pZxQ/aku/mfk8mPm8
HvK+tci3l0o2+tLjvBjH/YnapOtFl/zoQd9SV/rh/s8ujR/MSc7sxYzP5Rla
957vY4s4Rvx108+/2CQ9rzlfg3TVOL5B/Uu8f6UGxT/j96BOPMHrwXz/dR0+
83tQI+7z/avRvuL9/Q8PwFRN
                 "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQQJaX6FDmBWgyeIPnCmB4WfkLYMTX4PmL9g5kyo
/Dmo/AFPCP0AzHcw/gxV/wbKN/aCyP8ohNrjBTGHsQhizjMon7MIQkd6Q8T5
YPLeEHOEiyB0sQ/EHJEiCM3ji8o/g8bv8YOYKwg1T80fqg9q3mZ/iPs4oPZL
BkD4DGC+gXFwAET9F6j/KwMg9MtCaDgFQMy5DQsPqPzJQoj+y1DzdkDVP4Oq
XwzmXzjzBqq+E4V/4IwPVj4ifpDiDwD9RnX7
                 "]}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxtk7FKBDEQhqPdwTU24oIIhyIKIsiCIBYmUbY80EKwWwVTKribQhQ5sbEQ
wTJd4OB68RDLa4V7AV/AWvAFzO78wWTZwDJ8yT9/JpNN7+zy6HyWMbbnviq6
wdNhwV20Jsko3tfM03S/irm6q9mNmifTW/BEku6moPknSfnXNQ/MScxqNWI3
Inb5ItzP7S9I9wj+5aR/8ftzihb+I04+44it+WzlqgsUf67a+F8/08jvNHgO
9b2hnoWovlwt4XxTTrpl5H9Dv4Z+JYJ0G8jngvy3wAP0Z9v7C/LbhX9XIg/+
StL8Afy/0O9Oib4dkl+/wfOa8v19JRr5qG8RbFBfT1MdBdZXdFz/ug7Pl6tN
rDPUn+qwH9bs6LBfTqHjfmY67Lerv8HHEVtz2soM952ri7KN/f3y9CHiXI0i
ZuyjDM/n2f2vorEuQ3YKSX7v8PP3NS4p0ntydUNP782aV++P/GfouxnND4s2
rt/3H69t4mk=
                 "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQQHzriUOIBpHx8Q7WBsDeYvmCnpC+Ebg/kJac+g
fG2o/Ew/CF8Zpt8fQsuA+UAQAKElwHwD4+AAiDliUPPUAiD6hVHUL5gpWAIR
3+wPUccHVZ/mDxHnhtrH4w/RxwHVf8APIs4C1V/sBzGPEeYfqPyfYqh6Xwj9
oxhqvi9E/gtUnsEXIv6uGCLe4wOht0DlG9wh/JoSVD5SeAIAy/FP8g==
                 "]}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}}}, CompressedData["
1:eJxtlLFLHEEUxicKVvkHbARBhECKgwUrwdk7ESSHzHlVSLMILgYEr9m9TXdi
e12aDFhsJYIiiE1CmgUhCG5xIAhiYyFB8TgUKzvHm++5b5ZbWGZ/8968ee+b
Nzu9trW6Pi6E+GDeNfOOieEjvYO2tJ8LknEn3JNvYxAeOSzE7xJnJT5r2zgn
4B7iZ4h3OeQsz6X1u4b/M/xvYP/o2/EW66Vvxztwx7frHig+/Pu0vmr3GyC/
0OGK91O9jamedupP9VPMOctnhtzLu4pzR+uqw+Es4s/GqM+38T6Bu8jvM7iO
eiqIN+nb9XMx1yPL5yke9KrFXF/pfYm5/tJrUn7gbw4HYehwqr+P5KL+3WgU
F+e973Cqjx2W3t8Sn0Zu/ueIn4EvIl5vqq8irofpj4jrZfoD6yX0vgd3qB8o
PvR+RHzbH8TG3+FUTyrOvbyurH4D2H8ovl+qNez/wX8Uz7fiXShej5lXvN6K
96y4Hql+UVwv8zS4nkE40eB6E9N5ENN5lfmX1g07b/uh4Kk25mvIr83t5isZ
xUX8rsPS23HY6OawEK2E12f2TXj9Ziax+veh31fYr6BPE/H+Qf8V+B/Cfxnc
hX0JvIn1NewvHTb5OUz3/Z1x37N8MbEj3fdlMN33Orju83ypf6meor8Digfe
gJ3+py3sT/cvofxwX7YdpvMgpvMqsyj9/4f8CjTreeM=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxtlT9oE1Ecx19VnEoXFwsOunQsgTd1qXeXxCnDRboEOhxSD8RAlYCYu1Aq
QqcOgosHRQKF4FCEEigtOqQIXbyhkMUgiFAoCBmEQCGL+Gt+3x+8X8hBePm8
7+/v+3P34Mnm46c3jTFz9Nuk3w0zeaL4V+LRuB3Hq9ejZ78o7uV7zFk2YfoH
XnzI+obo4Ar8l7zrsZ2tgDsTjuIl0X2Odzdhv9xnfUHiBTx/K+H5uMj2JuG4
tZLLnm2Utb4YunyeV0KO86/JejPkcQzOoF+BT+D/d8IF24f9nybP/w457wX0
Efgn/MfgPuxNlfl7k/PcrrLdqWJjjhX38oOZ/CHLqjz/OZnFYu/Z/UTnyxKd
753iKN5J3Hp7eStx+4niV1jPIdbnBfQB1ucZ4p2F7L8B+wPYR+Bd6OvgOvxr
yO8ppvqm9bLLtP8lNx79K7r5PWvBdTmPgdsP6QGPb3H+Br67PjQDbkt+n/Mf
yn3w2f8b4o08tvsh8TzOP1RMfaVav5e6/lG8zDruSzvzYV9DPSH0jo/+Ux7n
A+wH4jXAL2F/GbD/65Tz8P2K4i3wZZHt36Tov+Qy3eOyywV7J9T6I+z3NvQG
7kMKfh+6+Qu2G7r1nec57J+nPD+Q8wR9KOcH/iPwGuzH4Arql/tXVEzvJ8Wy
3tNM9eI+zLdmsdjT09L+Vyoe7f9UPReqXupT9UPvD9kP9JND7+M+niFeD/6n
sO/A/it4B/qJ7Df8j5B/RTE9iqnPssu0/zgPh9AreD9/Au8GbPcRnMt9wnm0
eN9vgbs4/3XRwWs47/x9kf2S748x97le211lfQ7nm79f6vv2H6WjrZs=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{37.099998474121094`, 33.400001525878906`}, {42., 
                25.}, {42., 33.900001525878906`}, {36.900001525878906`, 
                41.400001525878906`}, {37.099998474121094`, 
                33.400001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{31.899999618530273`, 56.900001525878906`}, {25.5, 
                48.599998474121094`}, {35.5, 45.599998474121094`}, {41.5, 
                53.70000076293945}, {31.899999618530273`, 
                56.900001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{26.100000381469727`, 40.400001525878906`}, {
                24.899999618530273`, 29.300003051757812`}, {35.20000076293945,
                 33.80000305175781}, {35., 43.29999923706055}, {
                26.100000381469727`, 40.400001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{43., 52.599998474121094`}, {37.099998474121094`, 
                44.5}, {43., 35.900001525878906`}, {48.900001525878906`, 
                44.5}, {43., 52.599998474121094`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{53.79999923706055, 69.20000076293945}, {
                43.900001525878906`, 65.70000076293945}, {43.900001525878906`,
                 55.5}, {53.5, 58.70000076293945}, {53.79999923706055, 
                69.20000076293945}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{51., 43.29999923706055}, {50.79999923706055, 
                33.80000305175781}, {61., 29.300003051757812`}, {
                59.900001525878906`, 40.400001525878906`}, {51., 
                43.29999923706055}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{54.099998474121094`, 56.900001525878906`}, {44.5, 
                53.70000076293945}, {50.400001525878906`, 
                45.599998474121094`}, {60.5, 48.599998474121094`}, {
                54.099998474121094`, 56.900001525878906`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{42., 55.5}, {42., 65.70000076293945}, {
                32.20000076293945, 69.20000076293945}, {32.5, 
                58.70000076293945}, {42., 55.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{40.20000076293945, 68.29999923706055}, {
                35.599998474121094`, 74.29999923706055}, {26.700000762939453`,
                 78.20000076293945}, {31.799999237060547`, 
                71.29999923706055}, {40.20000076293945, 
                68.29999923706055}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{30.5, 61.099998474121094`}, {30.299999237060547`, 
                70.20000076293945}, {25.100000381469727`, 
                77.10000038146973}, {26.100000381469727`, 67.4000015258789}, {
                30.5, 61.099998474121094`}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{28.799999237060547`, 56.}, {21.5, 
                53.29999923706055}, {15.100000381469727`, 
                46.099998474121094`}, {23.299999237060547`, 
                48.900001525878906`}, {28.799999237060547`, 56.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{30.100000381469727`, 58.5}, {24.799999237060547`, 
                66.}, {13.800000190734863`, 63.599998474121094`}, {
                21.299999237060547`, 55.20000076293945}, {30.100000381469727`,
                 58.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{32.70000076293945, 44.5}, {23.899999618530273`, 
                47.099998474121094`}, {15.5, 44.20000076293945}, {
                25.100000381469727`, 42.099998474121094`}, {32.70000076293945,
                 44.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{43.900001525878906`, 25.}, {48.900001525878906`, 
                33.400001525878906`}, {49., 41.400001525878906`}, {
                43.900001525878906`, 33.900001525878906`}, {
                43.900001525878906`, 25.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJRKA0BIg5gKiHUAYnfMHOmHYh2MDbWA4sbG+uD6AUz
Ix2gfCUQfeAMjyuYn5YmBlXvCjVHDKoewp81UxQiXwzhmxiLQuRnoslvRtN/
E8V8oHovZPuB6gOR3Qe0PwTN/SHI/lsw8ydEPYNCOIQv6QvhO0RA6AZXZP6B
M2eskflA83SQ9aOHH9A8TxB94QxPMNS9/lBzwe5ISHvmB6INjD8HQMx/EwTh
G0P5PQFQc7yR5YHucEXWf+CMjwuy+Q1paVbI9oOciuwfYHgYQ/U7IssDw88M
zD/rA9NvAfWvC0R9mgqEf8AVqt4YYj+PN7L8hTM6Acj6L5x5E4BiPsL/jhD/
CgejhrdCGEb4AQAnYISO
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQOxsIhDkA6I21ZmAOYPzkQRKeluUU4gFU0+IBo
Y2PjSCjfFZXPYIvMT0hL0wfRZ874gPUfOHNGDNn8BTNnCkLkc8Kg8hwg2sTY
OAxqHgOInjHzZyjUvG/2YP5NFD7QHbZQ/X/A/LNnbKD6NZHphLRndmA+1B0O
xsUuyPbA/MNgYPzZHmxejxuavDeyfqCJQcjmHzjDA3YXg/FmG4h9amB+Q1qa
LTLfxPhyKFQflP85FBIeO0Mg4aETBvVfCHL4oMQPANLHWh4=
                 "], CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQYHQhyA5IyZM0MdkPhAYAeiHYw3Q/jGm21B9IKZ
kkFg/tkz2iA6IU3NG8w/c0YGos/BDcrnIYbvYGyMxv/sCuabGHND7YfwZ8zk
hPCLXaHqOaD6IfyMNC6ou12hNNS8zS6o5uPnJ6QtQ+EvmDnTHtl/B86c0UL2
PxBwIIcPjN+Q9gyFb2D8OQSZb2I8ORRFP8OCUIj9aQIOYO/eDIX6TxSiXjgM
Ki/lAPauWxjEPT4GIDot7Vk4VL0thH8sAmJugysyf8HMSB9kPtC8QGT9C2be
DHYAe9cHar4ONH1IhkHkK6H+eICSXjLSlqHwwekJADolewo=
                 "]}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{48.70000076293945, 75.10000038146973}, {43., 
                84.79999923706055}, {37.29999923706055, 75.10000038146973}, {
                43., 67.9000015258789}, {48.70000076293945, 
                75.10000038146973}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{53.29999923706055, 44.5}, {60.79999923706055, 
                42.099998474121094`}, {70.5, 44.20000076293945}, {
                62.099998474121094`, 47.099998474121094`}, {53.29999923706055,
                 44.5}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{54.20000076293945, 71.29999923706055}, {
                59.29999923706055, 78.10000038146973}, {50.400001525878906`, 
                74.29999923706055}, {45.70000076293945, 68.29999923706055}, {
                54.20000076293945, 71.29999923706055}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{57.20000076293945, 56.}, {62.70000076293945, 
                48.900001525878906`}, {70.9000015258789, 
                46.099998474121094`}, {64.5, 53.29999923706055}, {
                57.20000076293945, 56.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{64.69999694824219, 55.20000076293945}, {
                72.19999694824219, 63.599998474121094`}, {61.20000076293945, 
                66.}, {55.900001525878906`, 58.5}, {64.69999694824219, 
                55.20000076293945}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{55.5, 61.099998474121094`}, {59.900001525878906`, 
                67.4000015258789}, {60.900001525878906`, 77.10000038146973}, {
                55.70000076293945, 70.20000076293945}, {55.5, 
                61.099998474121094`}}}]}}, {
             ImageSize -> 170, AspectRatio -> Automatic, 
              PlotRange -> {{0., 450.}, {0., 102.}}}], 
            "\"Wolfram U: Learning Resources for the Computational \
Universe\"", TooltipStyle -> "TextStyling"], 
           Annotation[#, 
            "Wolfram U: Learning Resources for the Computational Universe", 
            "Tooltip"]& ], "https://www.wolfram.com/wolfram-u/"}, 
         "HyperlinkURL"], ImageSize -> Full, Alignment -> {Right, Center}]}}, 
     GridBoxAlignment -> {"Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> {"Columns" -> {
         Scaled[0.75], 
         Scaled[0.25]}}, 
     GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
    "Grid"]], "DockedTitle", CellMargins -> {{0, 0}, {0, 0}}, 
  StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
  CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
  CellFrameMargins -> {{20, 20}, {15, 15}}, LineSpacing -> {1, 4}, 
  LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Title", 
  CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
    "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
    "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
    "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey :> 
  First[{"1"}], FontFamily -> "Source Sans Pro", FontSize -> 34, 
  FontTracking -> -0.5, FontColor -> GrayLevel[1], Background -> RGBColor[
    Rational[22, 255], 
    Rational[8, 51], 
    Rational[21, 85]]],
ShowCellBracket->True,
TaggingRules-><|"ShowNavigationBar" -> True|>,
ShowCellLabel->True,
CellLabelAutoDelete->True,
ShowCellTags->False,
TrackCellChangeTimes->False,
SpellingDictionaries->{"CorrectWords"->{
 "Imporance", "mbraithwaite", "xls", "Braithwaite", "infact", "boolean"}},
Magnification:>1.5 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       StyleData["Title"], CellMargins -> {{27, Inherited}, {10, 30}}, 
       FontSize -> 40, FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["DockedTitle", StyleDefinitions -> StyleData["Title"]], 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{20, 20}, {15, 15}}, FontSize -> 34, FontColor -> 
       GrayLevel[1], Background -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Subtitle"], CellMargins -> {{27, Inherited}, {0, 20}}, 
       FontSize -> 34, FontWeight -> 400, FontColor -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Subsubtitle"], CellMargins -> {{27, Inherited}, {0, 2}}, 
       FontSize -> 20, FontWeight -> "Thin", FontSlant -> "Italic", FontColor -> 
       RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Chapter"], FontSize -> 31, FontColor -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Section"], CellMargins -> {{27, Inherited}, {8, 25}}, 
       CellFrameMargins -> {{7, 7}, {7, 22}}, CellFrameColor -> 
       GrayLevel[0.8], FontColor -> RGBColor[
         Rational[22, 255], 
         Rational[8, 51], 
         Rational[21, 85]]], 
      Cell[
       StyleData["Subsection"], CellMargins -> {{50, 3.}, {5., 10.}}, 
       FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Subsubsection"], CellMargins -> {{50, 3.}, {8., 12.}}, 
       CounterAssignments -> {{"Subsubsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}, {
         "ItemRomanNumbered", 0}}, FontSize -> 15, FontWeight -> "Bold", 
       FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> GrayLevel[
         Rational[4, 15]]], 
      Cell[
       StyleData["Subsubsubsection"], CellMargins -> {{50, 3.}, {2., 10.}}, 
       CounterAssignments -> {{"Subsubsubsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}, {
         "ItemRomanNumbered", 0}}, FontWeight -> "Bold", FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Subsubsubsubsection"], CellMargins -> {{50, 3.}, {2., 10.}},
        FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellMargins -> {{27, 0}, {0, 25}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "TitleGraphic", StyleDefinitions -> StyleData["WolframULogo"]], 
          StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
          CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
          LineSpacing -> {1, 4}, CounterIncrements -> "Title", 
          CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
            "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
            "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
            "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, 
          FontTracking -> -0.5], 
         Cell[
          StyleData[
          "TitleGraphic", "SlideShow", StyleDefinitions -> 
           StyleData["TitleGraphic"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
           StyleData["TitleGraphic", "SlideShow"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["TitleGraphic", "SlideShow"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["TitleGraphic", "SlideShow"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Content", "Section"], 
      Cell[
       StyleData["Author"], CellMargins -> {{27, Inherited}, {0, 2}}, 
       FontWeight -> "Thin", FontSlant -> "Italic"], 
      Cell[
       StyleData["Affiliation"], CellMargins -> {{27, Inherited}, {0, 2}}, 
       FontWeight -> "Thin", FontSlant -> "Italic"], 
      Cell[
       StyleData["Text"], CellMargins -> {{50, 10.}, {7., 8.}}, FontColor -> 
       GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData[
       "OpenCollapsedSection", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{27, Inherited}, {8, 10}}, MenuSortingValue -> 10000, 
       FontSize -> 11], 
      Cell[
       StyleData["CodeText"], CellMargins -> {{50, 10.}, {3., 15.}}], 
      Cell[
       StyleData["Item"], CellDingbat -> 
       StyleBox["\[FilledSmallCircle]", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["Subitem"], CellDingbat -> 
       StyleBox["\[FilledSmallCircle]", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["Subsubitem"], CellDingbat -> 
       StyleBox["\[FilledSmallCircle]", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], 
       StyleKeyMapping -> {
        "Tab" -> "Subsubsubitem", "*" -> "Subsubsubitem", "Backspace" -> 
         "Subitem", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Subitem"}, 
       FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["Subsubsubitem"], CellDingbat -> 
       StyleBox[
        "\[FilledSmallCircle]", Alignment -> Baseline, FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], FontSize -> 12], 
       CellMargins -> {{153, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
       StyleKeyMapping -> {
        "Backspace" -> 
         "Subsubitem", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Subsubitem"}, 
       CellGroupingRules -> {"ItemGrouping", 100}, CellFrameLabelMargins -> 4,
        CounterIncrements -> "Subsubsubitem", MenuSortingValue -> 1630, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["ItemNumbered"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubitemNumbered"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubitemNumbered"], 
       StyleKeyMapping -> {
        "Tab" -> "SubsubsubitemNumbered", "Backspace" -> 
         "SubitemNumbered", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "SubitemNumbered"}, 
       FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubsubitemNumbered"], CellDingbat -> Cell[
         TextData[{
           CounterBox["ItemNumbered"], ".", 
           CounterBox["SubitemNumbered"], ".", 
           CounterBox["SubsubitemNumbered"], ".", 
           CounterBox["SubsubsubitemNumbered"], "."}], FontWeight -> "Bold"], 
       CellMargins -> {{153, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
       StyleKeyMapping -> {
        "Backspace" -> 
         "SubsubitemNumbered", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> 
         "SubsubitemNumbered"}, CellGroupingRules -> {"ItemGrouping", 100}, 
       CellFrameLabelMargins -> 4, CounterIncrements -> 
       "SubsubsubitemNumbered", MenuSortingValue -> 1630, FontFamily -> 
       "Source Sans Pro", FontSize -> 12], 
      Cell[
       StyleData["ItemParagraph"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubitemParagraph"], FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubitemParagraph"], 
       StyleKeyMapping -> {
        "Tab" -> "SubsubsubitemParagraph", "Backspace" -> 
         "SubitemParagraph", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> "SubitemParagraph"}, 
       FontColor -> GrayLevel[
         Rational[83, 255]]], 
      Cell[
       StyleData["SubsubsubitemParagraph"], 
       CellMargins -> {{153, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
       StyleKeyMapping -> {
        "Backspace" -> 
         "SubsubitemParagraph", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {"Shift"}] -> 
         "SubsubitemParagraph"}, CellGroupingRules -> {"ItemGrouping", 100}, 
       CellFrameLabelMargins -> 4, CounterIncrements -> "Subsubsubitem", 
       MenuSortingValue -> 1630, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontColor -> GrayLevel[0.2]], 
      Cell[
       StyleData[
       "ItemRomanNumbered", StyleDefinitions -> StyleData["ItemNumbered"]], 
       CellDingbat -> Cell[
         TextData[{
           CounterBox["ItemRomanNumbered", CounterFunction -> RomanNumeral], 
           "."}], FontWeight -> Bold], CounterIncrements -> 
       "ItemRomanNumbered"], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.8],
        FontFamily -> "Source Sans Pro", FontColor -> GrayLevel[0.360784], 
       Background -> GrayLevel[0.964706]], 
      Cell[
       StyleData["AuthorNote", StyleDefinitions -> StyleData["Text"]], 
       CellDingbat -> 
       StyleBox[
        "Author note:", "Text", FontSlant -> "Italic", FontColor -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], Alignment -> Baseline], FontSlant -> "Italic",
        FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["HintHeader", StyleDefinitions -> StyleData["Text"]], 
       ShowGroupOpener -> True, GroupOpenerInsideFrame -> False, 
       CellGroupingRules -> {"SectionGrouping", 80}, PageBreakBelow -> False, 
       FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Hint", StyleDefinitions -> StyleData["Text"]], CellFrame -> 
       True, Background -> RGBColor[
         Rational[173, 255], 
         Rational[433, 510], 
         Rational[421, 510]]], 
      Cell[
       StyleData["ExperimentalInput", StyleDefinitions -> StyleData["Input"]],
        Editable -> True, CellFrame -> True, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       CellFrameColor -> RGBColor[
         Rational[91, 255], 
         Rational[178, 255], 
         Rational[166, 255]], CellFrameLabels -> {{
          Cell[
           BoxData[
            RotationBox["Experimental", BoxRotation -> 1.5708]], "Text", 
           FontSize -> 10, FontColor -> RGBColor[
             Rational[91, 255], 
             Rational[178, 255], 
             Rational[166, 255]]], None}, {None, None}}], 
      Cell[
       StyleData["WolframLanguageLogo"], FontColor -> 
       RGBColor[0.09, 0.16, 0.25]], 
      Cell[
       StyleData["Link"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["HyperLink"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["FunctionLink"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["HyperlinkActionNew"], FontColor -> RGBColor[
         Rational[64, 255], 
         Rational[25, 51], 
         Rational[128, 255]]], 
      Cell[
       StyleData["HyperlinkActive"], FontColor -> RGBColor[
         Rational[91, 255], 
         Rational[178, 255], 
         Rational[166, 255]]], 
      Cell[
       StyleData["CYUButton", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], FrameBoxOptions -> {Background -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]]}], 
      Cell[
       StyleData["HintButton", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], FrameBoxOptions -> {Background -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]]}], 
      Cell[
       StyleData["SolutionButton", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], FrameBoxOptions -> {Background -> RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[
           Rational[64, 255], 
           Rational[25, 51], 
           Rational[128, 255]]}], 
      Cell[
       StyleData["CYUButtonActive", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], 
       FrameBoxOptions -> {
        Background -> RGBColor[1, 0.4, 0], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[1, 0.4, 0]}], 
      Cell[
       StyleData["HintButtonActive", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], 
       FrameBoxOptions -> {
        Background -> RGBColor[1, 0.4, 0], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[1, 0.4, 0]}], 
      Cell[
       StyleData[
       "SolutionButtonActive", StyleDefinitions -> StyleData["Text"]], 
       FontColor -> GrayLevel[1], 
       FrameBoxOptions -> {
        Background -> RGBColor[1, 0.4, 0], 
         BaseStyle -> {"Text", FontColor -> GrayLevel[1]}, FrameStyle -> 
         RGBColor[1, 0.4, 0]}]}, Closed]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X ARM (64-bit) (July 16, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"cbf162b9-024b-4846-8e2b-56c0ba6bd7b6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PatternBasics"->{
  Cell[3579, 110, 119, 2, 136, "Section",ExpressionUUID->"74996c8e-bf4e-49d6-b06f-970082c764d7",
   CellTags->"PatternBasics"]},
 "PatternContstraints"->{
  Cell[40405, 785, 132, 3, 136, "Section",ExpressionUUID->"79e0f2ec-cdfa-4ce3-b6e6-442685973675",
   CellTags->"PatternContstraints"]},
 "CYU"->{
  Cell[50723, 1124, 10097, 201, 99, "Text",ExpressionUUID->"dde84c09-32f0-4ced-99d6-a842e4f7ee6e",
   CellTags->"CYU"],
  Cell[64000, 1421, 9943, 203, 99, "Text",ExpressionUUID->"18d5dc1f-3702-4764-86b6-b67131f4ae4d",
   CellTags->"CYU"],
  Cell[78562, 1767, 10125, 202, 99, "Text",ExpressionUUID->"c322d00d-8018-4328-83a7-92420297fc29",
   CellTags->"CYU"],
  Cell[139438, 3100, 4745, 94, 99, "Text",ExpressionUUID->"0488476d-ad4d-4ca4-8675-9fd40f9c4320",
   CellTags->"CYU"],
  Cell[173405, 3964, 2198, 51, 99, "Text",ExpressionUUID->"b8919c6f-241e-4348-ba44-b939f08d4005",
   CellTags->"CYU"],
  Cell[175606, 4017, 1921, 45, 99, "Text",ExpressionUUID->"b27f3ebe-4bec-4d91-a2df-8f1f009558e0",
   CellTags->"CYU"],
  Cell[178496, 4094, 1998, 45, 118, "Text",ExpressionUUID->"03435ca4-29be-46a7-a5a7-7a33c2d14d4a",
   CellTags->"CYU"],
  Cell[180497, 4141, 2875, 68, 118, "Text",ExpressionUUID->"5ee4ec33-f5e2-468f-b173-eb46ea3e1119",
   CellTags->"CYU"]},
 "FlexiblePatterns"->{
  Cell[73992, 1630, 125, 2, 136, "Section",ExpressionUUID->"74fc02b9-8494-4085-8e59-388d28bb3d48",
   CellTags->"FlexiblePatterns"]},
 "StringPatterns"->{
  Cell[133203, 2921, 121, 2, 136, "Section",ExpressionUUID->"c46c91d0-97a6-408f-8cc3-0b3ce5643bc3",
   CellTags->"StringPatterns"]},
 "Attributes"->{
  Cell[144232, 3200, 123, 2, 136, "Section",ExpressionUUID->"16cdd1c2-55ae-480d-9032-78b75344a06e",
   CellTags->"Attributes"]},
 "Summary"->{
  Cell[183409, 4214, 103, 1, 226, "Section",ExpressionUUID->"bfbbcea8-66e4-4b5d-8407-f5860980be1d",
   CellTags->"Summary"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PatternBasics", 231394, 5229},
 {"PatternContstraints", 231549, 5232},
 {"CYU", 231695, 5235},
 {"FlexiblePatterns", 232675, 5252},
 {"StringPatterns", 232830, 5255},
 {"Attributes", 232980, 5258},
 {"Summary", 233123, 5261}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[602, 23, 83, 0, 94, "Subtitle",ExpressionUUID->"17ff980d-4918-4369-a88c-09f7d0298ec0"],
Cell[CellGroupData[{
Cell[710, 27, 93, 0, 136, "Section",ExpressionUUID->"add60f3c-97f8-4da3-a2c6-9ea90c7694d4"],
Cell[CellGroupData[{
Cell[828, 31, 263, 5, 60, "Subsection",ExpressionUUID->"ceb67ca0-162a-44d8-876e-3a3182c06641"],
Cell[1094, 38, 76, 0, 46, "Item",ExpressionUUID->"d8180ae7-72e5-4374-8181-9103566bda95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207, 43, 274, 5, 60, "Subsection",ExpressionUUID->"58cdc83f-3d50-4a6b-81c0-047c1f50c6ac"],
Cell[1484, 50, 76, 0, 46, "Item",ExpressionUUID->"5e2b85b8-bd18-4f3d-adb2-7af1453a0027"],
Cell[1563, 52, 84, 0, 46, "Item",ExpressionUUID->"3cbe0559-efed-43b1-98a2-02cb3cb5af38"],
Cell[1650, 54, 85, 0, 46, "Item",ExpressionUUID->"bae8606d-008a-4a6d-83d3-5334dfcfd61a"],
Cell[1738, 56, 81, 0, 46, "Item",ExpressionUUID->"a7294333-aef2-4f07-89fd-a34cff42d01b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1856, 61, 269, 5, 60, "Subsection",ExpressionUUID->"c6909bde-15c0-4445-ba46-136dc025e791"],
Cell[2128, 68, 86, 0, 46, "Item",ExpressionUUID->"2ad40324-e95c-4a45-9473-1445e44b07a8"],
Cell[2217, 70, 83, 0, 46, "Item",ExpressionUUID->"30e07bfc-e575-46a6-bd54-e01243c0a97c"],
Cell[2303, 72, 87, 0, 46, "Item",ExpressionUUID->"294ca761-ade0-444b-bdbe-3f2b64004b39"],
Cell[2393, 74, 108, 0, 46, "Item",ExpressionUUID->"6019075a-afba-4360-ae9e-a3e313ff0591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2538, 79, 265, 5, 60, "Subsection",ExpressionUUID->"13285678-8153-4d65-a5c2-855e153dad9f"],
Cell[2806, 86, 88, 0, 46, "Item",ExpressionUUID->"8eb3bdc3-6540-4566-af63-70d22671bcc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2931, 91, 267, 5, 60, "Subsection",ExpressionUUID->"405381e1-b0ea-4555-b3b0-39a5c9cc21b1"],
Cell[3201, 98, 75, 0, 46, "Item",ExpressionUUID->"a0ddf372-3c84-420d-954e-abfb3040a4e3"],
Cell[3279, 100, 79, 0, 46, "Item",ExpressionUUID->"ff08c086-c8f6-439f-9e64-35e8bb82c188"],
Cell[3361, 102, 80, 0, 46, "Item",ExpressionUUID->"729455da-3ff9-423e-a3bc-7287657977bb"],
Cell[3444, 104, 86, 0, 46, "Item",ExpressionUUID->"5e2dda12-1dee-426d-8744-6605ae3867d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3579, 110, 119, 2, 136, "Section",ExpressionUUID->"74996c8e-bf4e-49d6-b06f-970082c764d7",
 CellTags->"PatternBasics"],
Cell[3701, 114, 212, 3, 83, "Text",ExpressionUUID->"a95abe9b-01a8-43c6-be7c-c6ca86ff56e6"],
Cell[3916, 119, 608, 14, 83, "Text",ExpressionUUID->"7ec2bf45-695e-466c-923e-0414c4e5cd22"],
Cell[4527, 135, 229, 6, 89, "Input",ExpressionUUID->"a35cc30f-7ff1-4901-8ded-1c6c97635609"],
Cell[4759, 143, 138, 3, 62, "Input",ExpressionUUID->"e4383f2f-1ce9-4484-8be3-5da876c0779e"],
Cell[4900, 148, 105, 0, 50, "Text",ExpressionUUID->"4a73e9cf-c6f7-4e45-a199-91be712bfc4e"],
Cell[CellGroupData[{
Cell[5030, 152, 775, 22, 197, "Input",ExpressionUUID->"6f4334a7-b21f-46e2-a767-9d51e4bb2b16"],
Cell[5808, 176, 86, 0, 50, "Output",ExpressionUUID->"4613b0de-7ca8-47d7-8818-325d86f7b9b4"]
}, Open  ]],
Cell[5909, 179, 365, 8, 50, "Text",ExpressionUUID->"d03b345f-0a7c-4d52-9220-23600c14f309"],
Cell[CellGroupData[{
Cell[6299, 191, 378, 9, 44, "Input",ExpressionUUID->"7a547639-07f6-40ab-a5bc-3ebff79e8a52"],
Cell[6680, 202, 140, 3, 50, "Output",ExpressionUUID->"dd6166a8-2f77-4a6f-8c7c-6f837d9ed4c6"]
}, Open  ]],
Cell[6835, 208, 362, 8, 50, "Text",ExpressionUUID->"b450bb7f-4c47-4a50-83fa-7e6ea55db8d3"],
Cell[CellGroupData[{
Cell[7222, 220, 252, 6, 44, "Input",ExpressionUUID->"edf3155a-b4a1-4d1e-8b71-bd2d6a6207c1"],
Cell[7477, 228, 31443, 505, 4462, "Output",ExpressionUUID->"f9a2b1c4-53be-4bb1-ae02-a0246c2bfd11"]
}, Open  ]],
Cell[38935, 736, 378, 8, 50, "Text",ExpressionUUID->"d11cefc8-9512-45cc-877b-7287427ac678"],
Cell[39316, 746, 114, 0, 50, "Text",ExpressionUUID->"eea4c519-5ba7-4b94-a32b-e824cda73f71"],
Cell[39433, 748, 312, 8, 44, "Input",ExpressionUUID->"96a81ca1-b1ac-44e5-bf00-bdd6344fe4c2"],
Cell[CellGroupData[{
Cell[39770, 760, 170, 4, 44, "Input",ExpressionUUID->"e35115f3-95cf-4755-b8bf-4efe9f06b5e9"],
Cell[39943, 766, 85, 0, 50, "Output",ExpressionUUID->"87c2f48d-6cf9-486c-82af-97719f1d5dd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40065, 771, 146, 3, 44, "Input",ExpressionUUID->"56c00a95-ffe1-4c16-ac81-0e9ce43c6075"],
Cell[40214, 776, 142, 3, 50, "Output",ExpressionUUID->"bbad1fb2-1179-4281-a818-d11ee51b240e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40405, 785, 132, 3, 136, "Section",ExpressionUUID->"79e0f2ec-cdfa-4ce3-b6e6-442685973675",
 CellTags->"PatternContstraints"],
Cell[40540, 790, 124, 0, 50, "Text",ExpressionUUID->"ecc61da4-e1ce-4da3-a457-bf06218f2e5a"],
Cell[40667, 792, 271, 10, 46, "Item",ExpressionUUID->"0414c949-de6b-4f2e-87a5-da8374c39135"],
Cell[40941, 804, 279, 10, 46, "Item",ExpressionUUID->"c9944c15-a33a-41b0-8823-12350a243d1c"],
Cell[41223, 816, 1994, 61, 116, "Text",ExpressionUUID->"37e1b6de-f4b2-424f-be14-fc607cdc3f0e"],
Cell[CellGroupData[{
Cell[43242, 881, 94, 0, 60, "Subsection",ExpressionUUID->"2d9952fe-820a-42a1-aa69-9cc7b3fb41a9"],
Cell[43339, 883, 468, 13, 83, "Text",ExpressionUUID->"b7476fb6-7976-403d-9b4b-a7da97b405a5"],
Cell[43810, 898, 321, 8, 74, "Input",ExpressionUUID->"9e2988c7-0380-42fa-832e-3ff64943e20c"],
Cell[44134, 908, 162, 3, 44, "Input",ExpressionUUID->"9d5aeacf-e91e-453f-bc74-0d771779f857"],
Cell[44299, 913, 177, 3, 83, "Text",ExpressionUUID->"58643f0e-c0a6-4199-b3f4-9787d8586c2c"],
Cell[44479, 918, 157, 3, 44, "Input",ExpressionUUID->"7751a41f-6e12-4746-9609-c8a041d1efbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44673, 926, 104, 0, 60, "Subsection",ExpressionUUID->"910e69f0-3b51-4810-b036-7fd6e9e7bbb6"],
Cell[44780, 928, 272, 6, 83, "Text",ExpressionUUID->"ca40a955-c0b0-4958-af24-887680462a8b"],
Cell[45055, 936, 181, 4, 44, "Input",ExpressionUUID->"2ebd6f52-c597-442b-a744-7e122aed44e8"],
Cell[45239, 942, 260, 7, 50, "Text",ExpressionUUID->"96700a9f-915d-416a-9bfd-479fa2ef625a"],
Cell[CellGroupData[{
Cell[45524, 953, 184, 5, 44, "Input",ExpressionUUID->"ab437db6-0fe6-4fad-bc8e-b84ee62ca4cb"],
Cell[45711, 960, 186, 5, 50, "Output",ExpressionUUID->"e20bf4cc-f1d5-4f68-b300-d9a6bfa645f0"]
}, Open  ]],
Cell[45912, 968, 578, 15, 105, "Input",ExpressionUUID->"b23893b4-6f89-463c-b227-d16d8149dead"],
Cell[CellGroupData[{
Cell[46515, 987, 246, 5, 74, "Input",ExpressionUUID->"88b95cb1-bafc-424c-a462-243f6106a106"],
Cell[46764, 994, 118, 1, 50, "Output",ExpressionUUID->"d4f166dc-6674-4ddb-aef3-8f330a6950b7"],
Cell[46885, 997, 177, 4, 50, "Output",ExpressionUUID->"5e356376-7a15-4684-bd66-eff948585e79"]
}, Open  ]],
Cell[47077, 1004, 328, 13, 50, "Text",ExpressionUUID->"89dceb94-e9c4-461b-8f64-b56bb119be3c"],
Cell[47408, 1019, 512, 13, 105, "Input",ExpressionUUID->"dce06168-2b01-46e1-a9ba-c41ced4c3021"],
Cell[CellGroupData[{
Cell[47945, 1036, 181, 4, 44, "Input",ExpressionUUID->"1f850d2f-17f5-4e2d-af72-301c46bb5695"],
Cell[48129, 1042, 177, 4, 50, "Output",ExpressionUUID->"5b495cda-7572-4f42-8a4f-588871cd3f56"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48355, 1052, 105, 0, 60, "Subsection",ExpressionUUID->"c897c98a-f241-48d1-8c37-fbf8a3baa9fe"],
Cell[48463, 1054, 559, 17, 83, "Text",ExpressionUUID->"98853197-c3b1-4e09-b256-76d72ed3c7be"],
Cell[49025, 1073, 632, 17, 135, "Input",ExpressionUUID->"7c928753-0387-4066-be31-63a95744b2cb"],
Cell[CellGroupData[{
Cell[49682, 1094, 157, 3, 44, "Input",ExpressionUUID->"e9ad7b3e-c88b-4f02-ad81-7a037ececea0"],
Cell[49842, 1099, 177, 3, 63, "Output",ExpressionUUID->"b129436e-17fd-4301-ac4e-fa9ea2849805"]
}, Open  ]],
Cell[50034, 1105, 117, 0, 50, "Text",ExpressionUUID->"3102e9d6-d302-40a2-9576-00c7bbe65c40"],
Cell[50154, 1107, 566, 15, 105, "Input",ExpressionUUID->"d736eb5f-c0c6-43c4-9796-7e7d935e3812"],
Cell[50723, 1124, 10097, 201, 99, "Text",ExpressionUUID->"dde84c09-32f0-4ced-99d6-a842e4f7ee6e",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60869, 1331, 93, 0, 136, "Section",ExpressionUUID->"845ac980-46b8-4468-931a-44b2713c21c2"],
Cell[CellGroupData[{
Cell[60987, 1335, 114, 0, 60, "Subsection",ExpressionUUID->"179aa73d-d587-4dde-9004-217864d75c50"],
Cell[61104, 1337, 522, 11, 83, "Text",ExpressionUUID->"d8bd977e-90d7-4ba7-b94e-1083058a297c"],
Cell[61629, 1350, 222, 8, 50, "Text",ExpressionUUID->"f2d54b70-e5b0-47c7-a926-1bd49677fd64"],
Cell[61854, 1360, 569, 14, 135, "Input",ExpressionUUID->"009bc5f5-87b1-4c7f-aca6-4cb9d1987625"],
Cell[62426, 1376, 169, 3, 50, "Text",ExpressionUUID->"819422ff-6565-47f2-8cb3-f25c8907cfe1"],
Cell[62598, 1381, 564, 14, 135, "Input",ExpressionUUID->"a94394c6-5c26-4a25-8819-e1d85b0479b1"],
Cell[63165, 1397, 160, 3, 50, "Text",ExpressionUUID->"6828c846-85f7-4090-b0f2-2c3d3ad1a580"],
Cell[63328, 1402, 669, 17, 135, "Input",ExpressionUUID->"31cab03a-a33c-4b17-9e1b-9525c454e38d"],
Cell[64000, 1421, 9943, 203, 99, "Text",ExpressionUUID->"18d5dc1f-3702-4764-86b6-b67131f4ae4d",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73992, 1630, 125, 2, 136, "Section",ExpressionUUID->"74fc02b9-8494-4085-8e59-388d28bb3d48",
 CellTags->"FlexiblePatterns"],
Cell[74120, 1634, 242, 4, 83, "Text",ExpressionUUID->"00bf7c12-d7d4-499d-9667-89942b20af20"],
Cell[CellGroupData[{
Cell[74387, 1642, 92, 0, 60, "Subsection",ExpressionUUID->"a5fe7640-123c-4135-8506-e05637117377"],
Cell[74482, 1644, 377, 8, 50, "Text",ExpressionUUID->"9a20532e-79b1-4423-bc71-5a6650c95607"],
Cell[74862, 1654, 435, 12, 44, "Input",ExpressionUUID->"4b2339e2-6423-4ccd-b0ca-9d24394cb7ba"],
Cell[75300, 1668, 421, 10, 50, "Text",ExpressionUUID->"ebb3d157-d820-4191-ba2e-3b38a3a5a5f3"],
Cell[75724, 1680, 441, 12, 44, "Input",ExpressionUUID->"d2661faa-bd83-4270-b9a8-1c2662e441c0"],
Cell[76168, 1694, 142, 2, 50, "Text",ExpressionUUID->"da33aeff-5eba-4534-8077-bc010ed11050"],
Cell[76313, 1698, 321, 8, 44, "Input",ExpressionUUID->"a51611b3-0a84-45fd-a90c-62c4567f3fe3"],
Cell[76637, 1708, 157, 3, 44, "Input",ExpressionUUID->"d60ff344-5b88-4616-a8a5-f258826e7340"],
Cell[76797, 1713, 186, 3, 83, "Text",ExpressionUUID->"2c04be4d-ed61-4726-a70a-508c8c243790"],
Cell[76986, 1718, 447, 12, 44, "Input",ExpressionUUID->"00fac1f5-da32-4b65-a32b-bf6a37aa4e8f"],
Cell[77436, 1732, 472, 13, 44, "Input",ExpressionUUID->"1e7e357a-86a6-44fb-8c15-e490aede4b30"],
Cell[77911, 1747, 648, 18, 74, "Input",ExpressionUUID->"3a4fabf6-a74b-4663-867a-ce050c14990b"],
Cell[78562, 1767, 10125, 202, 99, "Text",ExpressionUUID->"c322d00d-8018-4328-83a7-92420297fc29",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88736, 1975, 91, 0, 136, "Section",ExpressionUUID->"37859057-f491-4147-8e7b-7d8846076d84"],
Cell[CellGroupData[{
Cell[88852, 1979, 89, 0, 60, "Subsection",ExpressionUUID->"d51eeb30-6bc8-4a0b-8dc4-9b89e756a808"],
Cell[88944, 1981, 385, 8, 50, "Text",ExpressionUUID->"9ed15354-4a4f-463d-aeeb-4b548c8009d1"],
Cell[89332, 1991, 344, 8, 44, "Input",ExpressionUUID->"cf62649f-2b23-4a13-a38f-61ee6016dcc1"],
Cell[89679, 2001, 381, 9, 44, "Input",ExpressionUUID->"2052765b-7577-4473-aaab-a92295e63826"],
Cell[90063, 2012, 535, 12, 116, "Text",ExpressionUUID->"8493c46d-9e20-40ab-a3ec-cd39af917abd"],
Cell[90601, 2026, 261, 7, 44, "Input",ExpressionUUID->"40f022da-d14c-458e-8aff-df047b139c2b"],
Cell[CellGroupData[{
Cell[90887, 2037, 314, 8, 44, "Input",ExpressionUUID->"2d8d3975-d5e2-4ebf-b450-9c5a7072ed28"],
Cell[91204, 2047, 108, 1, 63, "Output",ExpressionUUID->"99508757-6119-43f5-abc7-b37809f31890"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91373, 2055, 91, 0, 136, "Section",ExpressionUUID->"e4cce31e-ab34-4150-8050-a39f21e4dc97"],
Cell[CellGroupData[{
Cell[91489, 2059, 93, 0, 60, "Subsection",ExpressionUUID->"f08f5bfd-0389-4fcc-83a1-a2f6f00cdc17"],
Cell[91585, 2061, 114, 0, 50, "Text",ExpressionUUID->"84dbf0c6-47e5-4c16-b682-46dd568674e0"],
Cell[CellGroupData[{
Cell[91724, 2065, 329, 8, 44, "Input",ExpressionUUID->"ab169cf5-0e98-4c0c-972b-36053cf87aac"],
Cell[92056, 2075, 32750, 584, 345, "Output",ExpressionUUID->"2a414c22-086e-4c1c-9ad7-2f5a0cff42ef"]
}, Open  ]],
Cell[124821, 2662, 142, 2, 50, "Text",ExpressionUUID->"02805ce1-f4e8-4a4c-b934-03d00b1d0a19"],
Cell[CellGroupData[{
Cell[124988, 2668, 252, 6, 44, "Input",ExpressionUUID->"3bc6029b-9ac9-4142-8127-a6b0a2162f53"],
Cell[125243, 2676, 86, 0, 50, "Output",ExpressionUUID->"23d8815b-0e75-469f-b80d-ddebfb888a8c"]
}, Open  ]],
Cell[125344, 2679, 839, 21, 83, "Text",ExpressionUUID->"df0955d4-a9fb-455b-bffb-0800a5cdbe1b"],
Cell[126186, 2702, 210, 3, 83, "Text",ExpressionUUID->"9fc39dd8-fa16-418e-bb16-cd128443785d"],
Cell[126399, 2707, 246, 6, 44, "Input",ExpressionUUID->"b116f371-8a4e-429e-b29f-5934828374dd"],
Cell[126648, 2715, 485, 9, 83, "Text",ExpressionUUID->"e01aa622-9ab5-4e41-8311-08251f15a1fc"],
Cell[127136, 2726, 380, 9, 76, "Input",ExpressionUUID->"23b81535-1a84-409b-aa6f-09608b31c66b",
 Evaluatable->False],
Cell[127519, 2737, 150, 2, 50, "Text",ExpressionUUID->"fef4c91f-7c00-4f13-a0b0-8af2e37e1e88"],
Cell[127672, 2741, 423, 11, 105, "Input",ExpressionUUID->"1d7f2702-f346-4269-9c06-e85b18fefa7a",
 Evaluatable->False],
Cell[128098, 2754, 140, 2, 50, "Text",ExpressionUUID->"9eebbe97-a95e-4483-9d53-8566dce2d701"],
Cell[128241, 2758, 485, 12, 74, "Input",ExpressionUUID->"8cd2434b-fcbf-4427-b9d0-090d34f64267"],
Cell[CellGroupData[{
Cell[128751, 2774, 213, 4, 44, "Input",ExpressionUUID->"880a1f34-30ca-4442-8539-bb89145c79ab"],
Cell[128967, 2780, 279, 6, 50, "Output",ExpressionUUID->"30acd82e-0420-4007-9961-17bcb85f4a7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129307, 2793, 91, 0, 136, "Section",ExpressionUUID->"392eb542-1fe1-49c9-bdf7-0cfcb2f70aeb"],
Cell[CellGroupData[{
Cell[129423, 2797, 114, 0, 60, "Subsection",ExpressionUUID->"422ae366-add2-4573-a138-4275eb6f9c38"],
Cell[129540, 2799, 446, 8, 83, "Text",ExpressionUUID->"a46bd466-8998-4304-83bc-8d09aeb04f14"],
Cell[129989, 2809, 226, 8, 50, "Text",ExpressionUUID->"83192c97-5346-4a55-9d03-ec097c73247a"],
Cell[130218, 2819, 393, 10, 74, "Input",ExpressionUUID->"1cb4e51c-833a-409a-ada0-d2e4a2a6fd29"],
Cell[CellGroupData[{
Cell[130636, 2833, 128, 1, 44, "Input",ExpressionUUID->"38a2e6e1-2fea-4852-a21f-99981b2c6938"],
Cell[130767, 2836, 152, 4, 50, "Output",ExpressionUUID->"b5c37b1b-7f65-41ae-a374-ec6ac5fa0fad"]
}, Open  ]],
Cell[130934, 2843, 217, 3, 83, "Text",ExpressionUUID->"f6b6f940-8d46-4496-9a49-c9a3b417c7fb"],
Cell[131154, 2848, 147, 2, 50, "Text",ExpressionUUID->"99ee891b-9ae6-4b79-919f-1ebe22e1b9c2"],
Cell[131304, 2852, 402, 10, 74, "Input",ExpressionUUID->"ef3cef50-2af0-433d-87d4-5f66e3c7d9de"],
Cell[131709, 2864, 112, 1, 44, "Input",ExpressionUUID->"93066e62-8ac8-465e-b5fa-f21d624606c3"],
Cell[131824, 2867, 362, 12, 83, "Text",ExpressionUUID->"b313810e-7abc-471b-99c8-8632b5a8e15b"],
Cell[132189, 2881, 312, 10, 44, "Input",ExpressionUUID->"9b4d1fd3-b48a-49e2-9924-3e63ea41a24d"],
Cell[132504, 2893, 319, 10, 44, "Input",ExpressionUUID->"87ee6c92-5879-4b63-9fc5-b71fde2edc05"],
Cell[132826, 2905, 328, 10, 44, "Input",ExpressionUUID->"7a059f4c-49a6-4791-9747-30e6dc4c8ad6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133203, 2921, 121, 2, 136, "Section",ExpressionUUID->"c46c91d0-97a6-408f-8cc3-0b3ce5643bc3",
 CellTags->"StringPatterns"],
Cell[CellGroupData[{
Cell[133349, 2927, 94, 0, 60, "Subsection",ExpressionUUID->"5cddf975-53dc-4f8c-b294-9cda22f125df"],
Cell[133446, 2929, 292, 4, 116, "Text",ExpressionUUID->"cbc5e12b-1db5-4309-909a-78e0fec3bc6e"],
Cell[133741, 2935, 375, 10, 50, "Text",ExpressionUUID->"e3180cf8-5e68-464f-8d1b-563b06da25c4"],
Cell[134119, 2947, 158, 2, 44, "Input",ExpressionUUID->"a8fd3fe4-85f5-4310-bce5-ee5786829311",
 Evaluatable->False],
Cell[134280, 2951, 371, 8, 50, "Text",ExpressionUUID->"de08c3dc-1b72-411b-8854-a98d44dd60d1"],
Cell[134654, 2961, 295, 8, 44, "Input",ExpressionUUID->"06bc3295-2ec6-4901-9b38-b04f06d92602"],
Cell[134952, 2971, 143, 2, 50, "Text",ExpressionUUID->"2071f494-4769-4f7f-ab82-9c6333a878cf"],
Cell[135098, 2975, 296, 8, 44, "Input",ExpressionUUID->"4be915f0-7d72-4f31-9391-c7137d9f0494"],
Cell[135397, 2985, 298, 8, 44, "Input",ExpressionUUID->"14ceace4-4d10-4b59-a531-735ff4296174"],
Cell[135698, 2995, 389, 8, 50, "Text",ExpressionUUID->"49ff58ee-b70c-4a2c-b417-907db6afeee7"],
Cell[136090, 3005, 195, 4, 44, "Input",ExpressionUUID->"29539c96-1ab1-4a80-90b2-a3c9b31454c9"],
Cell[136288, 3011, 353, 8, 50, "Text",ExpressionUUID->"b33f8d37-402b-44ef-88f5-d76824412319"],
Cell[136644, 3021, 404, 11, 44, "Input",ExpressionUUID->"6de53655-a9f4-449a-9dcb-aa6d95406066"],
Cell[137051, 3034, 1362, 34, 83, "Text",ExpressionUUID->"ea7c3e79-bd74-4e7e-875f-b4d4f1b60344"],
Cell[138416, 3070, 258, 6, 44, "Input",ExpressionUUID->"a13f3646-b521-4b77-9568-338dc68023b5"],
Cell[138677, 3078, 351, 8, 74, "Input",ExpressionUUID->"bf72f821-d3e0-4fd2-abaf-d13db8b777f5"],
Cell[139031, 3088, 404, 10, 50, "Text",ExpressionUUID->"192a1306-728a-459a-b23f-6d52d2e35993"],
Cell[139438, 3100, 4745, 94, 99, "Text",ExpressionUUID->"0488476d-ad4d-4ca4-8675-9fd40f9c4320",
 CellTags->"CYU"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144232, 3200, 123, 2, 136, "Section",ExpressionUUID->"16cdd1c2-55ae-480d-9032-78b75344a06e",
 CellTags->"Attributes"],
Cell[144358, 3204, 498, 10, 116, "Text",ExpressionUUID->"6b1bc3f7-143f-4cf1-80f7-e2f6fd49a935"],
Cell[144859, 3216, 576, 15, 135, "Input",ExpressionUUID->"38c0c96c-1b56-4860-ba74-4f648f2f5725"],
Cell[145438, 3233, 281, 7, 44, "Input",ExpressionUUID->"a63fc4e2-3c91-484d-bebd-859ad1a46547"],
Cell[145722, 3242, 474, 9, 83, "Text",ExpressionUUID->"8e0c88b3-dad2-4347-9c7a-3a9968bfcdbf"],
Cell[CellGroupData[{
Cell[146221, 3255, 84, 0, 58, "Subsubsection",ExpressionUUID->"378100b2-e477-4f47-9f4f-f7398dc044e6"],
Cell[146308, 3257, 365, 7, 50, "Text",ExpressionUUID->"054c640a-9a46-46f9-802b-123a36f332d1"],
Cell[146676, 3266, 360, 9, 74, "Input",ExpressionUUID->"c1c223a3-e700-44cb-945d-65a736c95526"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147073, 3280, 88, 0, 58, "Subsubsection",ExpressionUUID->"50694448-331f-4a55-ad88-39218c6e7472"],
Cell[147164, 3282, 368, 7, 50, "Text",ExpressionUUID->"f46a72a0-2870-4ca9-99f5-996782ab5c8e"],
Cell[147535, 3291, 374, 9, 74, "Input",ExpressionUUID->"bc03c766-79b1-4c08-a809-b9b67fb3f9db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147946, 3305, 89, 0, 58, "Subsubsection",ExpressionUUID->"dde2276d-28b1-4314-9c70-7b24e40e1493"],
Cell[148038, 3307, 386, 8, 50, "Text",ExpressionUUID->"86d8decd-cab6-4557-93d7-f8631ce044bf"],
Cell[148427, 3317, 351, 8, 74, "Input",ExpressionUUID->"fec3fd8d-45f0-4640-bfe0-cd6a594a03d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148815, 3330, 95, 0, 58, "Subsubsection",ExpressionUUID->"937d66f6-958f-4d5a-bc65-5b74d92c82eb"],
Cell[148913, 3332, 435, 8, 50, "Text",ExpressionUUID->"426f9011-768c-40c4-90e8-d4819204f673"],
Cell[149351, 3342, 423, 11, 74, "Input",ExpressionUUID->"dc747717-9cfc-4ddd-aaa4-99c4b8b8576e"],
Cell[149777, 3355, 443, 13, 50, "Text",ExpressionUUID->"2d09f0fa-aba9-4865-85d2-409996baf61e"],
Cell[150223, 3370, 422, 11, 74, "Input",ExpressionUUID->"c3d41367-d041-4249-b51a-45cecba4a774"],
Cell[150648, 3383, 324, 7, 50, "Text",ExpressionUUID->"214b18ca-0a40-476c-a0b0-aa35f55aad3c"],
Cell[150975, 3392, 421, 11, 74, "Input",ExpressionUUID->"7fd127cc-465b-4147-90a1-b17f5fd08e6b"],
Cell[CellGroupData[{
Cell[151421, 3407, 261, 5, 55, "Subsubsubsection",ExpressionUUID->"abbe90e3-70ba-4a91-b84c-f9528e2be8dc"],
Cell[151685, 3414, 144, 2, 50, "Text",ExpressionUUID->"59e59dbb-5a3c-43f2-996e-96d081435a6a"],
Cell[CellGroupData[{
Cell[151854, 3420, 6807, 130, 105, "Input",ExpressionUUID->"6b2d9a89-a3c3-4c1b-b81d-cb743c935440"],
Cell[158664, 3552, 13748, 380, 1197, "Output",ExpressionUUID->"a3194525-5da3-4f44-aca1-9d3dff573929"]
}, {2}]]
}, Open  ]],
Cell[172436, 3936, 246, 5, 20, "Subsubsubsection",ExpressionUUID->"20fa8471-941d-46ef-94a9-4a0daca4e45e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172731, 3947, 83, 0, 136, "Section",ExpressionUUID->"4927a65c-0fa7-46fb-a902-a8003f169b7a"],
Cell[CellGroupData[{
Cell[172839, 3951, 160, 2, 46, "ItemNumbered",ExpressionUUID->"c3c1635f-e23c-47e8-be82-b533481e3b85"],
Cell[173002, 3955, 94, 0, 38, "Subitem",ExpressionUUID->"4a0d1021-6ae8-44fa-b333-72edd5bf88f2"],
Cell[173099, 3957, 81, 0, 38, "Subitem",ExpressionUUID->"75433483-51a6-47c8-97cc-459a2a8f2f09"],
Cell[173183, 3959, 106, 0, 38, "Subitem",ExpressionUUID->"3852ecf1-5740-4a4d-a883-202cb81b1af0"],
Cell[173292, 3961, 98, 0, 38, "Subitem",ExpressionUUID->"73ec2040-e4cf-4e17-aaf7-bf02e88b4e7b"]
}, Open  ]],
Cell[173405, 3964, 2198, 51, 99, "Text",ExpressionUUID->"b8919c6f-241e-4348-ba44-b939f08d4005",
 CellTags->"CYU"],
Cell[175606, 4017, 1921, 45, 99, "Text",ExpressionUUID->"b27f3ebe-4bec-4d91-a2df-8f1f009558e0",
 CellTags->"CYU"],
Cell[CellGroupData[{
Cell[177552, 4066, 403, 9, 76, "ItemNumbered",ExpressionUUID->"d499880f-8d75-4297-9dfe-f22a4a14b214"],
Cell[177958, 4077, 523, 14, 74, "Input",ExpressionUUID->"4fe2ec03-6182-4c23-98d4-5c2366424f7c"]
}, Open  ]],
Cell[178496, 4094, 1998, 45, 118, "Text",ExpressionUUID->"03435ca4-29be-46a7-a5a7-7a33c2d14d4a",
 CellTags->"CYU"],
Cell[180497, 4141, 2875, 68, 118, "Text",ExpressionUUID->"5ee4ec33-f5e2-468f-b173-eb46ea3e1119",
 CellTags->"CYU"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183409, 4214, 103, 1, 226, "Section",ExpressionUUID->"bfbbcea8-66e4-4b5d-8407-f5860980be1d",
 CellTags->"Summary"],
Cell[183515, 4217, 116, 0, 49, "Text",ExpressionUUID->"504688e1-98c9-48ae-8836-41ac01b897a2"],
Cell[183634, 4219, 264, 7, 49, "Item",ExpressionUUID->"4df0761d-502a-4ab5-898b-0a3bc201ff0d"],
Cell[183901, 4228, 309, 7, 49, "Item",ExpressionUUID->"7519ddad-9e83-4a3b-95e8-52b8ebed1614"],
Cell[184213, 4237, 344, 8, 49, "Item",ExpressionUUID->"14b22921-8e52-4fb0-bab1-72848566cd00"],
Cell[184560, 4247, 269, 7, 49, "Item",ExpressionUUID->"cf727770-56b5-4007-a70a-8b93a09d1e47"],
Cell[184832, 4256, 285, 7, 49, "Item",ExpressionUUID->"b03576af-9fac-4867-a88a-a1c2e0036bbb"]
}, Open  ]]
}, Open  ]]
}
]
*)

